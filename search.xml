<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[持续学习链，安心守住币，相信确权的力量]]></title>
      <url>http://yoursite.com/2018/01/28/%E6%8C%81%E7%BB%AD%E5%AD%A6%E4%B9%A0%E9%93%BE%EF%BC%8C%E5%AE%89%E5%BF%83%E5%AE%88%E4%BD%8F%E5%B8%81%EF%BC%8C%E7%9B%B8%E4%BF%A1%E7%A1%AE%E6%9D%83%E7%9A%84%E5%8A%9B%E9%87%8F/</url>
      <content type="html"><![CDATA[<ul>
<li>区块链数字资产凭什么可以增长数十倍，上百倍？这一点我一直没有想通。<br>仅仅说炒作我是难以信服的。任何领域都可以炒作，但是短期增长如此迅猛，长期还不断持续增长的绝不是垃圾股。<br>仅仅说市面上发行的数字货币基本都是固定数量的，不可增发的，通缩导致增长，我也无法信服。通缩的东西非常多，造个概念缺没有价值，怎么可能成倍增长。<br>那么困扰就更加深了，到底是什么原因导致巨幅增长？最根本的原因到底是什么？</li>
<li>目前短短三周的时间，通过对区块链的学习，有了初步的答案。要想思考的更明白，我想还要几个月的学习和钻研。人不能有完美主，什么都等到万事俱备才行动是不现实的，最终会导致放弃，总是不会去做。所以，我权且先把目前这一点点体会分享出来。</li>
<li>首先称述两个事实。1.中国的房屋自承认私人所有权，允许自由买卖以来，房价增长了数十倍。2.很多年以来，每年美国的证券市场的规模相当于当年美国GDP的10倍。</li>
<li>这两个事实都表达了同一个意思，变现未来。一旦可以确定权利归属，就可以变现未来。投资一个价值会持续增长的物体，价格会随着时间持续增长。当然增长幅度各有不同，受多种原因影响。</li>
<li>以比特币为首的区块链数字货币就解决了确权的问题。比特币的不可更改的高信用低沉本的去中心化的分布式账本解决了重复支付。数字解决了确权问题就不再是数字，而有了价值。比特币不仅解决了确权问题，还已经在全世界一定数量的群体中产生了强烈的共识，且这个群体会越来越大。这会使比特币互联网世界的信用资源，成为数字领域的黄金。</li>
<li>所以目前得出的结论是：入链圈，研究应用价值和底层技术，思考新的应用方向。进币圈，增强判断力，投资优秀的成长性项目，拥有多种变现未来的权利，相信时间的力量，只问耕耘，不问涨跌。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[未来无处不在的区块链——读《图说区块链》有感]]></title>
      <url>http://yoursite.com/2018/01/21/%E6%9C%AA%E6%9D%A5%E6%97%A0%E5%A4%84%E4%B8%8D%E5%9C%A8%E7%9A%84%E5%8C%BA%E5%9D%97%E9%93%BE%E2%80%94%E2%80%94%E8%AF%BB%E3%80%8A%E5%9B%BE%E8%AF%B4%E5%8C%BA%E5%9D%97%E9%93%BE%E3%80%8B%E6%9C%89%E6%84%9F/</url>
      <content type="html"><![CDATA[<ol>
<li><p>分布式记账是什么？</p>
<p>我通过银行转账借给他的10块钱一直没还！</p>
<p>我根本就没从银行收到过这10块钱！</p>
<p>银行：其实是我拿了。</p>
<p>如果每个人都有一个账本记账，且实时同步数据，就不会造成账本的混乱，杜绝中介欺诈。</p>
</li>
<li><p>信用共识是什么？</p>
<p>凭什么我自己买的房子不属于我？</p>
<p>这里没有你的记录，我也没办法。</p>
<p>公信力意指在社会生活中，公共权力面对时间差序、公众交往以及利益交换时，所表现出的一种公平、公正、公开、人道、民主与责任的信任力。当前社会，公信力一般由政府、国家机关或政府授权的第三方组织来提供。</p>
<p>如果信息都写入区块链，信息可以公开查询，可以追踪，可以确认归属，确认转移，不可篡改，那么即使陌生人交流，即使历史时常再久，也可以确定权利，也可以产生共识。</p>
</li>
<li><p>区块链的应用经历了三个阶段，从数字货币，金融领域到区块链大范围多领域应用。读完书的全部内容之后，你会发现区块链的可能应用非常多，很多应用听起来令人激动，效率之刀将更加锋利，把中间环节更彻底的切除。而且提高效率的同时，使信息查询方便，无法篡改，信息可追踪，成本又大幅下降。区块链是人类进化的又一工具，自然而然成为了很多人的信仰，希望区块链的各种项目可以落地，希望能改变世界，能进化。</p>
</li>
<li><p>区块链的应用包括以下几点：</p>
<p>区块链与金融，包括银行，跨境支付，供应链，信息，证券IPO，互助保险。</p>
<p>举例如OK Link汇款。汇款方和收款方直接进行支付、结算，省掉了所有的中间环节费用，整个网络只在中间汇率的基础上收取不超过 0. 5%的费用，绝无其他隐藏费用，并且保证收款人能够收到约定的金额。</p>
<p>又比如自动化对冲基金 LendingRobot Series。普通对冲基金的管理费率通常为 2%，此外还收取 20%的业绩报酬，而 LendingRobot只收取 1%的资产管理费，以及最高不超过 0.59%的基金运营费，而且不收取任何的业绩报酬。</p>
<p>区块链与互联网管理。身份认证，学历认证。</p>
<p>区块链与能源。有迹可循，可以共享。电力，生态系统，智能化调控，根据智能合约，自动检测障碍，自动安排修理。</p>
<p>区块链与政府。基础信息保护，公民身份认证，政府信息公开，政府税收监管，项目公开招标，救助资金监管，彩票网络发行。例如：爱沙尼亚电子居民计划和网络投票系系统。</p>
<p>区块链与医疗。电子病历，DNA档案，药品防伪，蛋白质折叠。</p>
<p>区块链与版权。版权的归属和保护。</p>
<p>区块链与物联网。万物互联，去中心化的物联网，半自主的智能设备。</p>
<p>区块链与农业。农产品商品化，查询生产轨迹。农业保险，防止骗保。</p>
<p>区块链与慈善。降低成本，增强透明度，增加信任感。</p>
<p>区块链与社交网络，与游戏，与电子邮件，与火车票。</p>
</li>
<li><p>诚然，目前区块链的很多想法难以落地，不仅仅是技术原因， 还有政治原因，法律原因，市场接受度原因等等。现在的区块链普及度还远远不够，参与度也远远不够。区块链提供了一种新的信任模式，即相信算法，相信数学。从原来的相信人转变为相信算法。人们总是拿区块链与互联网对比，似乎是世界第三次技术革命的延续，或者是第四次技术革命，不确定这样的提法是否有道理，但是区块链的发展必将更加快速，很快会占领身边的每一个领域。融入其中，快速学习，这才是每一个拥抱未来的人应该做的。</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[确权让财富大爆炸，区块链与量子学的故事]]></title>
      <url>http://yoursite.com/2018/01/14/%E7%A1%AE%E6%9D%83%E8%AE%A9%E8%B4%A2%E5%AF%8C%E5%A4%A7%E7%88%86%E7%82%B8%EF%BC%8C%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%8E%E9%87%8F%E5%AD%90%E5%AD%A6%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      <content type="html"><![CDATA[<h2 id="确权让财富大爆炸，区块链与量子学的故事"><a href="#确权让财富大爆炸，区块链与量子学的故事" class="headerlink" title="确权让财富大爆炸，区块链与量子学的故事"></a>确权让财富大爆炸，区块链与量子学的故事</h2><h4 id="高分提问"><a href="#高分提问" class="headerlink" title="高分提问"></a>高分提问</h4><ul>
<li>不是富二代，不是官二代，靠什么致富？</li>
<li>答：靠的就是认知差异，信息差异。</li>
</ul>
<h4 id="本周精神食粮"><a href="#本周精神食粮" class="headerlink" title="本周精神食粮"></a>本周精神食粮</h4><ul>
<li>本周我的精神食粮是《区块链—量子财富观》这本书。此书由金融领域、物理学领域和区块链领域的研究学者以及区块链技术专家和从业人员共同编撰而成，分上中下三篇。上篇是从金融中介的角度介绍未来新经济理论，区块链使交易速度超过生产速度，投资时代即将到来，确权使财富大爆炸。中篇着重分析区块链的现状和趋势，延伸新经济理论。下篇分析量子力学与区块链的关系。</li>
<li>下面是原文精彩论述与自我感悟穿插分享，感悟理解深刻之后，回头再读再写新的读后感。</li>
</ul>
<h4 id="交易速度正在超越生产速度"><a href="#交易速度正在超越生产速度" class="headerlink" title="交易速度正在超越生产速度"></a>交易速度正在超越生产速度</h4><ul>
<li>由于互联网使交易变得极其容易，消费与投资便可以实现随时转换，“共享经济”也得益于此。</li>
<li>大交易与大生产一样，可以 24小时进行，不分时间、不分场合，没有任何时空限制。</li>
<li>金融必将去中介化。提高交易效率、降低交易成本是金融不断向前演进的逻辑。</li>
</ul>
<h4 id="信息的缺失"><a href="#信息的缺失" class="headerlink" title="信息的缺失"></a>信息的缺失</h4><ul>
<li>过去信息的缺失是由于信息封闭，渠道少，门槛高。互联网时代来临后，出现信息过载，信息噪声越来越多，获取高质量且有效信息的难度越来越大。就像由于粮食短缺饿肚子的人找到米最好，找不到米偶尔找到一些糠也可以下咽果腹。但是粮食不再短缺后，找到一大袋粮食里，几乎全是糠，只有少量米参杂在其中。要筛选出米来费时费力，难度很大。</li>
<li>原来的金融中介可以垄断信息渠道，现在的互联网新金融中介的作用是信息搜集、识别和匹配。未来的金融中介将虚拟化成为区块链上的某些节点，演化成专司处理信息、过滤信息噪声的一个（或者数个）节点。</li>
</ul>
<h4 id="比特币解决的问题"><a href="#比特币解决的问题" class="headerlink" title="比特币解决的问题"></a>比特币解决的问题</h4><ul>
<li>互联网本身的信息是可以无限拷贝、传递的，这本来是它的优点，但到资产确权这儿就是缺点了。所有权是绝对不能拷贝的，支付只能一次合法，如何才能防止重复支付呢？</li>
<li>中本聪设计了一种技术，通过全网用户共同证明每一笔发生的交易，具体的过程是在每一笔交易发生时，全网用户节点竞争，为其盖时间戳。因为时间天然流逝的属性，时间戳一定是唯一的。</li>
<li>由谁来盖时间戳？他设立了一个奖励机制，每 10分钟大家要竞争唯一合法记账权，除了要盖时间戳，证明记的账没错以外，还要有工作量证明——用它的算力去解 SHA256密码学难题，如果谁能最快地解出来，全网其他节点就接受他是唯一合法记账人，就能获得奖励。</li>
<li>区块中的每笔交易必须核对时间戳，保证没有重复支付，这才能“链”成一个合法链条，就是所谓的区块链。</li>
</ul>
<h4 id="墒值降低"><a href="#墒值降低" class="headerlink" title="墒值降低"></a>墒值降低</h4><ul>
<li>什么是墒？混乱程度是墒。</li>
<li>热水水分子剧烈运动，熵值高。冷水水分子稳定，熵值低。</li>
<li>整齐摆放的物体，例如刚刚打开包装的电子产品，给人以美感，熵值低。混乱的物体，例如随手丢一边的耳机，很乱团成一团，熵值高。</li>
<li>平心静气，心如止水，熵值低。心乱如麻，烦躁不安，熵值高。</li>
<li>真正的幸福，是你全身心地投入一桩事物，达到忘我状态，并因此得到内心秩序和安宁的时刻。这就是墒值很低的时刻。</li>
<li>热力学中占统治地位的就是“熵最大原理”，也就是说，任何一个平衡的系统最后一定处于最混乱、温度最均衡的状态。一个系统怎么能不违反“熵最大原理”，而源源不断地降低熵，产生有序价值？</li>
</ul>
<h4 id="麦克斯韦妖理论"><a href="#麦克斯韦妖理论" class="headerlink" title="麦克斯韦妖理论"></a>麦克斯韦妖理论</h4><ul>
<li>麦克斯韦妖理论：耗散一定量的能量，让信息本来不确定的状态即熵最大的状态，变成一个熵减小，而信息确定的状态。</li>
<li>对于分布式决策系统，每一个节点都有一些决策能力，充当了系统的麦克斯韦妖，使得系统的熵值减小了。</li>
<li>殊途同归，生物学研究也发现，大脑里有上百亿个神经元，但不存在任何中心，它是完全分布式的。</li>
<li>自然界中的候鸟和蜜蜂的智能再简单不过，其根本原则只是坚定不移地执行基础协议。</li>
<li>市场基础协议是互通有无、等价交换，消费者只要在几种商品里挑一种他认为最好的，他就是麦克斯韦妖，他就对这个系统的熵值减少做了贡献。</li>
<li>根据中国人民银行征信中心的定义，信用“指在交易的一方承诺未来偿还的情况下，另一方为其提供商品和服务的行为”</li>
<li>所谓分布式记账共识，实际上就是希望建立一个麦克斯韦妖的智能系统。每个记账人都变成麦克斯韦妖，为系统哪怕只做一点点贡献，但是整个系统很可能就能保持一个低熵，能生产最重要的信息——信用。</li>
</ul>
<h4 id="量子财富观念"><a href="#量子财富观念" class="headerlink" title="量子财富观念"></a>量子财富观念</h4><ul>
<li>智能合约产生协议和共识，分布式记账不可更改，进而产生人与人之间的信任。区块链中每一个参与者都是麦克斯韦妖，都为总体降低熵值作出贡献，能产生更大价值，可以使各行各业都极大地提升效率。确权使每个人对未来产生确定性，且经济的发展使交易速度超过生产速度，每个人都可以参与投资，财富将有机会极大增加。数字资产不仅作为一种另类投资出现，以后将成为个人最大比例财富的表现形式。这就是量子财富观念。</li>
<li>量子世界告诉我们：在看见的世界后面，还有一个看不见的世界。过去我们讲眼见为实，耳听为虚。现在其实眼见都不一定是真的，眼见只是管中窥豹，盲人摸象，看到了真相的一部分。大数据可以帮助人看到事情的全貌。大数据是描述看不见的量子关联的最直接的信息资源。</li>
</ul>
<h4 id="展望未来"><a href="#展望未来" class="headerlink" title="展望未来"></a>展望未来</h4><ul>
<li>如果针对微信上每一条数据都到银行去确权一下，或者是要申请专利，在线下不依赖任何中心就想确权网上数据的话，成本一定会高到完全无法想象。区块链则可以低成本记录。</li>
<li>创意关系、信息、人情、声誉，这些都是经济活动中极为重要的资源，但是在传统的经济计量中，这些从来都不能进入计算范畴，也从来都不作为资产对待，当然更形不成相应的资本市场。</li>
<li>大量的事实说明：思想的变现是创新最大的动力。而区块链能够为互联网上的大数据确权，同时也为思想的确权、创意的确权、关系的确权，创设完美的技术前提。</li>
<li>对于我们中国人，印象最深刻的例子是 30年前我们几乎没有房地产的确权，当时基本都是单位分房。现在我们只做到了对房地产的部分确权，即所谓 70年使用权，但是房地产市场给我们带来的财富，已经让很多中国家庭的经济状况有了天翻地覆的变化。所以金融史上，任何一次资产的确权，都很有可能形成一次新的造富运动。</li>
<li>我们认为对新事物和新技术的出现应该充满热情和敬畏，至少在历史的车轮滚滚向前碾压之后不应留有任何遗憾，但同时也应保持充分的客观和理性。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Python notes1]]></title>
      <url>http://yoursite.com/2017/08/20/Python%20notes%201/</url>
      <content type="html"><![CDATA[<h2 id="1wd1今日收获："><a href="#1wd1今日收获：" class="headerlink" title="1wd1今日收获："></a>1wd1今日收获：</h2><ul>
<li><code>open</code>打开文档流</li>
<li><code>readline()</code>，读取每一行，返回string</li>
<li><code>strip(&#39;\n&#39;)</code>，去除字符，返回string</li>
<li><code>split(&#39;,&#39;)</code>，分离字符串，返回list</li>
<li><code>h = {l[0]:l[1]}</code>，建立dictionaries</li>
<li>for循环大法好，充分利用它，它不会累死，让它一直跑吧</li>
</ul>
<h2 id="1wd2今日收获："><a href="#1wd2今日收获：" class="headerlink" title="1wd2今日收获："></a>1wd2今日收获：</h2><ul>
<li>使用<code>with open() as xxx</code>, 不需要关闭file</li>
<li><code>string.strip()</code>, 去掉某些字符串，返回str</li>
<li><code>string.split(&#39;,&#39;)</code>，根据()里的内容，分开字符串，返回array</li>
<li>创建dictionaries的方法：建立空dictionaries，<code>d = {}</code>, 然后再补充key 和d[key]</li>
</ul>
<h2 id="1wd3今日收获"><a href="#1wd3今日收获" class="headerlink" title="1wd3今日收获:"></a>1wd3今日收获:</h2><ul>
<li>昨天对于空dicttionaries，补充key和d[key]的理解是不深刻的。</li>
<li><p>整个作业的最难点就在于认识到如何建立dict，就是一个用法：</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d = &#123;&#125;</div><div class="line">d[key] = value</div></pre></td></tr></table></figure>
</li>
<li><p>并且活学活用，例如作业里的把list转变dict</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">d[data[0]] = data[1]</div></pre></td></tr></table></figure>
</li>
<li><p>又例如作业里的保存天气值</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">history = &#123;&#125;</div><div class="line">if city in d.keys():</div><div class="line">    history[city] = d[city]</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h2 id="1wd4今日收获"><a href="#1wd4今日收获" class="headerlink" title="1wd4今日收获:"></a>1wd4今日收获:</h2><ul>
<li><code>if __name__ == &#39;__main__&#39;</code>到底是什么鬼，在<a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do" target="_blank" rel="external">Stackoverflow相关问题</a>中找到了答案。</li>
<li>使用多个<code>def</code>和<code>if __name__ == &#39;__main__&#39;</code>来写查天气程序。保存天气值的问题又出现了，原来使用的新建<code>{}</code>然后循环，在拿出去当作函数调用时，却无法使用。只能转变方法用<code>list</code>的<code>append</code>函数来增加，然后继续通过循环来输出。</li>
<li>及时<code>git commit</code>,先让程序跑起来，然后丰富各个功能，小步迭代，逐步优化。让自己的github绿油油，及时代码质量暂时不高，也体现强度和韧性啊。</li>
<li>快捷缩写。  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git config --global alias.st status</div><div class="line">$ git config --global alias.ci commit</div><div class="line">$ git config --global alias.pu push</div><div class="line">$ alias ll=&apos;ls -lG&apos;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="1wd7今日收获"><a href="#1wd7今日收获" class="headerlink" title="1wd7今日收获"></a>1wd7今日收获</h2><ol>
<li><p>见贤思齐，学习<a href="https://github.com/thxiami/Py101-004" target="_blank" rel="external">thxiami</a>和<a href="https://github.com/Vwan/Py101-004" target="_blank" rel="external">Vwan</a>，能力不够就模仿，跟随。他们和教练一样都是我的老师。</p>
</li>
<li><p>完善weather程序后，发现久违的git错误。原因不明，git push失败，所以尝试git pull。结果出现以下错误。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">You have not concluded your merge (MERGE_HEAD exists).</div><div class="line">Please, commit your changes before you can merge.</div></pre></td></tr></table></figure>
</li>
</ol>
<p>之后查找<a href="https://stackoverflow.com/questions/11646107/you-have-not-concluded-your-merge-merge-head-exists" target="_blank" rel="external">stackoverflow</a>找到解答。<br>不知原因造成冲突，<code>git merge --abort</code>取消即可解决冲突。</p>
<ol>
<li><p>在@vwan那里学到了，算法性能比较。使用timeit 模块比较两个方法的运行时间；使用cProfile or profile比较两个方法的内部调用情况。记录下来。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">from timeit import timeit</div><div class="line">t1=timeit(generate_random_r1,number=1000)</div><div class="line">t2=timeit(generate_random_r2,number=1000)</div><div class="line">print (f&quot;R1 duration:&#123;t1&#125;&quot;)</div><div class="line">print (f&quot;R2 duration:&#123;t2&#125;&quot;)</div></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import cProfile</div><div class="line">cProfile.run(&quot;generate_random_r1()&quot;)</div><div class="line">cProfile.run(&quot;generate_random_r2()&quot;)</div></pre></td></tr></table></figure>
</li>
<li><p>使用列表解析式。代码行短，运行快。\n<br> <code>[int(i) for i in str(randint(1,20))]</code> \n<br>[]为返回值，int(i)为[]中的各元素，for循环是条件。</p>
</li>
<li><p>RTFM,没有好好查文档，提了小白问题。记录一下。<br> print(f”{num}”),其中print里为什么有f，ok，现成模板给你，见<a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" target="_blank" rel="external">文档</a>，恩，这个用法还有个学名叫<a href="https://stackoverflow.com/questions/39081766/what-are-formatted-string-literals-in-python-3-6" target="_blank" rel="external">Formatted string literals</a>，stackoverflow有完美的解释。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">title = &apos;Mr.&apos;</div><div class="line">name = &apos;Tom&apos;</div><div class="line">msg_count = 3</div><div class="line"></div><div class="line"># This is explicit but complex</div><div class="line">print(&apos;Hello &#123;title&#125; &#123;name&#125;! You have &#123;count&#125; messages.&apos;.format(title=title, name=name, count=count))</div><div class="line"></div><div class="line"># This is simple but implicit</div><div class="line">print(&apos;Hello %s %s! You have %d messages.&apos;%(title, name, count))</div><div class="line"></div><div class="line"># This is both explicit and simple. PERFECT!</div><div class="line">print(f&apos;Hello &#123;title&#125; &#123;name&#125;! You have &#123;msg_count&#125; messages.&apos;)</div></pre></td></tr></table></figure>
</li>
<li><p>将列表组合成字符串。</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">num = random.sample(range(1,9),4)</div><div class="line">print(num)</div><div class="line">print ((&quot;&quot;).join(str(x) for x in num))</div></pre></td></tr></table></figure>
<p> <code>(&quot;&quot;).join()</code>完美的方法</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[The Personal MBA]]></title>
      <url>http://yoursite.com/2017/08/20/The%20Personal%20MBA/</url>
      <content type="html"><![CDATA[<h2 id="The-Personal-MBA"><a href="#The-Personal-MBA" class="headerlink" title="The Personal MBA"></a>The Personal MBA</h2><ul>
<li>Value creation: <ul>
<li>convenience: quick, reliable, easy, flexible</li>
<li>high-fidelity: high aesthetic, high emotional impact, high social status</li>
</ul>
</li>
<li>Marketing:<ul>
<li>How well are attracting and holding attention?</li>
<li>Remarkable and unexpected words.</li>
<li>Make up a purple cow. Outstanding one.</li>
</ul>
</li>
<li>Sales:<ul>
<li>How well do our customers believe and trust us?</li>
<li>Social proof:<ul>
<li>someone’s vouch? Celebrities?</li>
<li>five star remark on Amazon.</li>
</ul>
</li>
<li>consistency: live a long time.</li>
</ul>
</li>
<li>Value delivery:<ul>
<li>Are we exceeding the customers’ expectation?</li>
<li>Make surprise.<ul>
<li>Customers buy again and recommend to others.</li>
<li>Deliver a high quality products in a fast and reliable manner.</li>
</ul>
</li>
<li>Exceptional customer service.<ul>
<li>Find a way to solve problem, don’t say “I can’t”</li>
</ul>
</li>
</ul>
</li>
<li>Finance:<ul>
<li>Are we making more money than spending?</li>
<li>increase income and reduce outgoings.</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CODE网络基础知识]]></title>
      <url>http://yoursite.com/2016/11/20/CODE%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      <content type="html"><![CDATA[<h3 id="互联网是什么？"><a href="#互联网是什么？" class="headerlink" title="互联网是什么？"></a>互联网是什么？</h3><ul>
<li>互联网是巨大量的独立网络组合，是完全分散的，个体和个体可以任意相连。信息共享是巨大的能量，你有什么有价值的东西和别人分享，别人反之。反正你逃离不了互联网，那么为什么不了解它并使用它。</li>
</ul>
<h3 id="互联网由什么组成？"><a href="#互联网由什么组成？" class="headerlink" title="互联网由什么组成？"></a>互联网由什么组成？</h3><ul>
<li>互联网像邮筒，但是传递的不是实物，而是二进制信息binary information，信息由比特bits组成，bit可以被描述成一对相反的物件，开关，对错，10。8 bits = 1 byte，1000 bytes = 1 kilo byte，1000 kilo bytes = 1 mega byte。</li>
</ul>
<h3 id="信息传播？"><a href="#信息传播？" class="headerlink" title="信息传播？"></a>信息传播？</h3><ul>
<li><p>最初的信息传递非常慢，错误百出，而且太依赖人类。后来开始利用机器，从telegraph电报、braille盲文板、semaphore信号机到今天的electricity，light和radio。一条电缆绑两个灯泡就可以模拟电传播bits，1表示on，0表示off，发送5个0，则通过发送方和记录方约定，记录时间1秒1bit来传输。</p>
</li>
<li><p>当然我们希望单位传输时间比1秒再快一些，所以我们需要增加bandwidth带宽，指一个设备的最大传输能力，用bitrate比特率测量。比特率指给定时间内实际发送的比特数量，通常以秒来计算。不同的速度测量叫做latency延迟，是指一个bit从发送者到接收者所用的时间。8 million bits = 1 megabyte，所以bitrate = 8 Mbps。人类没法这么快，但是机器可以。<a id="more"></a></p>
</li>
</ul>
<h3 id="电线，电缆和无线？"><a href="#电线，电缆和无线？" class="headerlink" title="电线，电缆和无线？"></a>电线，电缆和无线？</h3><ul>
<li>哪种电缆可以传播这么多信息，这些信号可以传播多远？</li>
<li>一种方式是通过ethernet wire以太网，很廉价，用铜线传输电子脉冲electronic pulses。但是传输距离很近，经常发生信号丢失或者被干扰。</li>
<li>短距离远远不够，我们需要传播距离越远越好，那么自然就想到光速比电要快。我们可以把bits当作光束一样通过光纤电缆fiber optic cable传输，光纤电缆被设计为反射光的玻璃线，光束在电缆里上下反弹跳动，直到到达接收端。根据反弹角度不同，我们可以同时传送不同的bits，所有的传输都是用光速。2008年埃及亚历山大附近的电缆中断，极大地影响了大多中东国家和印度的网络。但是光缆非常昂贵并且安装复杂。</li>
<li>如果我们想无线连接，那就要依靠radio无线电。无线比特传输机器通常是无线电信号塔。发送信号的机器需要翻译1010这些二进制转成无线电的不同频率。接收机器逆转这一过程，并将其转回。可以转回到电脑上，因此可以无线上网，但是远离距离源就会接收到乱码。至今我们依然使用有线连接，无线上网只是将bits发送到无线路由器，然后通过物理的线路长途跋涉穿洋过海进行传输。</li>
<li>传输bits的物理方法可能会改变，无论是卫星之间的激光传输还是无人机，二进制的信息表达和发送与接收的传输协议都是一样的。</li>
</ul>
<h3 id="IP地址和DNS"><a href="#IP地址和DNS" class="headerlink" title="IP地址和DNS"></a>IP地址和DNS</h3><ul>
<li>在1970年之前，网络没有互相交流的标准方法。互联网是网络的网络，全球范围内连接了数十亿的设备。个人网络连接到互联网服务提供商ISP，ISP连接其他地方的ISP，相互联系。</li>
<li>互联网是一个真正的设计理念和架构的协议。协议是一个规则和标准，如果各方都同意使用它，将使他们无障碍通信。所有的不同设备在互联网上都有自己独特的地址。地址只是互联网上一个数字，类似电话号码或者一种街道地址。具有唯一性。地址系统在互联网上是相似的，形成一个互联网通信中使用的最重要的协议，因特网协议或者叫IP。计算机的地址称为IP地址，访问网页是你的电脑在询问其他电脑上的信息。你的电脑发送一个信息到另一台电脑的IP地址上，同时也把自己的IP地址告知对方，然后对方对已告知IP地址做出响应。</li>
<li>IP地址不仅仅是一串数字，像家庭住址和身份证号码一样，每一部分都有自己的意义。像所有数字数据一样，这些数字也用bits表示，传统的IP地址是32bits的，地址中的每一部分占用8bits(174.129.14.120)。早期的数字通常由国家网络下分区域网络下分子网络再到具体设备。现在不再有国家网络和区域网络，只有网络和子网络。这种IP地址版本被称为IPv4，设计于1973年，可容纳40亿的唯一IP地址。但是互联网越来越受欢迎，40亿远远不够。后来发明出另一种格式，叫做IPv6，采用128位地址，容纳340后加36个零的唯一IP地址。这样几乎地球上的每一粒沙子都有了自己的IP地址。</li>
<li>大多数用户不关心IP地址，它们关心的是域名系统DNS(Domain Name System)，每一个域名例如www.example.com与唯一IP地址相连接。电脑向DNS服务器发送访问/查找域名的请求，DNS向其他DNS索要域名对应的IP地址，并保存下来，然后把这个IP地址传回给电脑。我们如何让数十亿的设备来找到数十亿的网站呢？没有一个DNS服务器可以处理所有设备的所有请求。DNS服务器分布式连接，并且划分各个区域，主要的负责区域包括.org，.com，.net。DNS最初被创造为公开的交流协议，为政府和教育机构服务。因为它的开放性，容易被黑客网络攻击。一个例子就是DNS欺骗，黑客进入DNS服务器然后改变它，把域名与一个错误的IP地址相关联，让用户进入一个冒牌网站。</li>
<li>互联网在飞速发展，但是域名系统DNS和网络协议是永久不变的。</li>
</ul>
<h3 id="包packets，-路由routing，可靠性reliability"><a href="#包packets，-路由routing，可靠性reliability" class="headerlink" title="包packets， 路由routing，可靠性reliability"></a>包packets， 路由routing，可靠性reliability</h3><ul>
<li>数据是如何非常可靠地传输给你的？你可能以为有一条专线连接服务器和你，你需要一个请求，服务器就发回给你。绝对不是这样的。如果网络是直接专用的连接，那么网络没办法让数百万的用户交流，更没办法保证所有的电脑和线路一直工作。相反，数据传输的过程是非常间接的，没有固定的路径，在传输过程中会不断改变路径。传输过程中的数据我们称为packet一包数据，传输过程类似于开车去目的地，一条路交通堵塞就换一条路走。就像车可以运输货物，许多种类的数据信息可以由IP packets运输。想象航天飞机要从建造地到发射地，不适合组装好之后再运输，所以拆分成很多部分运输，它们通过不同的路径，不同时间到达目的地。一旦全部到达目的地，就把这些部分组转好。如果要把很清晰的照片传给别人，那么照片是由数百万个1，0bits，打包成一个packet。这些信息迅速分裂成数百个或数千个小部分packets，这些packets没有司机，也无法选择路线。每个packets都有自己的IP地址，记录了从哪里来到哪里去。</li>
<li>互联网上一种特殊的电脑叫做路由器，就像是交通管理员一样，保持packets在网络中通常。如果一个路径堵塞了，其他独立的packets会走其他路径，可能到达目的地的时间有细微差别，或者并不按照顺序。作为网络协议的一部分，每个路由器都记录了多个不同路径来传送packets，并且选择最廉价cheapest的可用路径，cheapest不仅指花费，还指时间和其他非技术因素，例如政治，企业间关系。往往最好的数据传输路径不是直接传输。选择路径可以使网络有容错性，意味着网络即使有其他干扰也可以正常传输packets。这是互联网关键原理的基础：可靠性。</li>
<li>TCP(transmission control protocol)传输控制协议，TCP管理着所有发送和接收的数据，例如packets。当很多被分离的packets到达目的地时，TCP会做清单全面清查，并且传回接收到每个packet的信息。如果所有的packets都到了，TCP会签名目录清单，完成传输。如果TCP发现有些部分缺失，则不会签名。每一个缺失的不完整的packet，服务器会重新发送它们。一旦TCP确认这些部分是所缺失的部分，完成传输。</li>
<li>TCP和路由系统是可伸缩扩展的，它们可以与8个或者8十亿个设备合作。由于存在容错性和冗余性的原理，路由越多网络越可靠。我们可以在不中断连接的情况下扩展网络。数以亿计的电子设备和网络可以连接，可以互相交流工作，是因为大家都遵循互联网数据传输的标准。互联网设备和路由帮助所有的packets去被组装的目的地。</li>
</ul>
<h3 id="HTTP和HTML"><a href="#HTTP和HTML" class="headerlink" title="HTTP和HTML"></a>HTTP和HTML</h3><ul>
<li>URL(Uniform Resourse Locator)统一资源定位器，就是网址。HTTP(Hypertext Thansfer Protocol)超文本传输协议。可以当作是浏览器与服务器交流的语言。当一个电脑向另一个电脑要一份文件，即发出GET请求，请求文件的名称。如果你尝试登陆一个网站并加载登录页面，正在做的事就是发送一个GET请求到服务器。服务器返回写着登录页面的HTML代码。HTML(Hyper Text Markup Language)代表超文本标记语言，告知网络浏览器如何制作网页，包括标题，字体，加粗，超链接，加图片等等。文本直接包含在HTML里，但是图片和视频则有自己URL的独立文件，也需要请求。所以有大量图片和语音的HTML网页通常加载的比较慢，因为请求较多。另外一个请求是POST请求，用来填写表格或输入一个搜索查询。发送纯文本请求到web服务器。服务器来计算是否有数据可以配对。COOKIES是网站用来记住你是谁的唯一途径，所有的cookie数据是一个ID卡，是一串代表个人的数字。下一次重新访问网站时，浏览器会在发送请求时自动附上这个ID，所以服务器看到请求和ID，则直接打开个人网页。</li>
<li>互联网是完全开放的，所有的连接是共享的，信息传输是以明文方式的。这使得信息安全是个重要议题。安全的网站会在一个安全的频道上交流，使用一种叫做SSL(Secure Sockets Layer)安全套接字层和继任者TLS(Transport Layer Security)传输层安全保护。可以当作在信息周围包裹的一层安全层，防止他人的窥探或者篡改。有锁出现在浏览器地址栏，并且遵循HTTPS(Hypertext Thansfer Protocol Secure)协议，确保HTTP请求的安全性。当一个网站与浏览器进行安全连接时，首先提供一个数字证书DIGITAL CERTIFICATE，表明ID，证明这确实是它声称的网站。数字证书由专业证书机构颁发，这些机构审核网站，颁发证书，确认身份，就像政府颁发ID或护照一样。如果网站想要进行安全连接，但是没有合适的证书，那么浏览器就会发出警告。这就是浏览器协议，网络协议的一部分。</li>
<li>HTTP和DNS管理网络文件的传输和接收。TCP/IP和路由把信息分解成众多小packets传输。packets本身由二进制数字组成，连续的1、0。物理上由电线， 电缆和wifi传播。</li>
</ul>
<h3 id="加密Encryption和公钥Public-keys"><a href="#加密Encryption和公钥Public-keys" class="headerlink" title="加密Encryption和公钥Public keys"></a>加密Encryption和公钥Public keys</h3><ul>
<li>互联网是开放的公共的，但是我们也有交换一些私人数据的需求，比如银行卡号码，密码，电子邮件等。任何信息都可以通过加密来变成隐私信息，改变或者打乱原始信息信息来隐藏自己。解密就是恢复为原始信息，使信息变得可读。第一个加密方法是以罗马将领JULIUS CAESAR的名字命名的，Caesar Cipher凯撒密码。这个密码是替换算法，原始信息中的每个字母按照字母表的顺序用固定间隔后的字母来代替原字母。如果这个间隔仅仅由发送者和接收者知道，那么这个方法就叫做key钥匙，使读者可以解开秘密。但是这个算法有个致命的缺点，他人很容易通过逐个尝试来找到key，因为英文单只有26个，尝试26次总能破解。后来改进为每个字母都增大加密数量级，用不同的间隔来加密不同字母，key不再是一位数字。10位数字的key会产生100亿种可能性。人类要破解得花好几个世纪，但是我们今天的时代，电脑可以轻松在几秒钟就试遍这100亿种可能性。所以要有新的方法来让破解变的更困难，要在合理时间内可能性更多。如今的信息交流被256bit的key加密，仅仅一个字母就要破解数万亿年。但是随着计算机计算功能的指数型上升，这种方法也会变得不一定安全。</li>
<li>当发送者和接收者共享同一个密钥来加密和解密信息，称为对称加密SYMMETRIC ENCRYPTION。这种加密要求两人提前私下对秘密的key达成一致，但是互联网是开放和公开的，两人无法私下达成一致。所以计算机使用的是非对称加密密钥ASYMMETRIC ENCRYPTION，公钥PUBLIC KEY可以与任何人交换，但是私钥PRIVATE KEY不会分享。公钥是用来加密信息的，所有人都可以用它来创建加密信息。而私钥则只能解密，通过带有私钥的电脑。像信箱一样，其他人有钥匙打开投递口放入信件，但是只有自己可以打开邮箱来取出所有的信件。公钥密码体制是公开互联网上加密信息的基础，包括访问网络的安全协议SSL和TLS。浏览器地址栏有锁或者显示Https，那么就表明在使用公钥密码体制来交换信息。</li>
</ul>
<h3 id="网络安全和犯罪"><a href="#网络安全和犯罪" class="headerlink" title="网络安全和犯罪"></a>网络安全和犯罪</h3><ul>
<li>信用卡被盗，权力机关和服务机构记载的个人信息记录被公开，甚至黑客能黑进核电厂和无人驾驶飞机，网络犯罪越来越普遍。这一切都是利用硬件或者软件的漏洞或者利用人自身使用软件的疏忽进行。具体是以以下三种进行的software viruses软件病毒，distributed-denial-of-service(DDoS)拒绝服务攻击，Phishing scams 钓鱼欺骗。</li>
<li>软件病毒，是一个可执行的程序，被用户无意中安装，然后对用户电脑进行破坏和干扰，也可能传播到其他电脑。软件病毒会伪装成系统安全升级来诱导受害者安装，也可能受害者电脑上的软件有漏洞，攻击者可以在对方毫不知情的情况下自行安装病毒。一旦病毒在电脑上存在，可能会偷取或者删除你的文件，控制其他程序甚至远程操纵电脑。</li>
<li>黑客可以操控数以万计的电脑来用作电子军团digital army或者称为僵尸网络botnet来攻击网站。这种攻击叫做distributed-denial-of-service拒绝服务攻击。攻击是指给一个网站不停地发送请求，分布意味着多个不同电脑同时发送。多数网站设定了一天响应数百万个请求，但是如果有人从不同地方发送上亿个请求，电脑就会过载overloaded然后停止响应。</li>
<li>钓鱼欺骗是指有人发送大量欺骗性邮件，诱导人们分享自己私密的信息。欺骗性邮件会伪装成人们信任的邮件来源，要求人们点击链接，点击链接之后，会带受害者进入一个假页面，然后要求对方输入账户和密码，黑客可以利用登陆证书(login credentials)来连接受害者真正的账户窃取信息甚至偷钱。</li>
<li>你可能认为多数网络犯罪是由于电脑系统的安全设计有问题，但是据统计超过90%的被黑客攻击是由于人们犯的愚蠢错误，比如自己贪小便宜点开虚假网站链接输入自己的信息，或者随便下载不明真相安装包，或者捡了一个U盘随意插入电脑USB插口。</li>
<li>以下是一些个人可以避免被黑客攻击的方法。<ul>
<li>用较长的复杂密码</li>
<li>检查真实的网站地址</li>
<li>经常更新安全系统</li>
<li>不要安装你不信任的软件</li>
</ul>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[有关美国大选的评论]]></title>
      <url>http://yoursite.com/2016/11/13/%E6%9C%89%E5%85%B3%E7%BE%8E%E5%9B%BD%E5%A4%A7%E9%80%89%E8%A8%80%E8%AE%BA/</url>
      <content type="html"><![CDATA[<h2 id="有关美国大选的评论"><a href="#有关美国大选的评论" class="headerlink" title="有关美国大选的评论"></a>有关美国大选的评论</h2><ul>
<li>by游山打猎<br>在今天这个社交媒体深化到每个人日常里面的时候，我们的信息需求，越来越倾向于情绪、新奇、戏剧效果等等，距离甄别、客观、分析越来越远。其实最明显的例子就是微信公号生态，诉诸于情绪，吐槽，夸张，谣言……所以，Trump更合适这个新的传播环境，不用讨论政策，只要诉诸于情绪，甚至恐惧。最后，胜利属于了「激发情绪、吐槽一切+爱国主义」。<br>人需要去找到「信」的和激情，或者说，人总要处于这种寻找状态里。</li>
<li>by小道消息<br>在整个大选期间，在媒体长篇累牍轰炸的间隙，我只关注了三件事情：1、川普和希拉里在社交媒体上的关注度，他们发布内容的转发、点赞数量；2、川普和希拉里的线下活动中，人群的参与程度；3、提前投票期间，注册选民的投票率。我不太在意媒体分析，民调数据，和大数据公司的预测。所有我关注的三个点，在数据上也可能存在偏差。但是，它们和一边倒的媒体轰炸、数据洪流相比，我觉得污染要少一些，干扰也要少一些。</li>
<li>by阑夕<br>民主选举的核心原则之一，就是对游戏规则的尊重，选前充分竞争，选后认赌服输。<br>「黑天鹅」事件当然会对传统的经验主义乃至数据模型产生打脸，但是它同样是更新知识库存的最好机会。就像一名经济学家预测走势错误而一个小孩通过掷硬币猜对了，这不意味着应该推翻前者的学识而崇尚后者的本能。</li>
<li>by萌c<br>因为所有人都忽略了一个人群：受教育程度不高的乡村白人男性。这一次，出来投票的选民人数预计超过1.4亿，为美国历史最高。虽然Trump在竞选中惹怒了女性，惹怒了西班牙裔，惹怒了黑人，但是受教育程度不高的乡村白人男性的投票率实在是太高，直接无视了所有对Trump不利的选情。之前Trump总是说“民调都是错的，我有好多隐藏的选民不敢说自己支持Trump，但选举日就会出来投我。”所有媒体都嘲笑他，因为民调在过去的选举中，都还算准。结果Trump真的说对了！隐藏白人男性选民真的出来投Trump了！</li>
<li>by keso<br>政治正确 (英语: political correctness; 缩写: PC)，是指使用一些用词及施行部分政治措施，避免冒犯及歧视社会上的弱势群体，如不能冒犯少数族裔、女性、同性恋者及跨性别人士（LGBT）、不同的宗教信仰或持不同政见者、及残疾人士。<br>在我们弱势的地方，支持政治正确，在我们强势的地方，让政治正确去死。这是一种极其现实的功利主义，你可以不喜欢，但你不能不允许别人功利。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[逻辑学习之一]]></title>
      <url>http://yoursite.com/2016/11/07/%E9%80%BB%E8%BE%91%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<h1 id="逻辑学习"><a href="#逻辑学习" class="headerlink" title="逻辑学习"></a>逻辑学习</h1><h2 id="Knowledge知识"><a href="#Knowledge知识" class="headerlink" title="Knowledge知识"></a>Knowledge知识</h2><p> 尝试解释一下知识：</p>
<ol>
<li>知识是被验证为真实的信念。</li>
<li>关于真实。相信一件事并且这件事是真的并不是知识，因为缺乏验证。而认识论所解决的问题就是怎样恰当地证实真实的相信。如何验证事实就是各种主义的争论。</li>
<li>知识论的核心争论在于是否承认先验存在，选择承认就是以逻辑学和数学作为证据。尽管直觉上很难承认，因为直觉上看来所有的知识都源于经验，由观察经验总结得来，属于后验。</li>
<li>关于相信有两个误区：没有充分证据就相信事情真实性是非理性的恐惧；认为一个人想了解一件事就必须相信它是真的，这是非理性的判断。知识与信仰和观点不同，某人声称他相信一件事是事实，当然他有可能犯错误，因为这件事不一定是真的。这就是信仰和观点的特点。但是知识不同，知识一定是真的，经过验证的，且你相信的。</li>
<li><p>区分知道与能不能做。一个人只是知道如此(knowing-that)但是没有做到知道如何(knowing-how)，那么就是解说员与运动员的区别。换句话说就是解说员有命题性知识，却没有过程性知识；也就是知道理论，但不会做。<a id="more"></a></p>
<p> 在基督教神学中，观察人认识(神)的四个向度区块分类:</p>
</li>
</ol>
<table>
<thead>
<tr>
<th style="text-align:center">——</th>
<th style="text-align:center">我知道</th>
<th style="text-align:center">我不知</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">你知道</td>
<td style="text-align:center">已知区</td>
<td style="text-align:center">学习区</td>
</tr>
<tr>
<td style="text-align:center">你不知</td>
<td style="text-align:center">解说区</td>
<td style="text-align:center">未知区</td>
</tr>
</tbody>
</table>
<p>  所以要想获得知识，就要在学习区学习他人的真相，然后思考对方的验证过程是否符合逻辑，然后坚定不移地相信，随后开始实践，刻意练习，不断重复熟练，直到能到解说区，为他人讲解的地步。在未知区不断探索真相，大胆假设，然后用逻辑来验证它。大胆从多角度试错，直到最终自己感觉逻辑自洽，然后继续坚定不移地相信，随后开始实践，刻意练习，不断重复熟练，直到能到解说区，为他人讲解的地步。</p>
<h2 id="Concept概念"><a href="#Concept概念" class="headerlink" title="Concept概念"></a>Concept概念</h2><ul>
<li>概念是抽象的、普遍的想法，是充当指明实体、事件或关系的范畴或类的实体。在它们的外延中忽略事物的差异，如同它们是同一的去处理它们。</li>
<li>概念是意义的载体，而不是意义的主动者。一个单一的概念可以用任何数目的语言来表达；术语则是概念的表达形式。概念在一定意义上独立于语言的事实使得翻译成为可能 - 在各种语言中词有同一的意义，因为它们表达了相同的概念。</li>
<li>概念是人类对一个复杂的过程或事物的理解。从哲学的观念来说概念是思维的基本单位。在日常用语中人们往往将概念与一个词或一个名词（术语）同等对待。</li>
<li><strong>概念内容（内涵）</strong> 包括所有一个组成该概念的事物的特性和关系。比如“饲养技术”的内容包括所有有关于这个技术的特性。但在定义这个概念时人们挑选出这些特性中最关键的，比如：“饲养技术是繁殖、喂养、圈养和使用农业用动物和以此提取有价值的产品的技术”。</li>
<li><strong>概念范围（外延）</strong> 是指所有包括在这个概念中的事物，比如“白”的概念范围是所有白色的事物。范围相同的概念被称为是相当的，在逻辑研究中，尤其是在数学逻辑中相当的概念往往被看作是相同的。</li>
<li>在古希腊和罗马概念被定义为抽象和区别后获的定义。</li>
<li>在中世纪概念被定义为“事物的一切”（Universalia post res），来说明一个概念包括它所定义的所有的事物。</li>
<li>笛卡尔和莱布尼茨将概念的清晰度和分明度称为是概念的特征。</li>
<li>康德区分概念与见解：他认为见解是对个别事物的想象，而概念则是对多个事物的共同点的想象。</li>
</ul>
<h2 id="Fallacy谬误"><a href="#Fallacy谬误" class="headerlink" title="Fallacy谬误"></a>Fallacy谬误</h2><p>指不当的推理思路，而谬论指不当的推理言论，可能是说者有不当思路，或说者无不当思路，但意图使听者产生不当思路或其言论明显容易误导听者产生不当思路。</p>
<h3 id="Anecdotal-fallacy，轶事谬误"><a href="#Anecdotal-fallacy，轶事谬误" class="headerlink" title="Anecdotal fallacy，轶事谬误"></a>Anecdotal fallacy，轶事谬误</h3><p>根据传闻、故事等少数个例推理出一般性的结论。仅仅用个人例子来论证，却无视有明显证据的统计数字。是常见偏差样本Biased Sample谬误的形式之一，也是以偏概全Sampling bias形式之一。</p>
<ul>
<li>轶事证据（Anecdotal evidence）或传闻证据系指来自传闻、故事的证据。有些传闻往往细节详细、诩诩如生，让人印象深刻；有些案例则以新闻、八卦的形式被人一传再传，造成三人成虎，让人听久了便信以为真。</li>
<li>误导性鲜活个案（misleading vividness）是轶事谬误的一种，系选取少数特殊个案，提供非常充分的细节，诱导听者相信其为一般性的现象。</li>
<li>例子1：喜欢运动的A由于怀孕想放弃剧烈运动，选择高尔夫。但是B建议不要选高尔夫这项运动，因为她的叔叔打高尔夫从球车上掉下来，摔断了腿，现在还是残疾人。</li>
<li>例子2：A说，系好安全带会降低车祸受伤的风险。B说，绝不是，她的叔叔有一次车速过快，遭遇车祸，由于没系安全带直接飞出车窗，保住了一条命，如果系安全带早就被撞死了。</li>
<li>例子3：美国的飞机机票包括人寿险，但是人们担心自己的安全和家人的生活，所以倾向于再次购买航空意外险。</li>
<li>例子4：你看，印度有位瑜珈大师不吃不喝也能生存，所以所有人都可以不用吃喝就能生存。</li>
<li>例子5：ＸＸ庙真的很神，我朋友跟我说，他本来得了不治之症，连医生都宣告无药可医，结果他去那个庙拜拜之后，竟然不治而愈。</li>
<li><p>例子6：吸烟与肺癌无关。我有个亲戚，每天5支烟，活到了90多岁；有个朋友，从来也不吸，40多岁就得肺癌死了。</p>
<p>  Because calamities are so vivid and easily brought to mind, we tend to overestimate their probability when we intuitively judge what will happen.<br>因为灾难总是生动的并且大脑很容易想到，当我们直观地决策未来的时候，我们倾向于过度估计灾难发生的可能性。</p>
</li>
</ul>
<h3 id="诉诸可能或把合理当正确，Appeal-to-probability"><a href="#诉诸可能或把合理当正确，Appeal-to-probability" class="headerlink" title="诉诸可能或把合理当正确，Appeal to probability"></a>诉诸可能或把合理当正确，Appeal to probability</h3><p>基于一件事有可能或相当可能是真的，就把它当作确定是真的。真相（或事情未来的发展）是唯一的，合理的推测却有很多，当思考或决策忽略了其他可能性，把一种合理的、可能的推测当做正确的、必然的真相，就不是恰当的推理。</p>
<ul>
<li><p>例1:<br>甲：你确定只申请第一大学吗？你的成绩并不算好，缺乏优异事迹，而且大家都觉得你准备不够充分……<br>乙：你认为我不可能上吗？<br>甲：并非“不可能”，只是……<br>乙：既然“有可能”，那就没问题了。</p>
<p>  决策不应只基于“有可能”而做，如许多客观资讯都显示可能性极低还坚持要做，且认为一定会成功，后果很可能不符预期。</p>
</li>
<li><p>例2:<br>网络上很多骇客，你上网不装防火墙，电脑不可避免一定会被入侵的！</p>
<p>  上网不装防火墙会增加电脑被入侵的风险，但并非一定会被入侵。</p>
</li>
<li><p>例3:<br>小华在侦讯时结结巴巴、言词反复，还数度说谎，这就是他涉入了这起大规模诈欺案的明确证据！辩护律师找一堆理由帮这种恶徒脱罪，真是毫无良心！</p>
<p>  要判定小华涉案，通常需有充分的法律证据，小华在侦讯时的表现可作为怀疑小华涉案的线索，但不应据此咬定他必有涉案，及认定试图为嫌疑犯辩护的律师都是昧著良心做事。</p>
</li>
<li><p>例4（布佛氏论证），Bulverism。其假定某观点是错的，由此出发解释为什么许多人会相信它，然后断定该观点是错误的。<br>布佛氏论证预设了一个不当的前提：如果某个信念可以由不理性的因素解释，则我们不必理会这个信念。<br>例一，奶茶里不需要加入鲜奶，只要加入奶精就可以模拟出鲜奶的味道，因此这杯奶茶一定不含鲜奶。<br>例二 ，魔术师可以表演出徒手打碎十块瓦片的诈术，所以小华之前打碎二块瓦片一定不是真的。<br>例三 ，人渴望永恒、也期盼自己能有永恒的生命，这样一厢情愿的想法让我们倾向相信灵魂存在。因此，我们不应该相信灵魂存在。</p>
</li>
<li><p>例5（诉诸阴谋）又称鬼祟谬误（furtive fallacy）<br>在未有充分证据下，主张事情的真相一定是某些人在背后进行阴谋。</p>
<p>  九一一事件其实是美国政府自导自演的一出戏。想想看，飞机有可能撞毁摩天大厦吗？为什么五角大楼的缺口直径与飞机直径不符？袭击后，美国政府怎么能立即公布劫机者的名单？事件不久后就以消灭塔利班政权及捕捉本·拉登为名向阿富汗宣战？然后又以搜寻大杀伤力武器为名向伊拉克宣战？很明显的，九一一事件绝对是美国政府自导自演，目的就是制造借口发动战争，以控制全世界！</p>
<p>  以上资讯和推论可怀疑九一一事件是美国政府自导自演，但在有更明确的证据前，不宜轻率认定它就是事实。</p>
</li>
<li><p>例6 墨菲定律（Murphy’s Law）</p>
<blockquote>
<p>“凡是可能出错的事必定会出错”</p>
</blockquote>
<p>  指的是任何一个事件，只要具有大于零的概率，就可确定它必会发生。</p>
<p>  墨菲定律的名称由来可追溯至1949年间，由当时参与美国空军高速载人工具火箭雪橇MX981发展计划的John Paul Stapp上校旗下研究员首先提出，以当时亦有参与计划的研发工程师爱德华·A·墨菲命名。当时模拟实验已清晰要求参与者把夹用正面夹好，结果还是有人连续47个夹都夹错了，故此引申出一件事可以差到底的时候便会差到极限。</p>
<p>  墨菲定律指“凡是可能出错的事都会在未来出错。”（Anything that can go wrong will go wrong.）。引申为“所有的程序都有缺陷”，或“若缺陷有很多个可能性，则它必然会朝往令情况最坏的方向发展”，讲白话一点“明明之前应该都没问题，偏偏关键时刻就是出错了”。</p>
<p>  墨菲理论没带有事情必坏或必好的成果，他只是让管理者知道，能发生的事，总会发生，换言之，管理者必须对所有可能会发生的事情作好周全的准备，这也就是为何泳池等场所也要配备灭火器等设备的原因之一。</p>
<p>  这句话可以作为对消费者使用某一物品时可能出的错及一切所构成的不便，作出一最坏预测以防治之用，即为所谓的防呆。如3.5吋的软碟设计上，就设计成只有一种方法可以插进机中，正是应用了这定律。</p>
</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[奥派经济学学习之一]]></title>
      <url>http://yoursite.com/2016/11/07/%E5%A5%A5%E6%B4%BE%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%80/</url>
      <content type="html"><![CDATA[<h2 id="奥派经济学学习"><a href="#奥派经济学学习" class="headerlink" title="奥派经济学学习"></a>奥派经济学学习</h2><h2 id="Austrian-School"><a href="#Austrian-School" class="headerlink" title="Austrian School"></a>Austrian School</h2><ul>
<li>只有在逻辑上出自于人类行为原则的经济理论才是真实的。</li>
<li>学派的成员将经济学作为一种先验的（a priori）系统来研究，如同逻辑学和数学，而非作为如地质学一般的实证科学。</li>
<li>先验意味着仅凭推理得到的知识（先于经验观察），而不受直接或间接经验（这里经验通常指通过感官对于世界的观察）的影响。后验指其他种类的知识，也就是知识的得来和证实需要借助经验（经验观察之后），也被称作经验性知识。)</li>
<li>他们认为<strong>价值是由个人的主观偏好所决定的</strong>。强调经济的决定是由个人而非集体所达成的，同时也包括边际主义的理论，以此来比较成本和利润的增长改变。</li>
<li>政策要求政府减少管制、保护私人财产、并捍卫个人自由。<a id="more"></a></li>
</ul>
<h3 id="路德维希·海因里希·艾德勒·冯·米塞斯"><a href="#路德维希·海因里希·艾德勒·冯·米塞斯" class="headerlink" title="路德维希·海因里希·艾德勒·冯·米塞斯"></a>路德维希·海因里希·艾德勒·冯·米塞斯</h3><p>（德语：Ludwig Heinrich Edler von Mises）<strong>奥地利经济学派的院长</strong>，提出理论：</p>
<ul>
<li>人类行为学（Praxeology）是一种研究人类行为的学科。<strong>意指人对于环境及他人有所反应而表现出来的行为</strong>。</li>
<li>米塞斯反对使用观察的方式研究人类行为。<strong>他认为人类的行为太过复杂，不可能将其以解构的方式进行研究，而且人类的害羞本性使得他们的行为总是无法被正确的观察</strong>。也因此，与自然科学不同的是，观察人类行为或者试图以历史资料解释人类的社会科学研究，都难以避免的会受到其他种种没有注意到的研究变因所影响。</li>
<li><p>1、<strong>主张人类所有带有意识的行动都是为了增进他们自己的快乐和满足感</strong>。他谨慎的强调人类行为学并不是要统一定义快乐的目标为何，而只是要研究那些在个人看来能够使他快乐的目标。而一个人增进快乐的方式就是排除那些使他不快乐的来源。由于未来是无法确定的，因此所有人类行为也都是出自对于未来的预测。</p>
<p>  “会行为的人类”被定义为是一个有能力进行逻辑思考的人，否则这个人将只不过是一只被本性所驱动的生物而已。同样的，一个会行为的人类必定有某些让他感到不快乐的来源，同时这个人也相信自己有能力排除这个不快的来源，否则人类根本就不会行动。</p>
</li>
<li><p>2、<strong>主张人类所有的决策都是以排序方式为基础的</strong>。也因此，一个人不可能同时进行超过一种行动，知觉的大脑在同一时间只有可能处理一个决策—即使这些决策可以被迅速排列亦然。因此人类只会先排除掉那个最使他感到不快的来源，接着再排除排序第二紧迫的不快来源。除此之外，米塞斯认为<strong>主观的价值是不可能以数学方式计算的，人不可能以基数来评估他的价值衡量</strong>。举例而言，一个人可以说“我倾向于先买下一台电视机，而不是买下一台DVD播放器”，但他不可能说“我倾向买下一台电视机的欲望高过买下一台DVD播放器的2.5倍。”</p>
<p>  在一个人满足了他最紧迫的目标后，他会接着转向第二紧迫的目标，而第二紧迫目标又总是比他的第一紧迫目标还要来的不重要。也因此，当一个人达成越来越多未来的目标时，个别目标的满足感（或称为边际效用）也会因此减少。这个现象又可以称为边际效益递减。</p>
<p>  因此在人类社会中，许多人类行为都是处于人与人之间的贸易，一个人将他视为较不重要的东西与另一个人交换他视为较重要的东西，而另一个人也对贸易抱有相同的期望，希望换得他认为较重要的东西、而牺牲他认为较不重要的东西。人类行为学对于此领域的研究又称为交易经济学（Catallactics），这也是在经济学界较容易被接受的理论。</p>
</li>
</ul>
<h2 id="卡尔·门格尔"><a href="#卡尔·门格尔" class="headerlink" title="卡尔·门格尔"></a>卡尔·门格尔</h2><p>（德语：Carl Menger）<strong>奥地利经济学派的创始人。</strong></p>
<ul>
<li>人类的行为都是有目的的。</li>
<li>人类喜欢更多的利益。</li>
<li>人类喜欢先行占有利益，而不是让他人抢先。</li>
<li>贸易中的任何一方，都预估自己会因此获利。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[学习command line]]></title>
      <url>http://yoursite.com/2016/11/01/%E5%AD%A6%E4%B9%A0command%20line/</url>
      <content type="html"><![CDATA[<p><strong>全文来自学习codecademy所做的笔记，学习资源<a href="https://www.codecademy.com/learn/learn-the-command-line" target="_blank" rel="external">在此</a>,请自学之后再回来看这个总结。<br>无论是编程学习，还是日常电脑应用，命令行的重要性，快捷性都不言而喻，虽没有图形化的对话框直观，但是处理文件更加迅速，更加适应工作。<br>笔记如下：</strong></p>
<ul>
<li><code>ls</code> 查看文件夹中所有文件</li>
<li><code>pwd</code> 查看当前工作目录</li>
<li><code>cd</code> 进入下一级文件夹</li>
<li><code>cd ..</code> 进入上一级文件夹</li>
<li><code>cd ~</code> 进入主目录</li>
<li><code>mkdir</code> 创建一个文件夹</li>
<li><code>touch</code> 创建一个文件</li>
<li><code>ls -a</code> 查看文件夹中所有的文件包括隐藏文件。 “.”开头的</li>
<li><code>ls -l</code> 以文件长度排序显示文件列表</li>
<li><code>ls -t</code> 以文件最后修改实践显示文件列表</li>
<li><code>ls -alt</code> 上述三者同时满足条件显示文件列表<a id="more"></a></li>
<li><code>cp</code> 复制文件   cp  a文件  b文件夹</li>
<li><code>mv</code> 移动文件 mv a文件  b文件夹   更改文件名 mv a文件  b文件</li>
<li><code>rm</code>  删除文件 永久删除，无法撤回</li>
<li><code>rm -r</code>  删除文件夹和文件夹内的文件，永久删除，无法撤回</li>
<li><code>echo</code> 接收字符串作为标准输出，并且显示到控制台。</li>
<li>standard input, abbreviated as stdin, is information inputted into the terminal through the keyboard or input device.标准输入，简写为stdin，指信息通过键盘或其他输入设备输入到控制台。</li>
<li>standard output, abbreviated as stdout, is the information outputted after a process is run.标准输出，简写为stdout，指信息由进程运行后信息被输出。</li>
<li>standard error, abbreviated as stderr, is an error message outputted by a failed process.标准错误，简写为stderr，指由于错误进程输出的错误信息。</li>
<li><code>&gt;</code>  指令到文件的重新定向标准输出，并重写内容。</li>
<li><code>cat</code>  在控制台显示文件中的内容。以下三种是cat命令重定向到文件。cat代表显示命令，所以控制台显示。</li>
<li><code>cat a文件 &gt; b文件</code>，本来是在控制台显示a文件，但是由于有 &gt; ，标准输出cat a文件重新定向到b文件，结果本应该在控制台显示的内容，现在要在b文件内显示。 另外&gt;有替代功能，b文件被&gt;重写了，内容被替换成了a文件内容。</li>
<li><code>&gt;&gt;</code> 指令到文件的重新定向标准输出，并增加新内容到旧内容后。</li>
<li><code>cat a文件  &gt;&gt; b文件</code>，同上，但是与上不同的是，&gt;&gt; 有追加功能，b文件被&gt;&gt;追加内容，内容中追加了a文件的内容。</li>
<li><code>&lt;</code> 重定向标准输入到指令</li>
<li><code>cat &lt; a文件</code>，&lt;右边的表示标准输入，输入结果到&lt;左边。此时，a文件是标准输入，内容显示在控制台。</li>
<li><code>｜</code> 表示pipe管道，指令到指令的重定向标准输出。</li>
<li><code>cat a文件 | wc</code>，管道左边表示标准输出，管道右边表示标准输入。通过 ｜ 重定向到wc，wc表示内容的行数，单词数和字符数。</li>
<li>多个 ｜ 可以作为链条使用。<code>cat a文件 ｜ wc ｜ cat &lt; b文件</code>，标准输出cat a文件通过管道传给wc，wc本要显示在控制台，但是通过｜又传给cat，最后cat重定向给b文件。</li>
<li><code>sort</code>表示标准输入，并且为标准输出内容按照字母序列排序，并输出到控制台。</li>
<li><code>cat a文件 | sort &gt; b文件</code>，｜左侧标准输出，通过管道传给sort排序，又重定向到b文件中。</li>
<li><code>uniq</code> 表示唯一性，过滤临近的重复行内容并显示到控制台，不一定完全去除重复。</li>
<li><code>sort a文件 | uniq</code> 先对a文件排序，然后通过管道传给uniq，过滤临近重复，可以完全去除重复。</li>
<li><code>grep</code> 表示 “global regular expression print”. 全局正则表达式显示。用规定形式查找文件内容，并且返回结果。区分大小写。<code>grep -i</code> 表示不敏感正则搜索，不区分大小写。</li>
<li><code>grep -R</code>表示查找目录中的所有文件，并输出符合条件的文件名和文件内容。R代表recursive递归。</li>
<li><code>grep -Rl</code>表示查找目录中的所有文件，只输出符合条件的文件名。-R 代表recursive递归， l 代表匹配的文件。</li>
<li><code>sed</code> 表示流编辑器。它接收标准输入并在显示数据之前根据正则表达式修改。类似于查找并替换。</li>
<li><code>sed &#39;s/snow/rain/&#39; forests.txt</code> 为例，s表示substitution替换，在sed中经常使用作为替换功能。snow表示寻找和被替换的内容，rain替换者。此例仅仅替换每行中的第一个snow。</li>
<li><code>sed &#39;s/snow/rain/g&#39; forests.txt</code>，此例中，g代表global全局，表示所有的snow都要被替换成rain。</li>
<li><code>nano</code> 命令行编辑器。类似于桌面端编辑器TextEdit 或者Notepad。nano 文件名，打开了编辑器。在编辑器中可以随意输入内容。编辑器下方是操作按钮，<code>^</code>表示ctrl键，其余为字母。例如ctrl O 表示保存。 O 表示输出。 ctrl X表示退出，X表示退出。ctrl G表示打开帮助。clear表示清空控制台，光标移到最上方。</li>
<li><code>~/.bash_profile</code> 是储存环境变量的文件。当会话开始时，此文件会在执行指令前加载文件内容。</li>
<li><code>～</code>代表用户主目录。 <code>.</code>代表隐藏文件。</li>
<li><code>source ~/.bash_profile</code> 表示在当前会话中激活更改。</li>
<li><code>alias</code> 表示创建键盘快捷键。</li>
<li><code>USER=&quot;Lynn”</code>表示设置环境变量USER为名字Lynn。</li>
<li><code>export</code>表示使变量在当前会话引起的子会话都可用，这个方式使变量在程序中是全局的。</li>
<li><code>echo $USER</code>表示返回变量值。$总是用在返回变量值中。</li>
<li><code>PS1</code>表示命令行提示的标记和格式。<code>export PS1=&quot;&gt;&gt;&quot;</code>设置了命令行变量并且输出了变量。从$标记变成了 &gt;&gt;标记。</li>
<li><code>HOME</code>变量是环境变量，表示显示主目录。</li>
<li><code>PATH</code>变量是环境变量，存储了一系列目录，由冒号隔开。每个目录都有自己执行的脚本，但是PATH变量只显示目录。</li>
<li><code>env</code>命令代表环境，返回当前用户的环境变量。</li>
<li><code>env | grep PATH</code> 显示单独环境变量的值。env标准输出通过管道传到grep，grep寻找PATH值，并且输出到控制台。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[廖雪峰git教程笔记]]></title>
      <url>http://yoursite.com/2016/11/01/%E5%BB%96%E9%9B%AA%E5%B3%B0git%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>系统地学习了廖雪峰的git教程，团队协作必备良品。做如下笔记：</p>
<h3 id="git是什么？"><a href="#git是什么？" class="headerlink" title="git是什么？"></a>git是什么？</h3><ul>
<li>git是目前世界上最先进的分布式版本控制系统（没有之一）。</li>
</ul>
<h3 id="如何安装git？"><a href="#如何安装git？" class="headerlink" title="如何安装git？"></a>如何安装git？</h3><ul>
<li><p>安装Homebrew(推荐方法)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)”</div></pre></td></tr></table></figure>
</li>
<li><p>配置Homebrew</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &apos;export PATH=&quot;/usr/local/bin:$PATH&quot;&apos; &gt;&gt; ~/.bash_profile</div></pre></td></tr></table></figure>
</li>
<li><p>安装git</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install git</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h3 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h3><ul>
<li>初始化一个Git仓库，使用git init命令。</li>
<li>添加文件到Git仓库，分两步：</li>
<li>第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；</file></li>
<li>第二步，使用命令git commit，完成。</li>
</ul>
<h3 id="时光穿梭机"><a href="#时光穿梭机" class="headerlink" title="时光穿梭机"></a>时光穿梭机</h3><ul>
<li>要随时掌握工作区的状态，使用git status命令。</li>
<li>如果git status告诉你有文件被修改过，用git diff可以查看修改内容。</li>
<li>HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset –hard commit_id。</li>
<li>穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。</li>
<li>要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。</li>
<li>工作区（Working Directory）就是你在电脑里能看到的目录</li>
<li>版本库（Repository）工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库。</li>
<li>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指- 向master的一个指针叫HEAD。</li>
<li>第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；</li>
<li>第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。</li>
<li>因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。</li>
<li>每次修改，如果不add到暂存区，那就不会加入到commit中。</li>
<li>场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout – file。</li>
<li>场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。</li>
<li>场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。</li>
<li>命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。</li>
</ul>
<h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><p>之前总结过如何注册github，<a href="https://lovejennifer.github.io/2016/09/02/%E5%A6%82%E4%BD%95%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0github/" target="_blank" rel="external">点此看</a></p>
<ul>
<li>Github提供Git仓库托管服务，只要注册一个GitHub账号，就可以免费获得Git远程仓库。本地Git仓库和GitHub仓库之间的传输是通过SSH加密的。</li>
<li>要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；</li>
<li>关联后，使用命令git push -u origin master第一次推送master分支的所有内容；</li>
<li>此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；</li>
<li>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，当有网络的时候，再把本地提交推送一下就完成了同步。</li>
<li>要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。</li>
<li>Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。</li>
</ul>
<h3 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h3><ul>
<li>Git鼓励大量使用分支：</li>
<li>查看分支：git branch</li>
<li>创建分支：git branch \&lt;\name></li>
<li>切换分支：git checkout \&lt;\name></li>
<li>创建+切换分支：git checkout -b \&lt;\name></li>
<li>合并某分支到当前分支：git merge \&lt;\name></li>
<li>删除分支：git branch -d \&lt;\name></li>
<li>当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。</li>
<li>用git log —graph命令可以看到分支合并图。</li>
<li>Git分支十分强大，在团队开发中应该充分应用。</li>
<li>合并分支时，加上–no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。</li>
<li>修复bug时，我们会通过创建新的bug分支进行修复，然后合并，最后删除；</li>
<li>当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop，回到工作现场。</li>
<li>开发一个新feature，最好新建一个分支；</li>
<li>如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。</name></li>
<li>查看远程库信息，使用git remote -v；</li>
<li>本地新建的分支如果不推送到远程，对其他人就是不可见的；</li>
<li>从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；</li>
<li>在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；</li>
<li>建立本地分支和远程分支的关联，使用git branch –set-upstream branch-name origin/branch-name；</li>
<li>从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。</li>
</ul>
<h3 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h3><ul>
<li>命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id；</name></li>
<li>git tag -a <tagname> -m “blablabla…”可以指定标签信息；</tagname></li>
<li>git tag -s <tagname> -m “blablabla…”可以用PGP签名标签；</tagname></li>
<li>命令git tag可以查看所有标签。</li>
<li>命令git push origin <tagname>可以推送一个本地标签；</tagname></li>
<li>命令git push origin –tags可以推送全部未推送过的本地标签；</li>
<li>命令git tag -d <tagname>可以删除一个本地标签；</tagname></li>
<li>命令git push origin :refs/tags/<tagname>可以删除一个远程标签。</tagname></li>
</ul>
<h3 id="使用github"><a href="#使用github" class="headerlink" title="使用github"></a>使用github</h3><ul>
<li>在GitHub上，可以任意Fork开源仓库；</li>
<li>自己拥有Fork后的仓库的读写权限；</li>
<li>可以推送pull request给官方仓库来贡献代码。</li>
</ul>
<h3 id="自定义git"><a href="#自定义git" class="headerlink" title="自定义git"></a>自定义git</h3><ul>
<li>忽略某些文件时，需要编写.gitignore；</li>
<li>.gitignore文件本身要放到版本库里，并且可以对.gitignore做版本管理！</li>
<li>git config –global alias.xx  yyy  配置别名，用xx替代yyy。</li>
</ul>
<h3 id="搭建Git服务器-此步骤目前不懂，留作以后深究"><a href="#搭建Git服务器-此步骤目前不懂，留作以后深究" class="headerlink" title="搭建Git服务器(此步骤目前不懂，留作以后深究)"></a>搭建Git服务器(此步骤目前不懂，留作以后深究)</h3><ul>
<li>搭建Git服务器非常简单，通常10分钟即可完成；</li>
<li>要方便管理公钥，用Gitosis；</li>
<li>要像SVN那样变态地控制权限，用Gitolite。</li>
</ul>
<p>国外网友已经总结了清单，可以随时查看<a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2F" target="_blank" rel="external">Git Cheat Sheet</a><br>当然我们最好的资料就是 Git 官网<a href="http://git-scm.com" target="_blank" rel="external">http://git-scm.com</a></p>
<p>全文总结来自廖雪峰<a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[摆脱哑巴英语笔记]]></title>
      <url>http://yoursite.com/2016/11/01/%E6%91%86%E8%84%B1%E5%93%91%E5%B7%B4%E8%8B%B1%E8%AF%AD%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>笑来老师关于哑巴英语的笔记，源自<a href="http://www.zhibimo.com/books/xiaolai/everyone-can-use-english" target="_blank" rel="external">人人都能学英语</a></p>
<h3 id="肚子里没货"><a href="#肚子里没货" class="headerlink" title="肚子里没货"></a>肚子里没货</h3><ul>
<li>口语差不在于你不会说，而在于你没什么话可说。就是没有积累，没有输入便无法输出。</li>
</ul>
<h3 id="市面上的口语书不适合自己"><a href="#市面上的口语书不适合自己" class="headerlink" title="市面上的口语书不适合自己"></a>市面上的口语书不适合自己</h3><ul>
<li>很多口语书挑选了所有的人（共同）最常用的句子，那些句子实际上是人们最少说，甚至根本不说的句子。书籍是对大众写的，不是对个人写的。口语书认为，因为它们是最经常重复出现的，所以它们是最重要的。这就是犯了逻辑错误，其实废话和寒暄的话总是经常出现的，而这些根本不重要。</li>
</ul>
<h3 id="考虑太多，积累太少"><a href="#考虑太多，积累太少" class="headerlink" title="考虑太多，积累太少"></a>考虑太多，积累太少</h3><ul>
<li>最开始无法张嘴说英语，往往不是因为自己笨，而是因为自己太聪明。笨的人表达需求简单，见人只想（也只能）讨论简单的问题，见到陌生人问“What’s your name?”一点都不觉得自己说的有什么不妥。而聪明的人往往思考很多，无法表达。他们思维复杂，而复杂的思维需要借助复杂的表达才能得以传递。因为表达需求太过复杂，所以导致同样的训练在他们身上根本无法发挥同样的作用──他们事实上需要更多更强的训练。另外，他们很难遇到有能力与他们探讨有深度的问题的人，所以，他们很少有机会去在实践中锻炼自己的口语能力──相对来看，那些头脑简单的人就幸福得多：随便抓来一个人就可以开始练了。</li>
<li>但是口语流利的最终是聪明的人，因为说话本身是一种高度协调的系统工程：要持续输入（捕获对方一切反馈），要高速处理（所谓见机行事可不是那么容易的事情），还要有效输出（说准说对说得精彩更不容易）……这一切，都要有长期的锻炼和积累才行。<a id="more"></a></li>
</ul>
<h3 id="创作自己的口语书"><a href="#创作自己的口语书" class="headerlink" title="创作自己的口语书"></a>创作自己的口语书</h3><ul>
<li>每天花十分钟到半个小时，把自己想要表达的内容用中文记录下来。坚持一段时间之后，每天再多花点时间把那些你要说的话用英文表达出来，并记录下来。</li>
<li>实际上你必须表达的话并不多，这些内容中的绝大多数其实你完全有能力用英文表达（最多查查词典就可以了）。把自己要说的话记录下来，不仅仅是为了将来翻译成英文。记录下来有很多好处，起码，可以让自己重新审视一下自己所说过的话，避免自己的表达实际上是思维混乱的产物。</li>
<li>遇到完全无法用英文表达的句子，管它对不对，地道不地道，先想办法表达出来。之后一定要及时记录下来。记录的习惯无比重要。因为有记录，所以，将来“偶然”获得答案的时候，知道应该补在哪里。从我和无数学生的实践经验来看，如果之前有所记录，那么将来获得答案是“必然”，如果之前没有记录，很多会“必然”到来的答案，最终连“偶然”都无法形成，因为你过去并未记录，所以当答案来临的时候，你根本就未曾意识到，于是，擦肩而过的就是你。</li>
<li>有很多时候，你要表达的东西在英语中根本就没有对应概念，这时必须学会“换一种说法”。关键还是在于，过去遇到的问题我记录了下来，所以当某个可能的解决方案出现之时──无论那方案来自多么不可想象的方向──我能够想起那曾经的问题，于是，问题有可能被解决。</li>
<li>使用平实的、朴素的、没有修辞的中文。在记录自己所要表达的内容之时，要尽量避免任何修辞。因为大多数情况下，修辞是几乎无法翻译的。在写作中也特别实用。很多人觉得英文写作困难，可实际上，那困难是自己给自己设置的，因为他们在表达思想的时候，不小心依赖了太多母语的修辞，乃至于，几乎不大可能用另外一种语言表达那些充满了修辞的思维。</li>
<li>没有什么英语思维。用通俗易懂，且又合情合理的方式说的话，第二语言使用者真正能做到的是通过大量练习之前提到过的“换一种表达方式”──注意，不是所谓的“把中文思维换成英文思维”，而只不过是“换一种方式表达同样的内容”而已。这其中的差异，多半是语法习惯上的，并不细微，却总是被有意忽视。</li>
<li>理解、表达与翻译之间的微妙差异。我们所使用的语言限制我们的思维。任意两种语言之间（并不仅限于英文和中文之间），不大可能处处都存在着一一对应关系。这时，我们甚至无法借助“意译”，只能借助更为繁杂的诸如详细解释、重新定义，或者创造新词等手段。所以，当遇到一个不能理解的句子之时，最正确的提问方法可能是这样：“这句话应该怎么理解呢？”或者“这句话到底是什么意思？”</li>
<li>着重收集“不直观的对应”。<br>  如果我没记错的话……<br>  我从未想过……<br>  你竟然跟我这么说话！<br>  就知道你有这本事！<br>  (这)听着耳熟吧？<br>  我想不起来那名字了……<br>  If my memory serves, …<br>  It never occurred to me that…<br>  Are we really having this conversation?<br>  Always knew you had it in you!<br>  Does it ring a bell to you?<br>  That name escapes me….</li>
<li>这种收集工作，只能靠自己。别人整理的东西，拿来对自己基本上没有太多作用（比不过人们总是“觉得”或者“希望”拿来的东西有用而已）。在这方面，不能相信或者依赖“拿来主义”，一定要自己动手，自己积累。所有需要靠积累才能获得的东西都很难，只因为大多数人并不真正了解积累的重要与意义。知易行难。没必要从一开始追求“百分之百地道”，因为那也不可能做到。但，知道了积累的重要，知道了只能靠积累，于是，就可以不急不燥地通过积累一点点变得“更加地道”。哪怕日拱一卒，也是很强大的做法。记录下来，然后随时增补。</li>
<li>长篇大论更要提前写出来。即便一个思维简单小孩子，在使用语言的时候，也常常表达他完整的思想，即，只言片语肯定是不够的。所以，无论你想说什么，都最好提前写下来。当然，熟练到一定程度的时候，大多数情况下只需要在脑子里演练一遍就可以了。不过，这个“熟练到一定程度”可能需要很长时间才能做到。在做到它之前，就别嫌麻烦：写出来！哪里有什么容易的事情？很多人根本说不出没准备过的话。</li>
<li>貌似多余：其实连哑巴英语都并不那么坏</li>
<li>所谓的“英语好”其实很难有一个统一、清楚、且有意义的标准。只要可以阅读，不断输入，然后用文字输出，就可以很好的使用英语工具。用着用着就好起来了，管它好到什么地步，反正比原来好。或者换另外一个角度来说，“够用就好”。因为“够用”就可以开始用了，不停地用就有不停改进的机会和可能。多用一点就比原来用得更好一点——这其实就是所有工具的特点。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[微信小程序展望]]></title>
      <url>http://yoursite.com/2016/11/01/%E9%98%BF%E7%A6%85%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B1%95%E6%9C%9B/</url>
      <content type="html"><![CDATA[<p>听了知乎live中阿婵分享的微信小程序展望。有以下笔记：<br>微信为什么要做小程序？<br>1、微信已经是一个超级入口，商业的贪婪性逐利性这些都让微信有作为os的可能。<br>2、微信通过订阅号，服务号，企业号和小程序希望占据用户更多时间，占据更多应用场景，占据更多服务入口。<br>为什么要放弃传统app开发？<br>1、app生态已经相对饱和，红利期已经过去。<br>2、推广成本太高，已经达到100元 ／个普通用户。<br>3、开发成本高，需要多个前后端程序员以及设计师，需要适应不同的手机设备。<br>4、不符合精益创业的原则。（三个主要工具是：“最小可用品”、“客户反馈”、“快速迭代”。）小成本快速小范围发布，尽快得到市场反馈，立即更改调整。<br>如何正确理解小程序？<br>1、它是微信的重点产品。<br>2、没有关注功能，对用户没有压力。<br>3、不是html，也不是混合代码，是自己独立的开发语言。<br>3、即用即走，随手可得。<br>4、一次开发，多端兼容。<br>5、微信会一如既往的限制营销。<br>6、离线能力。<br>微信是一个新生态？<br>1、微信是一个大平台。有统一入口，有独立语言，有统一规范，平台与开发者共赢。<br>2、需要新的应用场景，甚至新的国际用户。<br>3、原来在别的生态存在的应用，会以新的形态出现。<br>4、微信开发将来会是一个独立的岗位。<br>机会在哪里？<br>1、从别的生态中照搬过来。<br>2、补微信功能的缺口。<br>3、面对企业用户的创业。<br>4、新形势的营销。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[编程入门学习的分享]]></title>
      <url>http://yoursite.com/2016/11/01/%E7%9F%A5%E4%B9%8E%E5%88%86%E4%BA%AB%E5%A6%82%E4%BD%95%E5%88%9D%E5%AD%A6%E7%BC%96%E7%A8%8B/</url>
      <content type="html"><![CDATA[<p>听了知乎live关于编程入门学习的分享。</p>
<h2 id="初学编程"><a href="#初学编程" class="headerlink" title="初学编程"></a>初学编程</h2><h3 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h3><ul>
<li>对于计算机来说，有些事情解决起来非常简单困难，而另外一些则正相反，学会标志就是能够判断出一个问题，能否用编程来解决，并且对于自己要做的事情有一个很详细，但是大方向没有错的概念。</li>
</ul>
<h3 id="学编程概念"><a href="#学编程概念" class="headerlink" title="学编程概念"></a>学编程概念</h3><ul>
<li>那么具体到个人而言，想清楚自己所处领域里面用这些典型的问题可以通过计算机来解决，然后了解清楚哪些工具可以为你所用，想清楚工具是怎样的运作原理，其实就是学编程。学编程分为弄明白遇到一个问题怎样才能转化成写程序的思路，以及学会怎样才能又快又好地写出正确的程序来。这两个事情并没有固定的先后次序，一个人学编程的过程之中，这两个事情始终交织在一起，一方面弄清楚要解决的问题，会帮助理解为什么工具是那样的设计的。另一方面随着越来越熟悉工具，分析问题也会越来越顺利，这样一个工具和思路互相促进的过程，这个过程叫做建立编程思维。<a id="more"></a></li>
</ul>
<h3 id="适不适合学习？"><a href="#适不适合学习？" class="headerlink" title="适不适合学习？"></a>适不适合学习？</h3><ul>
<li>整个过程最开始都像学做饭，或是开手动挡的汽车，刚上手没有什么概念的时候还会一头雾水，最开始抱怨为什么细节这么多，弄得这么复杂，但是经过-一段时间练习之后，所做的事情像踩离合换挡或者是调整油火的大小，切葱花等，会变成一种条件反射，成为你要完成一整串事件一部分，你会经历多个过程，就是随便什么一头雾水，直到一个点才发现自己好像学会了，换句话说就是这件事情学习曲线的一开始很陡峭。学习曲线的陡峭程度因人而异。</li>
</ul>
<h3 id="第一步，做习题casta！"><a href="#第一步，做习题casta！" class="headerlink" title="第一步，做习题casta！"></a>第一步，做习题casta！</h3><ul>
<li>好程序靠熟练！每天或者每周写一个练习题，通过练习把程序内化成一个技能。<br>leetcode.com<br>codewars.com<br>projecteuler.net<br>Google： github project euler + 语言名。</li>
</ul>
<h3 id="第二步，对库函数和第三方库熟练"><a href="#第二步，对库函数和第三方库熟练" class="headerlink" title="第二步，对库函数和第三方库熟练"></a>第二步，对库函数和第三方库熟练</h3><ul>
<li>还不会编程是对库函数和操作系统的了解还不够，其他所有程序，都需要用到各种库函数，以做出各种各样的操作系统操作。<br>要练习实际例子。</li>
<li>库函数有很大一部分是调用操作系统的功能，比如io库socket库，都是调用操作系统的函数接口。对操作系统的了解程度影响编程能力。</li>
</ul>
<p>哦，后几步就不是初学编程了，赶紧实践现在的两步，还没到这个阶段，就不要养成收集癖的习惯，以为看到就是学到了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[判断自己文章好坏的标准]]></title>
      <url>http://yoursite.com/2016/11/01/%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E6%96%87%E7%AB%A0%E7%9A%84%E5%A5%BD%E5%9D%8F%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>最佳问句问自己，我有没有让读者觉得……？</p>
<h2 id="三条基础常识建议"><a href="#三条基础常识建议" class="headerlink" title="三条基础常识建议"></a>三条基础常识建议</h2><h3 id="多写"><a href="#多写" class="headerlink" title="多写"></a>多写</h3><ul>
<li>多写才能知道自己的语病，自己的逻辑混乱，自己的平淡无奇，自己的不断进步。</li>
</ul>
<h3 id="认真思考所选品类的受众思考"><a href="#认真思考所选品类的受众思考" class="headerlink" title="认真思考所选品类的受众思考"></a>认真思考所选品类的受众思考</h3><ul>
<li>选定一个方向，高尔夫知识分享方向。受众者知识水平跨度非常大，这个领域的消费者和从业者完全就是一线城市和四线乡村的人的财富，等级，知识文化，见识水平等差距。要想明白真正对读者有用的是什么，不要被一些人误导，某些人的感觉没用，和感觉某些垃圾才有用，不应该动摇作者。对高尔夫爱好者真正有用的东西就是高尔夫方方面面的知识，那些知识从高尔夫被发明以来就被不断总结，那些文化从1457年就开始被传播。它们的有效性远远超过时下的八卦新闻和赛况战报。却由于英文资料整理困难，没有新鲜噱头被人忽视。坚决不为了关注度和传播效果去写感觉有用，甚至实则有害的东西。</li>
<li>再深究一步，到底写运动相关的内容，到底什么对于读者最重要？</li>
<li>我认为有两点：1.如何参与这项运动？2.运动中与个人成长和生活想通的部分是什么？</li>
<li>让读者能通过文字融入这项运动，又通过运动反思到自己的成长和生活，那一定是读者最热爱的文字，看后更加理解和热爱这项运动，更能享受和升华生活。所以文章要分为运动的具体知识部分和这部分对思维和生活的影响。</li>
<li>说理性的文章需要认真思考三要素<br>简单vs复杂<br>已知vs未知<br>次要vs重要<a id="more"></a></li>
</ul>
<h3 id="写作是双向沟通，不是单向表达"><a href="#写作是双向沟通，不是单向表达" class="headerlink" title="写作是双向沟通，不是单向表达"></a>写作是双向沟通，不是单向表达</h3><ul>
<li>不能一厢情愿，曲高和寡。沟通的最大难度在于理解对方。当众讲话和公开写作就是在读者中寻找最大公约数的游戏。你有能力理解多少人，就能拥有多少读者。要厚积薄发，考虑所有可能遇见的读者，然后增添文章的表现可能。对高尔夫入门级别的读者，详细介绍正确步骤。对浅尝辄止的读者，准备图片直观感受。对学究型读者，准备原因解析和运动反思生活的内容。</li>
</ul>
<h3 id="内容质量判断选择"><a href="#内容质量判断选择" class="headerlink" title="内容质量判断选择"></a>内容质量判断选择</h3><ul>
<li>逻辑严谨。将形式逻辑，非形式逻辑，认真偏差纠正运用到高尔夫知识当中，将高尔夫做为引子来学习这些逻辑概念。</li>
<li>论证精彩。精彩例子是攒出来的，不是找出来的。要不断积累，在国内外各个高尔夫相关领域积累，作为例子记录，提到一个概念，总能举出历史的例子或身边的实例作为印证。长期系统地整理论据。首先要长期，不能半途而废，临时抱佛脚。其次是系统，知道自己要什么，琢磨手里的东西可以用在哪儿方面。</li>
</ul>
<h3 id="文采判断"><a href="#文采判断" class="headerlink" title="文采判断"></a>文采判断</h3><ul>
<li>着重修辞和韵律。</li>
<li>修辞中推崇类比，可以把大多数人已知的东西与未知的东西的相似点比较，让对方轻松理解未知事物。有助于传达意思。</li>
<li>韵律中包括韵脚和节奏。韵脚有助于文章朗朗上口，读起来轻松，甚至还能有一点趣味。节奏在文字上就是长短相间的句子和意群。</li>
<li>文采也包括最好能找与时俱进的例子，最好能让读者感到意外惊喜。</li>
</ul>
<h3 id="格式化写作的好处"><a href="#格式化写作的好处" class="headerlink" title="格式化写作的好处"></a>格式化写作的好处</h3><ul>
<li>无论是虚构类还是非虚构类内容都有格式。虚构类的典型格式就是各种类型片，武侠，侦探，惊悚，爱情，复仇，喜剧等等，都有固定套路。</li>
<li>论文的典型格式:<br>提出一个观点<br>说明这个观点的意义有多大<br>证明这个观点<br>驳斥这个观点的质疑<br>说清楚这个观点的超级意义。</li>
<li>讲清楚一个概念的套路：<br>说的是什么概念？<br>这个概念为什么重要？<br>这个概念普遍为如何误解？<br>这个概念实际上是怎么回事？<br>正确这个概念有什么意义？<br>如何正确使用这个概念？<br>错误使用这个概念有什么可怕后果？<br>这个概念与其它重要的概念有什么重要的联系？</li>
</ul>
<h3 id="为什么非写不可"><a href="#为什么非写不可" class="headerlink" title="为什么非写不可"></a>为什么非写不可</h3><ul>
<li>写作本质上来讲就是产生影响力。</li>
<li>思考那个万能的问题，我有没有让我的读者读后会产生巨大的影响？</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[三门问题趣谈]]></title>
      <url>http://yoursite.com/2016/11/01/%E4%B8%89%E9%97%A8%E9%97%AE%E9%A2%98%E8%B6%A3%E8%B0%88/</url>
      <content type="html"><![CDATA[<p>三门问题，又被称为蒙提霍尔问题（Monty Hall Problem），它源自一个美国的电视游戏节目：Let’s Make a Deal。<br><img src="http://7xw72d.com1.z0.glb.clouddn.com/2000px-Monty_open_door.png" alt="三门问题示意图"><br>这个问题是这样的：<br>参赛者会看见三扇关闭了的门，其中一扇的后面有一辆汽车，选中后面有车的那扇门就可以赢得该汽车，而另外两扇门后面则各藏有一只山羊。当参赛者选定了一扇门，但未去开启它的时候，节目主持人开启剩下两扇门的其中一扇，露出其中一只山羊。主持人其后会问参赛者要不要换另一扇仍然关上的门。问题来了：换另一扇门会否增加参赛者赢得汽车的机会率？<a id="more"></a></p>
<p>正确的答案是，换！换有2/3的概率赢，不换有1/3的概率赢。<br><img src="http://7xw72d.com1.z0.glb.clouddn.com/monty_open.png" alt="可汗学院三门问题解答"></p>
<p>某天晚上自己与朋友对三门问题进行了讨论，自己犯了两个错误，一个是太依赖直觉，不做分析，不想前提，错误的只做直觉判断。另一个是以果推因，自己把答案带到问题里，故意去找理由，其实这个理由并不充分，往往也不清晰。最终让我改变直觉的是那个实验，实验结果颠覆了直觉。最终让我彻底明白原因的是可汗学院的讲解，可汗列出了坚持不换门的输赢两方的概率，列出了坚决换门的输赢两方的概率。最终发现坚持不换门的赢概率就是3个门中选到了那一个有奖的门，输概率就是3个门中选到了其他两个空门。坚决换门的赢概率本质上就是选择两个空门的概率，因为只要选择了空门，主持人打开另外一扇空门，那么坚决换就会100%得奖。坚决换门输的概率就是最初正好选中了那一个有奖的门。最终得解，划分清晰，逻辑清晰。</p>
<p>自己又查了果壳上的问题，发现了新的问题，十分有趣，和大家分享。<a href="http://www.guokr.com/post/615160/" target="_blank" rel="external">果壳原题1</a>,<a href="http://www.guokr.com/post/610583/" target="_blank" rel="external">果壳原题2</a><br>假设你参加一个电视游戏节目，节目现场有三扇门，其中一扇门后面是一辆车，另外两扇门后面则是山羊。主持人让你选择其中的一扇门。不妨假设你选择了一号门吧。主持人故意打开了另外一扇门，比如说三号门，让你看见三号门的后面是山羊。然后主持人问你：“你想改变你的选择，换成二号门吗？”这时候，你会怎么做？<br>诡辩就是在更改原题的基础上产生的：<br>假设实际上是三个人选择三扇门而不是一个人选择三扇门。当三个人通过抽签决定门的选择后，主持人故意打开了其中一个人的门（不妨设打开的是门A），让这三个人看见后面的是山羊。理所当然的，门A的持有者出局了。然后主持人问门B和门C的持有者要不要交换他们所持有的门。这两个持有者都看过玛丽莲的专栏，所以他们都不假思索地选择了”换”。但突然，他们意识到自己犯了个错误，这时候他们都可以看成是玛丽莲的读者，不管他们做出怎样的选择，自己获得汽车的几率都会和对方一样。他们觉得这是个极好的机会，因为他们居然发现了世界上IQ最高的人的错误。于是他们决定共享这一辆汽车，并且成为了各大网站上反对三门问题玛丽莲解的中坚力量，然后幸福快乐地生活在了一起。<br>细心的读者，你有没有找出这个诡辩的问题所在呢？</p>
<p>网友学院派谜团说<br>我猜想楼主想说的问题其实是：<br>原本的问题（一个人的情况）中，他通过改换选择可以提高中奖概率；<br>而第二个楼主设计的场景中，两个人即便改换选择，中奖概率依然没变，<br>但是就他们个人（从每一个单个的人）来看，其实应该跟一个人的情况）一样啊（概率应该会提高）。<br>楼主，我认为问题出在这里：<br>原本问题中：一个人即便提高了概率，但是仍然有概率（三分之一）猜不中奖品；<br>而你设计的场景中：中奖的概率是100%，只是中奖的人不同而已，而在奖品必定会送出的情况下，平摊在两个人身上无论怎么交换，概率都是不会变的。<br>原题是：1个人选择1/3或者2/3；<br>楼主的设计是：2个人平分100%。<br>所以才会出现我前面说的情况。<br>为什么楼主所设计的场景，两人交换概率没变，<br>尽管从单个角度看，他们的处境与原题一个人的情况是一样的。</p>
<p>网友yyH_M说<br>三座门居然解得这么复杂。。。两句话不就完了吗： 只有一个人的时候，主持人是留下另外两个门中有三分之二概率为真的一个门，有3个人的时候，主持人是打开一个百分之百为空的门，留下的“其中有百分之百概率为真”的两个门。所以打开的条件两者是不一样的，结果的概率也不一样。</p>
<p>好吧，迷糊了还是清楚了，有意思的概率和博弈。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[xdite的自教学习方法]]></title>
      <url>http://yoursite.com/2016/10/24/xdite%E7%9A%84%E8%87%AA%E6%95%99%E5%AD%A6%E4%B9%A0%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>xdite是我自李笑来老师，罗振宇先生，阳志平老师，万维刚老师，刘润老师之后发现的又一大知识达人，尤其是在ruby on rails，saas，敏捷工作，创业方面有自己的完整方法论。搜集一些她的方法论来常看常新，当然最好是关注她自己的github和gitbook，同样包括她的微信公众号，知乎，新生大学等等…</p>
<h3 id="xdite的自教学习方法"><a href="#xdite的自教学习方法" class="headerlink" title="xdite的自教学习方法"></a>xdite的自教学习方法</h3><ul>
<li>成人好的「自教方式」是这样的：</li>
<li>完全模仿老师做的</li>
<li>然后你试图去修改，然后吃屎了</li>
<li>再去了解为什么</li>
<li>你了解了运作原理后，整理出来</li>
<li>示范给其他人，听取回馈</li>
</ul>
<h3 id="坏的自学模式是这样的"><a href="#坏的自学模式是这样的" class="headerlink" title="坏的自学模式是这样的"></a>坏的自学模式是这样的</h3><ul>
<li>看很多理论，但是不急着动手做</li>
<li>买很多新手都看不懂的大师书籍，坚持按照自己的步调学</li>
<li>还没学会爬就急着飞</li>
<li>老是问一些以他智商根本无法理解的问题，讲解了他还听不懂，简直浪费我的时间</li>
<li>连问题都无法清楚表达</li>
<li>走很多弯路<a id="more"></a></li>
</ul>
<h3 id="付费学习是在买三件东西"><a href="#付费学习是在买三件东西" class="headerlink" title="付费学习是在买三件东西"></a>付费学习是在买三件东西</h3><ul>
<li>模仿的「机会」</li>
<li>模仿 example</li>
<li>老师为了要能够「降低你自教门槛」所做的心力。</li>
</ul>
<h3 id="个人成长，以计算机的角度去比喻"><a href="#个人成长，以计算机的角度去比喻" class="headerlink" title="个人成长，以计算机的角度去比喻"></a>个人成长，以计算机的角度去比喻</h3><ul>
<li>置身更好的网路环境。去大城市，经济最先进的环境。</li>
<li>找到更厉害更丰富的下载论坛。找到最牛的公司。</li>
<li>维护防火墙规则、做好病毒码更新，以及建构更强健的核心演算法。修炼内功，自己的学习能力和工作能力与日俱增。</li>
<li>付费取得黄金下载通道。付费学习，便利学习渠道和资源。</li>
<li>改为 BitTorrent 式协议更新 。上传者利于下载，学到要分享听反馈，利于再次吸收，学习速度更快。</li>
</ul>
<h3 id="少走弯路的学习方法"><a href="#少走弯路的学习方法" class="headerlink" title="少走弯路的学习方法"></a>少走弯路的学习方法</h3><ul>
<li>看说明书,听取忠告</li>
<li>永远选比较代价「比较」高的那个选项。</li>
<li>别做「省钱」的决定，也别试图占别人便宜。</li>
<li>总是学着做下一等级决定</li>
<li>把专注力用在寻找幸运，而非制造不幸。</li>
</ul>
<h3 id="如何写出高质量文章"><a href="#如何写出高质量文章" class="headerlink" title="如何写出高质量文章"></a>如何写出高质量文章</h3><ul>
<li>要能够写出一篇文章，关键是先得把 “一件事情” 想透。</li>
<li>输出的关键在于多输入。读的书越多，给大脑运算的 “资料” 越多，那么算出来的资讯越纯，运算效率越高。</li>
<li>“阅读能力” 说穿了，是对世界的 “好奇心” 与 “责任心”。<br>书无不无聊，看不看得下去，取决于你对这个书的主题感不感兴趣。<br>一本书可以看五遍，每次都有不同的收获。书其实就躺在那里没有变，变的是阅读者的心态。<br>对一本书有没有兴趣，就在于你对这个 “主题” 有没有 “好奇”，有没有想要解决问题的冲动。<br>非常现实的，大家会去买一本书，通常是因为现在 “有问题需要解决”。<br>你不想买，也通常是因为现在 “没有问题需要解决”。</li>
<li>没什么了不起的，我只是觉得我有义务去了解这件事情，去解决这件事情。常常去总结自己的工作成果，然后分享给别人。分享给别人我又得到更多的反馈，然后就进步了，就这么简单而已。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eloquent JavaScript教学笔记4]]></title>
      <url>http://yoursite.com/2016/10/23/Eloquent%20JavaScript%E6%95%99%E5%AD%A6%E7%AC%94%E8%AE%B04/</url>
      <content type="html"><![CDATA[<ul>
<li>array数组。存放一系列值的集合称为数组。数组中每个值的都有序号，序号从0开始。</li>
<li>Properties属性。几乎所有值都有属性，除了null和undefined。值的属性分为点属性和括号属性。value.x和 value[x]，区别在于x，value.x中x是表示一个属性名称，是一个有效的变量名。value[x] 中x只是一个表达式，由value[x]求x的值的结果作为属性名称。</li>
<li>method方法。字符串和数组对象不仅仅包括长度属性，还包括很多涉及函数值的属性。例如a.toUpperCase()，mack.join(“ ”)，mack.pop()等等。</li>
<li>对象。就是一种无序的数据集合，由若干个“键值对”（key-value）构成日志录。数组是一种特殊的对象，键是序号，值是数组的值。</li>
<li><p>Mutability可变性。<a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">var object1 = &#123;value: 10&#125;;</div><div class="line">var object2 = object1;</div><div class="line">var object3 = &#123;value: 10&#125;;</div><div class="line"></div><div class="line">console.log(object1 == object2);</div><div class="line">// → true</div><div class="line">console.log(object1 == object3);</div><div class="line">// → false</div><div class="line"></div><div class="line">object1.value = 15;</div><div class="line">console.log(object2.value);</div><div class="line">// → 15</div><div class="line">console.log(object3.value);</div><div class="line">// → 10</div></pre></td></tr></table></figure>
</li>
<li><p>shift() 方法用于把数组的第一个元素从其中删除，并返回第一个元素的值。unshift()方法则删除最后一个，并返回最后一个元素的值。</p>
</li>
<li>indexOf()方法，正序选取，通过值，返回序号。lastIndexOf()方法，逆序选取，通过值，返回序号。</li>
<li>slice()方法，选择开始序号和结束序号，返回对应值组成的数组，包左不包右。</li>
<li>string有自己的indexOf和slice 方法，string的这两个方法与array的方法相似，唯一区别是数组是每一字符，string的方法可以选择连串的字符。例如：console.log(“one two three”.indexOf(“ee”));</li>
<li>trim方法可以消除空格，换行符，制表符和类似符号。</li>
<li>读取string里的字符可以用charAt()方法，或者string[]数组。</li>
<li>arguments指向实参对象的引用,实参对象是一个类数组对象，包含了函数运行时的所有参数。不是数组，数组的方法不能直接使用，</li>
<li>math对象，数学运算的大合集。例如Math.max， Math.min , and Math.sqrt，Math.random等等。</li>
<li>总结：对象和数组是把群体数据整合成个体数据的方法。除了null 和undefined，JS中的所有值都有属性。value.propName或者value[“propName”]，对象用名字字符保存值，数组用序号数字保存值。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[公众号青衫磊落对于剧本的看法]]></title>
      <url>http://yoursite.com/2016/10/17/%E5%85%AC%E4%BC%97%E5%8F%B7%E9%9D%92%E8%A1%AB%E7%A3%8A%E8%90%BD%E5%AF%B9%E4%BA%8E%E5%89%A7%E6%9C%AC%E7%9A%84%E7%9C%8B%E6%B3%95/</url>
      <content type="html"><![CDATA[<ul>
<li>剧本是一剧之本，所以编辑的功力很重要，成为知名编剧需要有才华以及好运气。</li>
</ul>
<h2 id="剧本招数-剧情剧drama"><a href="#剧本招数-剧情剧drama" class="headerlink" title="剧本招数(剧情剧drama)"></a>剧本招数(剧情剧drama)</h2><h3 id="1、从草根人物写起。"><a href="#1、从草根人物写起。" class="headerlink" title="1、从草根人物写起。"></a>1、从草根人物写起。</h3><ul>
<li>a让普通观众可以把自己放在角色身上，感同身受，有亲近感。平凡的人总有不平凡的故事，反差明显，吸引眼球。</li>
<li>b着重描写正值中年的市井小人物，他们经常处在挣扎着找回自我的阶段，苦守如日中天的曾经，又深知难逃日薄西山的宿命。</li>
<li>c让主角疾病缠身，或有着惨痛的回忆。草根人物也会做出出格的事情，使主角患上心理疾病或常见身体疾病会让观众心生同情，但是一定要解释清楚获得这些疾病的原因，以理服人。</li>
<li>d让他有一技之长，而且天赋秉异，让观众佩服他，这样观众会宽恕他的过失。他的专长也必定是剧集的重心。但是他虽才华横溢，也不是所向披靡，必须有一个旗鼓相当的对手让他有危机感，然后使他为了达到自己的目的做出极端的事情，增强戏剧性。</li>
<li>e让他的事业成为美国梦的缩影。让观众对普通职业产生共鸣，与贪得无厌的人做对比。</li>
<li>f给他一个不可告人的秘密。容易描绘出一个与自我内心斗争的戏码。秘密也会推动情节发展，无论秘密是什么，都会为现实的家庭生活，婚姻问题，社会地位及信任问题提供切入点。</li>
<li>g用女性当主角。扮演咄咄逼人神经兮兮的小人物。<a id="more"></a></li>
</ul>
<h3 id="2、让主角拥有一个并不完美的家庭。"><a href="#2、让主角拥有一个并不完美的家庭。" class="headerlink" title="2、让主角拥有一个并不完美的家庭。"></a>2、让主角拥有一个并不完美的家庭。</h3><ul>
<li><p>讲述家庭或家族故事时需要。由于美国重视家庭，热爱生活，热爱家庭。即便工作影响到家庭，也要补偿家庭，维护家庭稳定。所以家庭背景能抓住观众心理，通常家庭中有理性的配偶，有麻烦不断生性叛逆或微不足道不谙世事的儿子或女儿。为了增加戏剧的张力，甚至放大主角为了家庭可以放弃一切的性格。</p>
<h3 id="3、情节设定在一个时期的末期。"><a href="#3、情节设定在一个时期的末期。" class="headerlink" title="3、情节设定在一个时期的末期。"></a>3、情节设定在一个时期的末期。</h3></li>
<li><p>让主人公处于历史转折期，剧情有了设定的期限，同时观众也可以感受到世界是在变化的。这种时代的设计更能创造冲突，展现人物在特定的历史时期是如何应对的，想象更加丰富，也让观众感受到了历史的厚重感和真实感。</p>
</li>
</ul>
<h3 id="4、给主人公一个搭档，导师或者爱徒。"><a href="#4、给主人公一个搭档，导师或者爱徒。" class="headerlink" title="4、给主人公一个搭档，导师或者爱徒。"></a>4、给主人公一个搭档，导师或者爱徒。</h3><ul>
<li>充分展现人物性格和情感，同时通过人物之间的冲突来提升戏剧的张力。分分合合，争吵竞争。冲突是关键，新老更替符合芸芸众生在生活中的规律和轨迹，让人或多或少感受到这是自己在生活中的折射。</li>
</ul>
<h3 id="5、安排一个有着自己烦恼的死敌。"><a href="#5、安排一个有着自己烦恼的死敌。" class="headerlink" title="5、安排一个有着自己烦恼的死敌。"></a>5、安排一个有着自己烦恼的死敌。</h3><ul>
<li>对手性格复杂，甚至更为怪异，并且有着同样合理的动机。这些角色有着正义的标签，却也有着自己的各种烦恼和不足之处，让人感觉到没有刻意美化或丑化角色，不仅让观众感到真实，同时也为各种转折埋下伏笔。</li>
</ul>
<h3 id="6、写一段单场景剧情。"><a href="#6、写一段单场景剧情。" class="headerlink" title="6、写一段单场景剧情。"></a>6、写一段单场景剧情。</h3><ul>
<li>人物之间直接冲突，无法退让，让观众注意力无法转移，无法分散。既可以让演员演技淋漓精致发挥，也可以节约拍摄成本。</li>
</ul>
<h3 id="7、以某种药物为中心。"><a href="#7、以某种药物为中心。" class="headerlink" title="7、以某种药物为中心。"></a>7、以某种药物为中心。</h3><ul>
<li>展现出非法交易的事件。使疯狂的配角们为了药物爆发出古怪的暴力和令人心碎的情节。蝴蝶效应带来的后果最终回波及到每个人。</li>
</ul>
<h3 id="8、性。"><a href="#8、性。" class="headerlink" title="8、性。"></a>8、性。</h3><ul>
<li>赤身裸体，各种性爱场面，让观众大饱眼福，深入人心，贴近生活。</li>
</ul>
<h3 id="9、暴力。"><a href="#9、暴力。" class="headerlink" title="9、暴力。"></a>9、暴力。</h3><ul>
<li>暴力场面的出现，一方面使剧情需要，一方面是满足观众猎奇心理。希区柯克所说，相对于鲜血淋漓，悬念才是血腥暴力的先期信号。长剧集中经常花很多集制造悬念，或者为展现暴力后的持久效果，常常砍去身体一部分，让观众一直记忆，印象深刻。</li>
</ul>
<h3 id="10、没有人是安全的。"><a href="#10、没有人是安全的。" class="headerlink" title="10、没有人是安全的。"></a>10、没有人是安全的。</h3><ul>
<li>杀死主要角色会让观众神经紧张，挑战观众的接受能力。当设计宏大而壮观的死亡场景时，建议放在倒数第二集，减少压抑感。</li>
</ul>
<p><br><br>欢迎微信公众号关注：青衫磊落</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[美剧American Crime Story感想]]></title>
      <url>http://yoursite.com/2016/10/17/%E7%BE%8E%E5%89%A7American%20Crime%20Story%E6%84%9F%E6%83%B3/</url>
      <content type="html"><![CDATA[<ul>
<li><p>刷了整季的American Crime Story，感受到了美国司法的严谨，客观，对美国司法肃然起敬。</p>
</li>
<li><p>这一季讲述的oj辛普森杀人案完美地体现了疑罪从无的原则，即不能证明被告人有罪又不能证明被告人无罪的情况下，推定被告人无罪。</p>
</li>
<li><p>又清晰的展现了陪审团制度的伟大，所有公民在称为陪审团之后被临时赋予公职，所有人的目标都是判断这些证据足不足够将他判罪，类似于十二公民中的讨论过程。</p>
</li>
<li><p>季中检方的证人选择失误，警方处理程序失误，以及辩方对证人的心理威慑和对陪审团的疑点分析，外加种族问题的背景渲染，让最终的结果称为无罪释放，即使真相可能就是辛普森杀妻，但是依据法庭来判决的最终结果就是无罪。</p>
</li>
<li><p>另外学到的法律零散知识包括，第五修正案法，意思就是如果你认为我有罪，那么必须你拿出证据来证明我有罪，而不是我拿出证据来证明我无罪；</p>
</li>
<li>证人发誓不能说谎；</li>
<li>一案不再审原则；</li>
<li>刑事诉讼与民事诉讼对证据要求的不同，刑事诉讼由于要对被告人处限制人身自由甚至剥夺生命权的判决，必须让证据具有排他性，绝对性才能作出判决，否则只能疑罪从无。而民事诉讼则由于判决一般只涉及金钱赔偿，可以根据常理进行推断。因此，民事判决是否就是客观事实不能绝对化；</li>
<li>受英国普通法中“品格证据”传统的影响，美国联邦和加州的证据法和判例都规定，如果出庭证人的品格被证明有缺陷，则证人呈庭的某些证词就不具有法律效力。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[由之微观经济学入门笔记]]></title>
      <url>http://yoursite.com/2016/10/17/%E7%94%B1%E4%B9%8B%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h3 id="1、经济。"><a href="#1、经济。" class="headerlink" title="1、经济。"></a>1、经济。</h3><ul>
<li>划算的意思。满足一定需求的情况下成本最小，或者一定成本之下总效用最大。经济学核心就是优化的思想，换句话说就是权衡。</li>
</ul>
<h3 id="2、稀缺。"><a href="#2、稀缺。" class="headerlink" title="2、稀缺。"></a>2、稀缺。</h3><ul>
<li>1).资源在物理上是有限的，但人的欲望是无穷的，一个人也会产生稀缺。2).差异性带来稀缺，好的总是少的。从个人来讲，利用资源让幸福最大化。从社会来讲，资源配置让社会福利最大化。体现了经济学背后优化的思想。</li>
</ul>
<h3 id="3、竞争。"><a href="#3、竞争。" class="headerlink" title="3、竞争。"></a>3、竞争。</h3><ul>
<li>一项资源到底归谁的事情。两个人以上必然产生竞争。解决竞争的办法是找到一种配置稀缺资源的机制。</li>
</ul>
<h3 id="4、机制。"><a href="#4、机制。" class="headerlink" title="4、机制。"></a>4、机制。</h3><ul>
<li>时间机制，先到先得。运气机制，抽签中奖。武力机制。身强力壮可以占领资源。权力和等级机制，皇权。价格机制。</li>
<li>经济学以价格机制为核心研究，可迁移性强。价格机制是闭环的，利己以利他为前提。本质是促成了商品或服务的交易。给人最合适的激励，给人减少的交易成本。</li>
<li>在价格机制下做决策时权衡成本和收益。<a id="more"></a></li>
</ul>
<h3 id="5、成本。"><a href="#5、成本。" class="headerlink" title="5、成本。"></a>5、成本。</h3><ul>
<li>机会成本，权衡中选择一个就放弃另一个。做出选择的成本是其他放弃的所有选择中最大的一个。不从机会成本的角度看盈亏，容易低估总成本。</li>
<li>沉没成本，发生在过去，已经无法收回的成本。已经过去的成本不应该影响当前的决策。把不是成本的历史投入当做成本，容易高估总成本。</li>
<li>经济学中没发生的才是成本。做出选择前，两种选择互为成本，一旦选择后，另一种则是沉没成本，不再是成本。</li>
</ul>
<h3 id="6、收益，revenue"><a href="#6、收益，revenue" class="headerlink" title="6、收益，revenue."></a>6、收益，revenue.</h3><ul>
<li>厂商出售产品获得的收入。消费者够得商品获得幸福感。因为某项交易得到的东西，并没有考虑放弃的东西。</li>
</ul>
<h3 id="7、剩余。"><a href="#7、剩余。" class="headerlink" title="7、剩余。"></a>7、剩余。</h3><ul>
<li>收益–成本，通过交易得到的某种净收益。感受到值得的。例如生产者剩余，消费者剩余。厂商对剩余的明确和消费者对剩余的不确定和可塑造性，给营销留下了空间。</li>
</ul>
<h3 id="8、交易为什么会发生？"><a href="#8、交易为什么会发生？" class="headerlink" title="8、交易为什么会发生？"></a>8、交易为什么会发生？</h3><ul>
<li>必要条件：消费者对商品的评价大于厂商生产商品的成本。</li>
<li>交易在本质上是对潜在的总剩余的激活和分割。交易不仅仅是交换价值，还创造价值，双方得到了剩余，不交易则没有剩余。</li>
<li>双方存在信任。</li>
<li>交易成本比较小，甚至不需要考虑交易成本最容易发生交易。</li>
</ul>
<h3 id="9、交易成本。"><a href="#9、交易成本。" class="headerlink" title="9、交易成本。"></a>9、交易成本。</h3><ul>
<li>交易不一定发生的原因就是交易成本。例如路费和信息费。感受是存在麻烦就存在交易成本。合同成本。讨价还价，监督执行，解决纠纷。这三个所花掉的人力物力时间等都是合同类的交易成本。信任。最开始用承担成本的方式表达偏好。愿意花时间愿意花钱。但承担成本的效用是递减的，像病毒适应了药物，总会产生抗体，效果越来越差。可以要通过沟通进化到信任。</li>
<li>制度成本。通过机制配置资源是有成本的。显性的制度成本，维持经济运转顺畅的部门建设，花费金钱，时间。隐形的制度成本。商品供不应求，排队浪费时间，少生产东西，计划经济的错误匹配，影响积极性，缺乏激励。</li>
<li>一个人存在稀缺，优化。两个人以上存在竞争，同样也存在稀缺，优化。有竞争就有配置，必然存在配置的机制。运行机制必然产生交易成本，交易成本本质上是价值的耗散。</li>
</ul>
<h3 id="10、何时选择价格机制？"><a href="#10、何时选择价格机制？" class="headerlink" title="10、何时选择价格机制？"></a>10、何时选择价格机制？</h3><ul>
<li>取决于机制的成本与机制的收益权衡维护价格机制也需要成本，而且有些事物用价格机制并不会提高收益，所以有时考虑非价格机制。</li>
</ul>
<h3 id="11、交易价格。"><a href="#11、交易价格。" class="headerlink" title="11、交易价格。"></a>11、交易价格。</h3><ul>
<li>一对一交易。心理学试验表明大家倾向于平均分配。一般对于交易更不在意的人或是对对方不可替代性的人往往有更强的议价能力，能获得更多利益。</li>
<li>一对多交易。价格在买方评价和卖方成本的区间内，议价能力因为竞争的出现发生改变。多的一方存在竞争，每个人议价能力都降低，对对方的不可替代性在本方的竞争中降低了。</li>
<li>多对多的交易。价格固定，没有人有优势。</li>
</ul>
<h3 id="12、多对多交易的均衡价格产生。"><a href="#12、多对多交易的均衡价格产生。" class="headerlink" title="12、多对多交易的均衡价格产生。"></a>12、多对多交易的均衡价格产生。</h3><ul>
<li>劳动价值论。价格是劳动量体现。但是劳动需要正向劳动，不能做负功。</li>
<li>主观效用价值论。价格是他人感受决定。价格对每个人不同。不能用现象解释现象。套套逻辑。</li>
<li>边际效用。多得到一单位商品，总效用的增加量。需求方决定哪个更有价值，取决于当前的状态。同时供给方考虑物以稀为贵。</li>
<li>随着消费量增加，总效用增加，但是增速逐渐变缓，得出边际效用递减的假设。</li>
<li>科学的理论都建立在假设上，理论是可证伪的，不是任何时刻都对。而且要看理论对现实的解释力。</li>
<li>边际成本。生产量增加，总成本增加，总成本增速逐渐加快。得出边际成本递增的假设。</li>
<li>理性人在边际处思考。边际效用大于成本，考虑每一单位随着效用下降直到等于价格，达到最大化剩余的点。边际成本小于成本，考虑每一单位随着成本增加直到等于价格，达到最大化剩余的点。决策消费量和生产量时都是一单位一单位思考，在边际处思考。</li>
<li>多对多交易，消费者和厂商都太渺小，个体变化不影响价格。</li>
<li>社会需求和社会供给就是个人需求的水平相加和个人供给的水平相加。</li>
<li>看不见的手与市场均衡。社会总供给量等于社会总需求量。均衡交易量和均衡价格。完全竞争市场就是多对多交易。</li>
</ul>
<h3 id="13、价格机制失灵。"><a href="#13、价格机制失灵。" class="headerlink" title="13、价格机制失灵。"></a>13、价格机制失灵。</h3><ul>
<li>竞争不对称，博弈论。给定博弈结构下研究可能的均衡是什么。</li>
<li>信息不对称，信息经济学。合同理论，机制设计。在给定的信息下研究可能的契约。</li>
<li>外部性。一项交易对第三方造成影响，对自己的成本和利益有影响。正外部性，均衡结果不足，激励不够。负外部性。均衡结果过剩，成本没有包括进来，加强控制。由政府来解决。</li>
</ul>
<h3 id="14、学习建议。"><a href="#14、学习建议。" class="headerlink" title="14、学习建议。"></a>14、学习建议。</h3><ul>
<li>学习经典：曼昆经济学原理。</li>
<li>学习知识就是心里像一条小溪，清澈见底，哪里有鱼哪里有石头，一目了然。画图阐述已学到的知识就是检验自己学习清晰与否的一个过程。</li>
<li>学习要一遍一遍学。最开始学框架，把目录背下来，给别人讲清楚目录，学习第一层。第二遍观察细节，学习第二层，第三层。</li>
<li>书要一遍一遍地看，一遍一遍地看啊！！！！！！！<br><br><br>更多经济学精华，请看由之老师的<a href="https://www.zhihu.com/people/youzhipage" target="_blank" rel="external">知乎</a>.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[《精准拉伸》摘要]]></title>
      <url>http://yoursite.com/2016/10/17/%E3%80%8A%E7%B2%BE%E5%87%86%E6%8B%89%E4%BC%B8%E3%80%8B%E6%91%98%E8%A6%81/</url>
      <content type="html"><![CDATA[<ul>
<li>人体的各种系统确保身体正常有序地运转，其中运动系统能控制动作，灵活性，力量，协调性和平衡。</li>
<li>运动系统群包括肌肉系统，骨骼系统和关节系统。要在儿童时摆放到位，成人以后维护呵护它们。</li>
<li>运动时，受影响区域的血流量会增加。因为血液搭载着氧气以及肌肉所需的其他营养素。运动还会导致体温上升，使肌肉更加柔韧。肌肉抗阻运动会刺激肌肉生长，身体因此变得更强壮。我们应该循序渐进地增加肌肉阻力，使身体能够适应。如果过快增加阻力，会超出肌肉的负荷能力。循序渐进对于任何训练和拉伸中避免伤害至关重要。如果短时间过度做某件事，身体会通过疼痛来提醒你。</li>
</ul>
<h3 id="肌肉系统。"><a href="#肌肉系统。" class="headerlink" title="肌肉系统。"></a>肌肉系统。</h3><ul>
<li>人体约有300块骨骼肌来实现关节间运动，可以视为拉伸的橡皮筋。一块肌肉开始活动时，它像橡皮筋一样被拉紧。肌肉的弹性越大，活动就越顺畅。缺乏运动的肌肉在休息时不会变得更强壮。相反，这类肌肉会紧绷、会缩短，从而导致疼痛。当需要这些肌肉活动时，由于之前使用率极低，它们非常容易疲劳。结果就是，即便做像搬椅子这样简单的日常动作，也有可能背痛不止。身体要保持平衡，肌肉会缩短，如果前后左右有一面的肌肉在力量和长度上弱于其他面，那么会影响身体健康。肌肉不断收紧会导致肌肉失去弹性、逐渐僵硬，因此我们运动得越少，血液循环就越不通畅。<a id="more"></a></li>
<li>拮抗肌。拮抗肌指一块肌肉伸缩或完成动作时另一块发生与之相反方向运动的肌肉。如果拉伸的肌肉导致肘部弯曲，那么相应的拮抗肌会使肘部伸直。因此，运用一组肌肉完成某一动作时，紧缩的拮抗肌将为完成这一动作提供阻力。所以活动前要热身就是要消除所使用肌肉的拮抗肌紧绷，避免其阻碍活动。<br>缩短的肌肉和扳机点。</li>
<li>肌肉在工作时会产生副产品，其中一种叫乳酸。任何人长时间负重都会体会到乳酸的影响。起初，你会感觉肌肉在燃烧。随着疲劳度不断增加，灼热的区域开始疼痛。释放所有重量后，疼痛就会消失，因为血液能消除肌肉中的乳酸。如果持续收缩肌肉，就会产生过量乳酸。如今的上班族一直在收缩颈部和肩部区域的肌肉。这种做法也会导致不良姿势，而不良的姿势是由肌肉薄弱或身体适应了缩短的肌肉造成的。这种坏习惯还会在我们以正确的姿势站立或坐立时增加阻力。这种阻力能进一步缩短肌肉。</li>
<li>扳机点可以看作肌肉中的结点，尺寸从米粒般大小到豌豆不等。扳机点会导致结点所在位置和身体其它区域疼痛。扳机点出现在静态的缩短或紧绷的肌肉中，从而产生乳酸，也可以出现在过度使用、缺乏休息的额肌肉中。压力——肌肉紧绷——乳酸——疼痛。</li>
</ul>
<h3 id="骨骼系统。"><a href="#骨骼系统。" class="headerlink" title="骨骼系统。"></a>骨骼系统。</h3><ul>
<li>身体中的所有器官都是挂在骨架上的。如果骨骼太脆弱，一切都将分崩离析。运动和负重能够促进骨骼生长，促使骨骼在夜间进行重塑，为第二天的身体需求做好准备。然而，久坐不动时不会让骨骼变得更强壮的。运动量太小导致骨骼停止重塑，从而变得更佳单薄、更不耐用。强健骨骼的时间是有限的，一般只能持续到25周岁。记住：骨骼和身体天生是来运动的，不是用来休息的。</li>
</ul>
<h3 id="关节系统。"><a href="#关节系统。" class="headerlink" title="关节系统。"></a>关节系统。</h3><ul>
<li>关节，是两根骨头间的连接部位，也是运动系统中最为敏感的部位。骨骼的末端由软骨覆盖，起到减缓震动，减少摩擦的作用。与其他骨骼一样，软骨也需要负重。软骨在我们成长发育时逐年增厚，运动的频率越高，它的厚度和功能性就会变得越好。经常开合的门如果不涂抹润滑油便会开始发出吱吱声。我们的关节也是这样，所以需要保养和活动。运动是保养关节的最佳方式。关节不常使用就会变得僵硬，只需12小时，肘关节的灵活度就会减少到原有功能的30％。平面关节、球窝关节和滑车关节是身体常见的关节。关节的形状决定它能完成什么样的活动。关节分关节头（圆形有软骨覆盖），关节腔（由软骨覆盖的平滑部位，与关节头贴合），韧带（加固关节），关节囊（约束活动，保护关节不受灰尘和细菌的侵入），软骨（减少关节头和关节腔之间的摩擦），关节液（减少关节摩擦、减少关节受损，运输营养物质）。</li>
<li>身体状态好，你的状态才会好！每天运动30分钟是将背部和身体作为一个整体来保护的最佳方式。计步器要在1万步以上。</li>
</ul>
<h3 id="运动量不足的后果"><a href="#运动量不足的后果" class="headerlink" title="运动量不足的后果"></a>运动量不足的后果</h3><ul>
<li>影响心脏。如果心脏从未收到挑战，它会尽其所能减少活动，在你需要增加心脏额外的负荷时会罢工，衰弱的心脏也会阻碍血液循环。</li>
<li>影响肌肉。肌肉不用就会日渐衰弱，在需要使用时会表现不佳。肌腱变得脆弱，容易在突然的活动中撕裂。未经保养的肌肉会失去弹性，逐渐僵硬。</li>
<li>影响关节。年轻时，身体的软骨在运动中增厚，如果年幼时运动量小，软骨会比经常运动的软骨薄。软骨单薄会增加罹患关节炎的危险。</li>
<li>影响骨骼。与软骨相似，负重能让骨骼变得更强壮。导致骨骼脆弱的最主要原因就是运动量不够。骨质疏松症是导致老年人骨折的常见原因。</li>
<li>影响血液循环。缺乏运动导致毛细血管收缩，阻碍氧气运输到肌肉和其它组织中。</li>
</ul>
<h3 id="拉伸的好处"><a href="#拉伸的好处" class="headerlink" title="拉伸的好处"></a>拉伸的好处</h3><ul>
<li>坚持拉伸能增加力量，缓解疼痛，增加灵活性。</li>
</ul>
<h3 id="拉伸的黄金准则"><a href="#拉伸的黄金准则" class="headerlink" title="拉伸的黄金准则"></a>拉伸的黄金准则</h3><ul>
<li>正确拉伸要方法正确，多加练习，熟能生巧。开始运动时确保所有角度都是正确的。必须以正确的速度和正确的姿势运动。注意力放在尽可能少地活动关节上。采取阻力最小的方法是人类的天性，这样我们会感到轻松和舒适。但是这种方式缺不是大道较好拉升效果的途径。</li>
</ul>
<h3 id="拉伸基本原理"><a href="#拉伸基本原理" class="headerlink" title="拉伸基本原理"></a>拉伸基本原理</h3><ul>
<li>拉长肌肉。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eloquent JavaScript教学笔记3]]></title>
      <url>http://yoursite.com/2016/10/17/Eloquent%20JavaScript%E6%95%99%E5%AD%A6%E7%AC%94%E8%AE%B03/</url>
      <content type="html"><![CDATA[<h3 id="1、定义函数。"><a href="#1、定义函数。" class="headerlink" title="1、定义函数。"></a>1、定义函数。</h3><ul>
<li>把函数值赋给变量。函数由function开头的表达式组成，函数包括小括号内的参数和中括号内的执行主体。可以有多个参数，也可以没有参数。有的函数有返回值，有的没有，只有副作用。return关键词决定函数的返回对象，如果return后为空，则返回undefined。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var power = function(base, exponent) &#123;</div><div class="line">  var result = 1;</div><div class="line">  for (var count = 0; count &lt; exponent; count++)</div><div class="line">    result *= base;</div><div class="line">  return result;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">console.log(power(2, 10));</div><div class="line">// → 1024</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<h3 id="2、参数和作用域"><a href="#2、参数和作用域" class="headerlink" title="2、参数和作用域"></a>2、参数和作用域</h3><ul>
<li>函数的参数就像常规变量，但是它们的初始值由调用caller给定，而不是函数自身。</li>
<li>函数重要的特征是内部的变量，包括参数，都是函数的局部变量。每次调用都会创建一次变量，而且这些变量互不影响。局部变量是在函数内var定义的，函数外var定义的叫全局变量。只要局部变量与全局变量不是相同的名字，则函数内也可以使用全局变量。</li>
<li>分析lexical scoping词法作用域，要分析函数中的变量由从哪里产生的。函数是唯一产生新作用域的地方。</li>
</ul>
<h3 id="3、函数声明。"><a href="#3、函数声明。" class="headerlink" title="3、函数声明。"></a>3、函数声明。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">console.log(name());</div><div class="line">function name()&#123;return…; &#125;</div></pre></td></tr></table></figure>
<ul>
<li>即使函数在代码下方，依然可以执行。因为函数声明不属于从上到下的控制流。请勿把函数声明放在if条件语句或者循环中，避免故障。</li>
</ul>
<h3 id="4、调用堆栈。"><a href="#4、调用堆栈。" class="headerlink" title="4、调用堆栈。"></a>4、调用堆栈。</h3><ul>
<li>就是程序运行时函数的调用过程。例如A函数调用了B函数，那么程序执行到B函数的时候，call stack里就会有A函数，因为函数调用时需要把当前函数入栈，在B函数执行完毕后再从堆栈里将A函数取出，以让程序指针回到A函数继续运行。</li>
</ul>
<h3 id="5、可选参数。"><a href="#5、可选参数。" class="headerlink" title="5、可选参数。"></a>5、可选参数。</h3><ul>
<li>JavaScript对传给函数的参数很宽容，如果函数只能接收一个参数，则多余参数会忽略，如果需要接收多个参数，则空余的会输出undefined。当一个函数不固定参数，可以设置当其它参数等于undefined时，正使用参数的值为固定值，之后无论有几个参数，都能得出相应的值。</li>
</ul>
<h3 id="6、闭包。"><a href="#6、闭包。" class="headerlink" title="6、闭包。"></a>6、闭包。</h3><ul>
<li>函数内部声明的变量n，函数外是无法读取的。JavaScript语言特有的”链式作用域”结构（chain scope），子对象会一级一级地向上寻找所有父对象的变量，所以只有函数内部的子函数才能读取内部变量。闭包就是定义在一个函数内部的函数。闭包可以读取函数内部的变量，同时让这些变量始终保持在内存中，即闭包可以使得它诞生环境一直存在。</li>
</ul>
<h3 id="7、递归。"><a href="#7、递归。" class="headerlink" title="7、递归。"></a>7、递归。</h3><ul>
<li><p>在栈不溢出的情况下，函数自己调用自己。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">function power(base, exponent) &#123;</div><div class="line">  if (exponent == 0)</div><div class="line">    return 1;</div><div class="line">  else</div><div class="line">    return base * power(base, exponent - 1);</div><div class="line">&#125;</div><div class="line"></div><div class="line">console.log(power(2, 3));</div><div class="line">// → 8</div></pre></td></tr></table></figure>
</li>
<li><p>但是执行简单的循环比执行多次函数速度快很多。</p>
</li>
</ul>
<h3 id="8、代码基本逻辑和原则。"><a href="#8、代码基本逻辑和原则。" class="headerlink" title="8、代码基本逻辑和原则。"></a>8、代码基本逻辑和原则。</h3><ul>
<li>很多时候程序的优雅和执行速度是一对矛盾，人类友好代码和机器友好代码也是一对矛盾。很多时候为了能直观的理解代码而牺牲一些速度。<br>很多框架用的都是面向对象的思想，抽出多个实例的共同部分，然后把这个共同部分当做共有函数，把实例当做共有函数的对象。</li>
<li>基础的原则是如果不是确信需要改良代码，那么就不要急着耍小聪明。不要操之过急，急着使用各种框架。需要的是真正把问题解决掉，而不是挖空心思写一堆没人用的代码。</li>
</ul>
<h3 id="9、纯函数和副作用函数。"><a href="#9、纯函数和副作用函数。" class="headerlink" title="9、纯函数和副作用函数。"></a>9、纯函数和副作用函数。</h3><ul>
<li>纯函数目的在于返回值，包含return，副作用函数目的在于打印出一行代码，包含console.log。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eloquent JavaScript教学笔记2]]></title>
      <url>http://yoursite.com/2016/10/01/Eloquent%20JavaScript%E6%95%99%E5%AD%A6%E7%AC%94%E8%AE%B02/</url>
      <content type="html"><![CDATA[<ul>
<li>表达式与语句。表达式就是一个一个值，类似于英文中的单词，语句是为了完成某种任务的操作，以分号结尾，类似于英文中的句子。</li>
<li>变量。变量是获取和储存值的。变量不是盒子，而像章鱼的触手，不包含值，而是抓取值。两个变量可以指向同一个值。也可以赋予变量新的值。当没有值赋予给变量，则会返回undefined值。</li>
<li>关键字和保留字。它们不能做变量名，完整版如下：<br>“break case catch class const continue debugger<br>default delete do else enum export extends false<br>finally for function if implements import in<br>instanceof interface let new null package private<br>protected public return static super switch this<br>throw true try typeof var void while with yield”</li>
<li>环境。变量和它们的值所在的空间被称为环境。当程序启动，环境不是空的。它包括语言规范的变量，更多时候是与操作系统交互的变量，就浏览器而言，包括检测到的当前网页的变量和函数，鼠标和键盘的输入。<a id="more"></a></li>
<li>函数。函数是有值的被包装的程序。这些值可以被应用来运行函数。运行一个函数被称为调用（invoking, calling, or applying），在表达式后面加括号。通常直接使用变量名保存函数。括号中的值是函数中默认的值，称为参数。</li>
<li>console.log函数。用来输出值，在文本输出设备上显示值。在浏览器中，JavaScript console中显示输出的值。<br>-返回值。当函数产生一个值，被称为返回值。</li>
<li>side effect 副作用。就是编程语言的函数比数学概念上的函数多出来的那些事情，每个函数都会产生一个返回值，但是当这个返回值可以显示在屏幕上，或者弹出对话框，那么这就是意外的事情了。函数一般认为是没有状态的，每次用相同的输入调用时应当给出相同的输出，且不会影响程序的其它部分。如果函数对程序的状态有影响，这种影响就叫作“side effects”。没有负面意义，只表明附加功能。</li>
<li>confirm和prompt函数。两个函数是另外可以弹出对话框的函数。confirm函数弹出ok／cancel的对话框，返回布尔值。prompt函数弹出输入对话框，用于与用户交互，提示用户输入信息的对话框。第一个参数用于提示用户输入的信息，第二个参数用于用户输入文本信息，返回值为用户输入的字符串。两个函数在网页开发中不常见，正常网页不需要大量弹出。但在玩具程序和实验中常用。</li>
<li>控制流(Control flow)。当一个程序超过两行语句时，执行顺序是从上到下。</li>
<li>条件执行。根据布尔值有两条不同的路线执行。使用if／else关键词。</li>
<li>循环(while和do)。把需要循环的语句放在大括号内，这些语句称为块。while循环先考虑条件再执行循环语句，do循环则是先执行一次循环语句再考虑条件。</li>
<li>首字母空格代码(Indenting Code)。即使写成一行，电脑也可以编译出代码，但是未来阅读和debug直观，建议首字母空格，并且换行。</li>
<li>for循环。把初始变量，限制条件和变化方式都写在for后的小括号中，把循环语句放在大括号里。</li>
<li>跳出循环break和continue，break表示当满足条件之后，不再循环，直接执行循环外的语句。continue表示立即终止本轮循环，进行下一轮循环。</li>
<li>变量更新简写。counter = counter + 1;可以写成counter += 1;或者counter++。</li>
<li>switch分布循环。由多个条件选项时，倾向用switch循环。switch引起循环，case表示条件，break跳出，default默认最终条件。</li>
<li>首字母大写。由于变量名不可以有空格，所以为了想表达变量的含义，变量名的每个单词首字母大写或者加下划线“_“隔开，是最佳的变量名书写方式。</li>
<li>注释：单行注释用 // ，多行注释用/<em>   \</em>/。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Eloquent JavaScript教学笔记1]]></title>
      <url>http://yoursite.com/2016/09/30/Eloquent%20JavaScript%E6%95%99%E5%AD%A6%E7%AC%94%E8%AE%B01/</url>
      <content type="html"><![CDATA[<p>javaScript的发展飞速，由最初运行在浏览器上的语言发展到前端后端，桌面端移动端通用的语言。JS是每一个想拥有创造力的现代人都要掌握的基本工具。由笑来老师推荐开始学习Eloquent JavaScript，全英文的阅读体验，逻辑更清晰，阐述更明了，建议读原文，在此做些许笔记，以供复习和参考。</p>
<ul>
<li>Values, Types, and Operators 值，类型和操作符</li>
<li>程序的世界就是数据，所有数据都以二进制存在。数据以不同方式组成的块，在javascipt中就叫值，都属于一种数据类型，js中有6种类型numbers数值, strings字符串, Booleans布尔值, objects对象, functions函数, undefined values空值.</li>
<li>值由名称(true,null)和具体值(123,’abc’)组成。值通过操作符连接和转换。数学操作符(+, -, *, /, and %)，字符串连接符(+)，比较符(==, !=, ===, !==, &lt;, &gt;, &lt;=, &gt;=)， 逻辑运算符(&amp;&amp;, ||)，位运算符(- 使数字变负, ! 非, typeof显示值类型)，三元条件运算符 (?:).</li>
<li>具体每个数据类型的用法参照《JavaScript 标准参考教程（alpha）》by 阮一峰，<a href="http://javascript.ruanyifeng.com/grammar/types.html" target="_blank" rel="external">点此</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记10]]></title>
      <url>http://yoursite.com/2016/09/27/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B010/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记10-完结篇"><a href="#最精华的高尔夫基础教学视频笔记10-完结篇" class="headerlink" title="最精华的高尔夫基础教学视频笔记10(完结篇)"></a>最精华的高尔夫基础教学视频笔记10(完结篇)</h2><p>这一部分主要介绍了如何救球，脱离险境。</p>
<h3 id="救球的考虑因素"><a href="#救球的考虑因素" class="headerlink" title="救球的考虑因素"></a>救球的考虑因素</h3><ul>
<li>priorities and goals.对球的优先考虑和目标，ball flight requirements.球飞行弹道的考虑，lie considerations.球位及四周状况，stance and balance.站姿与平衡，special considerations.特殊情况。</li>
</ul>
<h3 id="priorities-and-goals-对球的优先考虑和目标"><a href="#priorities-and-goals-对球的优先考虑和目标" class="headerlink" title="priorities and goals.对球的优先考虑和目标"></a>priorities and goals.对球的优先考虑和目标</h3><ul>
<li>救球第一优先考虑的事情是 <strong>摆脱困境并且减少损失，保证水准内的最合理杆数</strong>。必须在击打前有明确的计划，要球怎么做，球落在哪里，落地后怎么做。<strong>计划工作做得好，打起来也很容易</strong>。<a id="more"></a></li>
</ul>
<h3 id="ball-flight-requirements-球飞行弹道的考虑"><a href="#ball-flight-requirements-球飞行弹道的考虑" class="headerlink" title="ball flight requirements.球飞行弹道的考虑"></a>ball flight requirements.球飞行弹道的考虑</h3><ul>
<li><strong>影响球路的最大因素是击球时杆面带给球的旋转。球杆运动的方向和角度加上杆面的仰角形成后旋，影响球的弹道</strong>。如果杆面的瞄准方向与球杆的行进方向不一致，则球路会出现弯曲。如果杆面瞄向球杆行进方向的左侧，则球会逆时针旋转，打出左曲球；如果杆面瞄向球杆行进方向的右侧，则球会顺时针旋转，打出右曲球。</li>
</ul>
<h3 id="lie-considerations-球位及四周状况"><a href="#lie-considerations-球位及四周状况" class="headerlink" title="lie considerations.球位及四周状况"></a>lie considerations.球位及四周状况</h3><ul>
<li><strong>球境主导选择</strong>。</li>
<li>当球陷入长草，长草与果岭间有沙坑，则不能用在临近距离正常球位时所用的球杆击球。要选用角度更大的球杆，例如沙坑杆。改变瞄准方向，因为要避开沙坑。使球位稍微靠后，直立挥杆，打上球道，然后再上果岭。</li>
<li>当球在光秃的草地上时，想打出高球很难。要让球位靠后，让球杆向下击打，弹道较低。</li>
<li>当球停在打痕里，选择角度较大的球杆，球位靠后，利用球杆角度击打到果岭前。</li>
</ul>
<h3 id="stance-and-balance-站姿与平衡"><a href="#stance-and-balance-站姿与平衡" class="headerlink" title="stance and balance.站姿与平衡"></a>stance and balance.站姿与平衡</h3><ul>
<li><strong>对于不平坦的球位，一定要试挥，试挥让你检测是否可以保持平衡，且确定杆头触地的位置</strong>。观察杆头擦到地上的何处，会告诉你面对这种球位，什么站姿才是正确的站位。</li>
<li>在上坡或下坡球位，肩膀必须配合地势倾斜，将重心置于下方的一脚，顺着斜坡挥杆击球。重要的是能在挥杆中保持平衡。</li>
<li>在球比脚高的球位，由于球离身体更近，所以往下握杆，挥杆将更加水平，尽量绕着身体，这样会造成杆面击球时指向左侧，所以瞄向必须比正常情况下偏右。球位稍靠前。</li>
<li>在球比脚低的球位，由于球离身体更远，所以要更多俯身，会带来更直立的挥杆，避免击中球后的草皮，击出的球有右曲倾向，所以稍偏向左侧瞄准，一定要注意保持身体的重心，保持平衡。</li>
</ul>
<h3 id="special-considerations-特殊情况"><a href="#special-considerations-特殊情况" class="headerlink" title="special considerations.特殊情况"></a>special considerations.特殊情况</h3><ul>
<li>如果收杆受到树枝的影响，为避免球杆损坏，可以把球位移到右脚外侧，挥杆更加直立，送杆会受草皮的阻挠。如果上杆受到树枝影响，也可以采取相同站位和挥杆，避免球杆损坏。<strong>避免不必要损失只需要挥杆前调整球位</strong>。</li>
<li>如果树影响站位，只能学左手球员击球，将杆头反转，或者背对目标，右手单手向后甩击球。</li>
<li><strong>如果在沙坑击球，目标是扎实击球，打出足以越过沙坑壁的弹道</strong>。双脚踩入沙坑，球位靠后，下挥击球。下握球杆，确保先击打沙子，再击打球，根据距离选择杆面角度足够的球杆，保持挥杆流畅，保持平衡。</li>
<li>如果在目标和球之间有棵树，离树太近无法飞越，向下穿越弹道太低，要打出球绕过树。打出先左后右的球（小右曲fade），打开杆面，创造顺时针旋转，打出右曲；开放站位，左脚向后，瞄向树木左侧。打出先右后左的球（小左曲draw），关闭杆面，稍稍左扣，给球逆时针的旋转，关闭式站位，右脚靠后，瞄向树木右侧。</li>
<li>聪明的高尔夫是尽量避开沙坑和水障碍，适当可以选择打上开阔球道，避免一味直攻。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记9]]></title>
      <url>http://yoursite.com/2016/09/27/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B09/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记9"><a href="#最精华的高尔夫基础教学视频笔记9" class="headerlink" title="最精华的高尔夫基础教学视频笔记9"></a>最精华的高尔夫基础教学视频笔记9</h2><p>这一部分主要介绍了长铁杆和球道木。</p>
<h3 id="打好长杆"><a href="#打好长杆" class="headerlink" title="打好长杆"></a>打好长杆</h3><ul>
<li>greeting the motion.如何创造挥杆动作，directing the motion.如何引导这个动作，staying in balance.如何保持平衡，making contact——impact.如何击打球并且相信自己，club selection.如何明确选杆，practice routine 如何发展练习流程和更多关键点。<br>greeting the motion.如何创造挥杆动作。</li>
</ul>
<h3 id="greeting-the-motion-如何创造挥杆动作"><a href="#greeting-the-motion-如何创造挥杆动作" class="headerlink" title="greeting the motion.如何创造挥杆动作"></a>greeting the motion.如何创造挥杆动作</h3><ul>
<li>circular, continuous, graceful 圆弧，连续，优雅的动作。为了戒掉距离短，紧张，快速和非平衡的长杆挥杆，<strong>应该重新调试自己的直觉，让上杆感觉至少有两倍长。永远要做出比超过你所需要的上杆幅度。</strong><a id="more"></a></li>
<li>球杆变长，角度变小，每支杆距离相差8码，是长度和角度导致的，没有增加额外的力；</li>
<li>球杆底角也随着球杆变长而变化，球杆越长，杆身越水平，挥杆时身体更容易转动，更多转身能创造出更高的杆头速度；</li>
<li>杆身越长球杆越轻，轻球杆更容易加快杆头速度。 继续保持正常的挥杆，利用球杆自有的特征使球飞得更远。</li>
<li>紧张是破坏节奏的最大敌人。消除紧张的要诀：<strong>左臂和左腕永远保持放松和自由，击球前作摇摆运动，消除紧张。</strong> 手肘检测：击球前手肘提起杆头，确定在手肘关节自由下挥杆，手腕检测：上曲球杆或者远离球，活动手腕，感受杆头的重量，确认手腕灵活放松。感受距离：球杆放在球后，感受球与身体的距离是否合适。</li>
</ul>
<h3 id="directing-the-motion-如何引导这个动作"><a href="#directing-the-motion-如何引导这个动作" class="headerlink" title="directing the motion.如何引导这个动作"></a>directing the motion.如何引导这个动作</h3><ul>
<li>继续强调握杆，握杆姿势正确与否对于挥杆影响极大。左手手指握杆，手指在球杆右侧，手掌靠近球杆，拇指只想球杆重心偏右一点的位置，露出食指和中指两个圈关节。握好后可以用手腕将球杆举起并平行地面，弯折点在拇指根部，使手腕保持最大灵活。感觉可以在地上捶入钉子，动作具有控制性和自由度。右手掌正对左手，手指握杆， 右手拇指盖住左手拇指，指向左边，右手拇指与食指成V字型，继续用铅笔来纠正右手握杆，要平行球杆。</li>
<li>球位：球位根据球杆长度变化，球杆越长，球位越靠前，即左脚。保持球杆击球时的轨迹与地面平行。球位不是随意靠前或靠后，根据中心位置前后移动，以两脚脚跟为边界。</li>
<li>击球顺序：先杆面瞄准，然后校正身体。<strong>完美的直球挥杆是在任何时候都指向或平行目标线的</strong>，上杆杆头指向，然后平行，然后杆尾部指向，然后上杆到顶点平行，然后下杆杆尾部指向，然后平行，然后杆头击球指向，然后收杆指向，收杆平行收杆杆尾部指向。</li>
</ul>
<h3 id="staying-in-balance-如何保持平衡"><a href="#staying-in-balance-如何保持平衡" class="headerlink" title="staying in balance.如何保持平衡"></a>staying in balance.如何保持平衡</h3><ul>
<li>平衡始于头部，如果头在中间，可以平衡双脚重量分布。脊柱不要驼背，也不要像军训一样僵硬，<strong>抬头提臀把背挺直</strong>。<strong>空挥球杆，身体先绕着右腿转，然后再绕着左腿转，使所有位置都处于平衡状态</strong>。练习1:上杆时左腿抬起一起向右摆，然后下杆，这样练习是加强身体绕着右腿转动，而不是向右平移。感受右脚平衡与支撑上杆，感受左腿引导下杆。练习2: 闭上双眼试挥，感受平衡。感受挥杆，感受杆头挥在面前，感受双腿重心转移，接触地面。</li>
</ul>
<h3 id="making-contact——impact-如何击打球并且相信自己"><a href="#making-contact——impact-如何击打球并且相信自己" class="headerlink" title="making contact——impact.如何击打球并且相信自己"></a>making contact——impact.如何击打球并且相信自己</h3><ul>
<li>让球杆水平挥过球，扫过地面，任由杆面角度将球带上来。<strong>不用试着打上去，杆面会自动帮助你，让杆面角度自己创造弹道。</strong></li>
</ul>
<h3 id="club-selection-如何明确选杆"><a href="#club-selection-如何明确选杆" class="headerlink" title="club selection.如何明确选杆"></a>club selection.如何明确选杆</h3><ul>
<li>在练习场练习，如果某个铁杆击球过低无法停在目标果岭，则放弃使用。如果某支杆练出理想高度，并且可以停在目标果岭，则放进球包。</li>
</ul>
<h3 id="practice-routine-如何发展练习流程和更多关键点"><a href="#practice-routine-如何发展练习流程和更多关键点" class="headerlink" title="practice routine 如何发展练习流程和更多关键点"></a>practice routine 如何发展练习流程和更多关键点</h3><ul>
<li>练习1:左脚尖法。左脚后移，脚尖点地。然后不断试挥，保持平衡，训练灵活度。<strong>如果上杆太紧张，手腕和手臂不够灵活，则上杆时容易失去平衡，如果上杆太用力，则下杆时容易失去平衡。</strong></li>
<li>总结：长杆要做出圆弧连续的优雅动作，注意握杆，球位和击球顺序。重点在于保持平衡，保持灵活和转体，相信球杆自身角度可以自己创造弹道。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记8]]></title>
      <url>http://yoursite.com/2016/09/25/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B08/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记8"><a href="#最精华的高尔夫基础教学视频笔记8" class="headerlink" title="最精华的高尔夫基础教学视频笔记8"></a>最精华的高尔夫基础教学视频笔记8</h2><p>这一部分主要介绍了劈起球。</p>
<h3 id="劈起球的学习要点"><a href="#劈起球的学习要点" class="headerlink" title="劈起球的学习要点"></a>劈起球的学习要点</h3><ul>
<li>definition,劈起球的定义，equipment, 打出球路所需的球杆和方法，technique and execution如何握杆，摆杆和挥杆，tips for success注意事项。</li>
</ul>
<h3 id="definition-劈起球的定义"><a href="#definition-劈起球的定义" class="headerlink" title="definition,劈起球的定义"></a>definition,劈起球的定义</h3><ul>
<li>近距离击出高飞，高旋转球，落在果岭上会留下明显球痕，这就是劈起球。劈起球的三大要素：trajectory / distance / roll弹道／距离／滚动。弹道越低，滚动越多，弹道越高，滚动越少。<a id="more"></a></li>
</ul>
<h3 id="equipment-打出球路所需的球杆和方法"><a href="#equipment-打出球路所需的球杆和方法" class="headerlink" title="equipment, 打出球路所需的球杆和方法"></a>equipment, 打出球路所需的球杆和方法</h3><ul>
<li>建议在60至100码之间使用p杆。杆头向下击球，杆头底部设计是使球杆划过，带起草皮，不是挖进地里停住，也不是反弹至空中。会产生低弹道球，球上果岭后不会立即停止，会有大量滚动。</li>
<li>建议在60码以内使用s杆。沙坑杆角度更大，弹道更高，利于落果岭即停。另外杆头更重，大部分重量在击球重心点下方，低于杆面会触球的点，有了低于球中心的重量，将击出更高的弹道。第三个原因是杆面底脚的设计是击打地面之后立刻弹起，也有利于高弹道的产生。</li>
</ul>
<h3 id="technique-and-execution-如何握杆，摆杆和挥杆"><a href="#technique-and-execution-如何握杆，摆杆和挥杆" class="headerlink" title="technique and execution,如何握杆，摆杆和挥杆"></a>technique and execution,如何握杆，摆杆和挥杆</h3><ul>
<li>左手握杆后能看到食指和中指的两个关节。检测左手是否握杆正确方法：左手不动手臂，可以轻松抬起球杆，可以用左手单手击打球。右手手掌应该正对目标。如果手掌朝天，则容易使杆面左盖，打出左低球。 如果手掌朝地，则容易使杆面打开，打出向右的球。检测右手是否握杆正确方法：把铅笔卡在虎口，如果握杆太右，则铅笔朝右，反之铅笔朝左。 要使铅笔与球杆平行。检测双手的方法1：两手的手指都正靠着球杆的两侧。这样的握杆可以充分控制球杆。检测双手的方法2：准备姿势之后，松开右手，如果右手弹到身体正右侧，则说明握杆和准备姿势正确。如果准备重心靠后，则松开右手会弹到腿部。如果太前倾，则松开右手会弹到身体外侧。用手指挥杆，感受球杆自由运动，感受双臂在上下杆时的拉伸感。要感觉球杆像锤子，手和手臂要非常灵活轻盈，感受杆头的重量。</li>
<li>控制球杆。利用手指，手指不仅控制的击球方向，还控制了劈起球所需的距离。练习1：试挥让人感觉不出你是左手球员还是右手球员，那么挥杆的节奏和韵律会非常好。练习在镜子前不断挥杆，看到球杆在两侧是等高的。要感觉不是在击球，而是完成挥杆，让杆头恰好移动球。练习2:让双臂非常舒展，柔软灵活。准备姿势后，将球杆提起，悬在球上方，然后挥杆，如果双臂足够柔软和舒展，则可以正确的击打球后方，如果双臂很紧绷，则会打到球的上方。这样练习能让球有更多的倒旋。如果身体非常前倾放下球杆，会造成杆头过早接触地面或是起身打出地滚球。练习3:放一把椅子，使球低飞，穿过椅子坐板下方。球位靠右，在右脚外侧，双手在球前，重心前倾。使球穿过椅子坐板上方，椅背下方空隙。球位在右脚内侧，杆面稍微打开一点，斜朝向天空。使球飞过椅背上方。球位在左脚外侧，杆面继续打开，有充分的挥杆。</li>
<li>挥杆距离的增加完全来自于上杆幅度，幅度越大，杆头速度越快，距离越远，不需要任何其他的力道。保持动作流畅，改变动作幅度大小。</li>
<li>杆面角度影响滚动距离。如果想让球滚动多一点，则球位靠右脚，杆面左扣一点。如果想让球高飞落地即停，则球位靠左脚左侧，杆面完全打开。</li>
<li>总结：手指感受球杆，双脚感受地面，双眼瞄准目标，脑海中想象出球的轨迹，然后流畅击球。</li>
</ul>
<h3 id="tips-for-success-注意事项"><a href="#tips-for-success-注意事项" class="headerlink" title="tips for success,注意事项"></a>tips for success,注意事项</h3><ul>
<li>练习:站位距离球非常近，使球杆直上直下，高飞球练习。 如果要打出更高飞的球，则在保持节奏的前提下，上杆和下杆手腕都快速提拉，提早曲腕。如果要打出低飞球，则则在保持节奏的前提下，上杆和下杆手腕都压低，减慢曲腕。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记7]]></title>
      <url>http://yoursite.com/2016/09/24/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B07/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记7"><a href="#最精华的高尔夫基础教学视频笔记7" class="headerlink" title="最精华的高尔夫基础教学视频笔记7"></a>最精华的高尔夫基础教学视频笔记7</h2><p>这一部分主要介绍了果岭边切球。</p>
<h3 id="切击定义"><a href="#切击定义" class="headerlink" title="切击定义"></a>切击定义</h3><ul>
<li>介于劈击和推杆之间。弹道低且接近果岭，飞得少，滚得多。越靠近果岭，手腕运动越少。基本分四步骤。1、fundamentals,基本动作，2、ball control,控球，3、shots decisions,击球选择，4、practice and drills.练习方法。</li>
</ul>
<h3 id="fundamentals-基本动作"><a href="#fundamentals-基本动作" class="headerlink" title="fundamentals,基本动作"></a>fundamentals,基本动作</h3><ul>
<li>1、轻握球杆，双手握杆错误，则无法控制杆面。</li>
<li>2、握短球杆，提起杆头，杆头悬于球后。<a id="more"></a></li>
<li>3、定位。重心前移，打地前先触球。准备姿势时球杆要悬在球后，不要放在地面上。</li>
<li>4、预备动作。做很多次试挥，由于上杆幅度很小，所以要 <strong>多次试挥，得到挥杆的速度感和所需的距离感。</strong> 谨慎地测量圆弧的底点，如果杆头在试挥时触地，则说明基本动作有误，重新调整后再试挥，试挥后再看一次目标，然后重复试挥的感觉击球。</li>
</ul>
<h3 id="ball-control-控球"><a href="#ball-control-控球" class="headerlink" title="ball control,控球"></a>ball control,控球</h3><ul>
<li>学会预测击球的方向，距离和弹道。对于方向，要方正击球，杆面中央击球，击球后沿着目标送出。对于距离，取决于挥杆幅度和速度。<strong>要注意自己不要仓促，不要匆忙击球，要平顺地加强力量。</strong> 球位和周边环境影响了球杆的选择和弹道。较差球位用切杆，打开杆面击球，弹道像8铁正常球位击球。正常球位，用切杆，飞行高度高，滚动少。用6铁角度小的杆，飞行高度低，滚动多。</li>
<li>正常切杆，上杆与下杆划弧距离相同，可以加稍微一点点手腕动作。如果想要球停的快一点，则可以采用“打，停”的方法，稍微紧握球杆，击球后立刻停止划弧。这样加强了下挥击球，增加了倒旋。如果想让球多滚动一些，则下杆稍微左扣，减少球的倒旋。但是滚动多少距离，最好的方式是用不同的球杆，这样稳定性比改变挥杆方式要大很多。</li>
</ul>
<h3 id="shots-decisions-击球选择"><a href="#shots-decisions-击球选择" class="headerlink" title="shots decisions,击球选择"></a>shots decisions,击球选择</h3><ul>
<li>首先观察球位，好球位有多种击球选择，球位越差选择越少，最差球位只能用切杆打开杆面击球。其次要观察周边情况，球与旗杆间的情况，周边障碍情况，预估多少码飞行，多少码滚动。<strong>尽量简化事情，如果简单球路可以奏效，千万不要选择困难的球路。</strong> 凹陷球位，用角度最大的杆，例如沙坑杆，握短，距离球进，重心前压，杆面右开，站位开放，挥杆幅度增大，直上直下。在可用推杆却草仍然较长的情况下，可以选择拿铁杆，用推杆的方式推球。重心和双手前压，绝不使用手腕动作。<strong>切杆前，站上果岭，感受果岭硬度和坡度，然后决定落球点和策略，预备姿势挥杆，然后瞄准目标击球。</strong></li>
</ul>
<h3 id="practice-and-drills-练习方法"><a href="#practice-and-drills-练习方法" class="headerlink" title="practice and drills.练习方法"></a>practice and drills.练习方法</h3><ul>
<li>1、摆放辅助击球线，木板或球杆，指向目标，然后球与其距离靠近，变化挥杆幅度，感受方正击球和挥杆方向。</li>
<li>2、只用左手击球。</li>
<li>3、球后8英尺摆一排高尔夫球，自己下杆时要避开这些球。</li>
<li>4、把球扔向目标，让球在你想要的地方落地，用扔球练习距离控制感及落球点。</li>
<li>5、把球包平放在球前方三尺处，使球飞过球包滚向果岭，然后用tee四周围住落球点，拿走球包，正常切杆，使球落在tee的包围范围内。最终练习的结果是每球弹道相同，落点相同，球停点也相同。</li>
<li>6、放5个球在一排，连续击球，每一次击球的距离都超过前一次，但不要击出果岭。有助于建立距离感。</li>
<li>总结为轻握杆，下垂手臂，提起杆头，考虑球位，测量距离，多次试挥演练，扎实击球。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记6]]></title>
      <url>http://yoursite.com/2016/09/23/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B06/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记6"><a href="#最精华的高尔夫基础教学视频笔记6" class="headerlink" title="最精华的高尔夫基础教学视频笔记6"></a>最精华的高尔夫基础教学视频笔记6</h2><p>这一部分主要介绍了推杆击球。</p>
<h3 id="价值连城的推击"><a href="#价值连城的推击" class="headerlink" title="价值连城的推击"></a>价值连城的推击</h3><ul>
<li>推杆是力挽狂澜的最重要的击打。swing mechanics,推杆技巧。how to practice, 如何练习，how to warm up,如何热身， how to develop a putting routine. 形成一整套推杆流程。</li>
</ul>
<h3 id="swing-mechanics-推杆技巧"><a href="#swing-mechanics-推杆技巧" class="headerlink" title="swing mechanics.推杆技巧"></a>swing mechanics.推杆技巧</h3><ul>
<li>很多职业选手挥杆姿势不同，但是很多地方相似。他们都有 <strong>合理的推杆，限制性的转动，而且推的很扎实。</strong> 由于目前的果岭又硬又快，所以球员都 <strong>尽可能少的运用手腕。</strong></li>
<li>建立稳固的推杆要实现三个目标，swing with a rhythmical  beat 用节奏来推杆， make consistent, solid contact. 稳定持续扎实地击球， minimize your power source. 最小化力量来源。<a id="more"></a></li>
<li>1、用节奏来推杆，钟摆的节奏，有快有慢，选择适合自己的节奏。慢速长流畅挥杆和肩膀紧靠的短手腕式敲击法，<strong>节奏韵律与握杆有关系，慢速长流畅挥杆轻握杆，短手腕式敲击重握杆。</strong> 通过右手四指感受握杆力度，最重要的点在于保持稳定。</li>
<li>2、扎实击球意味着用推杆的中心击打球的中心，即接触甜蜜点。测试甜蜜点的方法，拎起推杆杆头，拿球敲击，由外向内，如果遇到正反弹的位置，即是甜蜜点。脊柱倾斜度对挥杆很大影响，脊柱右倾，造成由内而外推，脊柱左倾，造成由外而内的推。准备动作，杆头提离地面，双臂自然下垂，握把位于肩正下方处。若手臂太靠身体内侧，则上杆会向外侧，推向内侧。如果握把位置超出肩膀垂直线，则上杆将向内，推向外侧。练习1:果岭上放置两枚大小不同的硬币，大下小上，如果重心位于硬币上放，则推杆可以把上方硬币推走。如果球太偏右，重心向左，则会推走两枚硬币。如果球位靠前，重心靠右，则不会移走任何一枚。如果球位与重量协调良好，则很容易移走上方硬币。</li>
<li>3、最小力量来源可以简化推杆。较少手部动作减少错误。<strong>职业球员都是手臂和推杆一体化，</strong> 一体化的秘诀在于前臂与推杆一条直线，双手不是相对的，是等程度外翻，越外翻手腕运动越少。举起球杆，查看杆身延长线是否对准虎口， 此时左手臂在握把正前方，右手臂在握把正后方。</li>
</ul>
<h3 id="how-to-practice-如何练习"><a href="#how-to-practice-如何练习" class="headerlink" title="how to practice.如何练习"></a>how to practice.如何练习</h3><ul>
<li>control the distance, 控制距离，how to aim 如何瞄准，control the direction, 控制方向，repeating stroke, 重复推法， develop positive attitude, 正确的心态。learn to read greens学会阅读果岭。</li>
<li>控制距离练习：沿目标设置三支球杆间隔相同，先向最远的开始推，<strong>得到距离感和果岭速度，</strong> 重点在距离感，推出球后，看球时杆头也指向它。然后由远及近，可以深刻得到距离感和果岭速度。</li>
<li>控制方向练习：两支球杆平行于目标线摆放，球放球杆中间推击。瞄准顺序为：先用杆面瞄准，双眼看一下洞口后缘，然后身体就位，然后双眼看一次路线，盯着球击出。</li>
<li>推杆重复性练习：在同一位置连续推三个球，每次都不要看结果，最后三个球距离越近，推杆越有重复性。</li>
<li>正确心态练习1：在同一位置连续推三个球，让第一个球刚刚可以掉入洞中，第二个瞄洞中央入洞，第三个球让球反弹后入洞。长距离要被动保稳，短距离要主动积极。三种入洞方式选择一种记在心中，让身体准备好，总专注于正面的结果，享受推杆的乐趣，球入洞的声音非常美妙。</li>
<li>阅读果岭练习：<strong>考虑速度和坡度。观察果岭坡度的转折点，即球拐弯的点。</strong> 在折点处放置tee来设置门槛，以合适的速度使球穿过门槛。会让你非常有信心 <strong>掌握蛇形路线。</strong> 推之前思考球会如何滚动，决断性越强推的越好。首先在球道就开始看果岭坡度，然后走向球对面看坡度，然后站在球后看坡度，然后试挥几杆，瞄球，身体就位，推出。 三次观察会给你更肯定的判断，然后就要坚信自己的判断。</li>
</ul>
<h3 id="how-to-warm-up-如何热身"><a href="#how-to-warm-up-如何热身" class="headerlink" title="how to warm up.如何热身"></a>how to warm up.如何热身</h3><ul>
<li>在练习果岭上，感受果岭速度，感受自己的挥杆，加强自己的瞄准能力。</li>
<li>感受速度练习:试着推3颗球，都将球推穿过整个果岭，推向边缘，然后再准备3个球，第一颗推到1／3的位置，第二颗推到2／3的位置，第三个穿过整个果岭。试着使球停点间距相等，然后将球都推向边缘。</li>
<li>感受挥杆练习：上述不看结果，使三个球停点很近。</li>
<li>瞄准流程：专注于球要去的方向，先瞄准杆面，双眼沿路线看向瞄准点，然后身体就位，再沿路线看洞后瞄准点，再看球后推出。</li>
<li>找个伙伴一起比赛。有小压力对于动作和心理都有帮助。</li>
</ul>
<h3 id="how-to-develop-a-putting-routine-形成一整套推杆流程"><a href="#how-to-develop-a-putting-routine-形成一整套推杆流程" class="headerlink" title="how to develop a putting routine.形成一整套推杆流程"></a>how to develop a putting routine.形成一整套推杆流程</h3><ul>
<li><strong>先想球的速度，然后看出球的行径路线，</strong> 一旦拿定主意就走开。试挥出产生正确速度的挥杆，然后瞄准杆面，双眼沿路线看向瞄准点，然后身体就位，再沿路线看洞后瞄准点，再看球,然后推出。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记5]]></title>
      <url>http://yoursite.com/2016/09/22/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B05/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记5"><a href="#最精华的高尔夫基础教学视频笔记5" class="headerlink" title="最精华的高尔夫基础教学视频笔记5"></a>最精华的高尔夫基础教学视频笔记5</h2><p>这一部分主要介绍了沙坑击球。</p>
<h3 id="沙坑救球"><a href="#沙坑救球" class="headerlink" title="沙坑救球"></a>沙坑救球</h3><ul>
<li>击好沙坑球，需要注意沙，球杆和挥杆。</li>
</ul>
<h3 id="沙"><a href="#沙" class="headerlink" title="沙"></a>沙</h3><ul>
<li>正常站姿，但是要踩进沙坑，降低身体高度，从而降低挥杆路径，结果就是打在球后某处。<strong>要注意不是杆面击球，而是杆面击沙。</strong> 练习1:画岛屿，在沙坑中画一个椭圆形“岛屿”，然后打走这个“岛屿”，击出沙子，然后放球在“岛屿”上，不要专注于球，球只是恰好放在岛屿中央，要打球后4至5英寸，基本上要打走球前后等量的沙子。所以踩进沙坑，降低身体高度，杆头瞄准球的后方，将球杆打在球的后方，让喷出的岛屿带球上果岭。<strong>总而言之，沙坑球就是让沙带球运动。</strong><a id="more"></a></li>
</ul>
<h3 id="球杆"><a href="#球杆" class="headerlink" title="球杆"></a>球杆</h3><ul>
<li>沙坑杆通常与其它杆不同，有前缘leading edge和后缘trailing edge。大部分沙坑击球是有后缘击打的，可以比喻为挖土缘和滑雪缘。 要打开杆面，平行于目标线，但是注意双手不要前压和后移。在沙坑中较差凹陷球位挖土前缘是唯一接触沙的点。沙坑中正常球位，后缘是接触点。沙子打出的颜色证明球击出的距离，不能控制球的距离就表明不能控制打起的沙量。</li>
</ul>
<h3 id="挥杆"><a href="#挥杆" class="headerlink" title="挥杆"></a>挥杆</h3><ul>
<li><strong>重点感受左手臂的移动，</strong> 从6点方向上升到10点，然后击球，回到2点方向。因为要把沙子作为缓冲物，所以要比在正常草地中更长挥杆。<strong>下肢要转动，</strong> 尤其是收杆右脚脚跟要抬起，脚尖点地。要记住沙子飞出的方向对于球的影响大于杆面方向，所以站位要保持正常，正对目标。练习1:将木条嵌入沙坑，在木条上放一小撮沙子，然后杆面打开击球，把木条上的沙子丢向目标，球也朝同方向飞去，杆面后缘会有木条的胶漆。</li>
</ul>
<h3 id="不同的沙坑球位打法"><a href="#不同的沙坑球位打法" class="headerlink" title="不同的沙坑球位打法"></a>不同的沙坑球位打法</h3><ul>
<li>”荷包蛋’，嵌入沙坑的球，这时要保持方正杆面，握短球杆，造成更大的下挥击球且更接近球。然后双脚嵌入沙坑，重心靠前，球位靠后，挖土缘正对球，重心靠前很多， 重中之重是别用太大力，挥杆是直上直下。</li>
<li>浅沙球位，担忧是击出的沙量太少，导致球飞得太远。球往后摆，双脚不用太深嵌入沙子。重心靠前，用前缘击球， 用极慢的速度做小挥杆，因为沙子不多，所以控制挥杆幅度。</li>
<li>打软沙时，知道球底部沙子太厚，球无法飞得太远。所以尽可能打开杆面，双脚站在沙上，球靠前，重心靠后，特大挥杆，球杆速度加快，会击出很多沙，此时目标不是旗杆，而是击出沙坑。</li>
</ul>
<h3 id="控制距离"><a href="#控制距离" class="headerlink" title="控制距离"></a>控制距离</h3><ul>
<li>杆面，杆面方正击打的沙子多，球飞得近，杆面打开，击打的沙子少，球飞得远。</li>
<li>沙子组成。硬沙球飞得远，打丝质细沙，球飞得很近。</li>
<li>准备动作。球在后方，重心在前方，造成陡直的击球角度。球在中间，重心在中心，正常挥杆，球后方沙子击出较少。球在前方，重心在后方，球后打出的沙子最少。</li>
<li>双脚踩入沙的深度。最坏的球位荷包蛋，就踩的深一点，要想打远就站在沙子上。</li>
<li>控制挥杆大小和速度。 以左手臂举起的高度来控制挥杆大小，要打短沙坑球， 双脚踩入最深深度，球在后，重心在前，握短球杆，以微开的杆面击沙，以慢速度小幅度挥杆。要打长沙坑球，坏球位是不可能打出的。球在中央线左侧，双脚踩浅一点，重心稍微在球后，球杆正常握，做快速度大幅度挥杆。</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记4]]></title>
      <url>http://yoursite.com/2016/09/20/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B04/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记4"><a href="#最精华的高尔夫基础教学视频笔记4" class="headerlink" title="最精华的高尔夫基础教学视频笔记4"></a>最精华的高尔夫基础教学视频笔记4</h2><p>这一部分主要介绍了短杆。</p>
<h3 id="磨练短杆的四个方面"><a href="#磨练短杆的四个方面" class="headerlink" title="磨练短杆的四个方面"></a>磨练短杆的四个方面</h3><ul>
<li>好的球员是下挥击球，草皮在球前挖起。磨练短杆包括1、descending blow, 2、swing path, 3、swing considerations, 4、preparation.</li>
</ul>
<h3 id="descending-blow-下挥击球"><a href="#descending-blow-下挥击球" class="headerlink" title="descending blow. 下挥击球"></a>descending blow. 下挥击球</h3><ul>
<li><strong>要明白击球原理，球杆往下挥，打在球的背部，然后再向地面劈下。球会稍向杆面升起。而后产生倒旋。换句话说球杆打在球后，会使球顶部往后转，而倒旋效应使球飞起。不要有往上击打球，试图把球挑起来的行为，这样会导致非常差的击球效果。</strong>   由内侧下杆更容易下挥击球，球位靠后一些有助于内侧下杆，所以不要把球位放置太靠前。练习1:右脚尖触地，距离可能缩短，但是更有助于下挥击球。练习2: 双脚脚尖触地，右腿左压，左腿左倾，不发力半挥杆，感受下挥击球。<a id="more"></a></li>
</ul>
<h3 id="swing-path-挥杆路径"><a href="#swing-path-挥杆路径" class="headerlink" title="swing path. 挥杆路径"></a>swing path. 挥杆路径</h3><ul>
<li>挥杆由内侧上杆内侧下杆，球是在挥杆的椭圆轨迹中最远的一点。练习1:在球前方放置木条，间距尽量近，然后挥杆，一旦打到木条，则说明挥杆不正确。shank（相克）的产生是用球杆的杆面尾部，连接杆身的部分击打球，所以球向右飞。造成shank的原因有两点：1、挥杆轨迹太平，太绕着身体。2、肩膀和上身太主动，导致手臂向外挥出，由外而内下杆。总之shank球的出现都源自于挥杆路径的外移。练习2:单手击球，左右手单独击球，感觉内侧上杆内侧下杆，以击出高直的球为目标。</li>
</ul>
<h3 id="swing-considerations-挥杆考虑事项"><a href="#swing-considerations-挥杆考虑事项" class="headerlink" title="swing considerations. 挥杆考虑事项"></a>swing considerations. 挥杆考虑事项</h3><ul>
<li>挥杆前考虑挥杆中心位置，以使得圆弧底点在正确位置。球位不仅促使下挥击球，还有助于向内挥杆，重量分布尽量留在左边，有助于更多下挥击球。挥杆中，挥杆的弧度大小和杆头速度是影响每一支杆的击球距离。 一号木距身体远，短铁杆距身体近。一号木更像是扫击，较扁平的圆弧，更多脚部动作，更多转身，以配合球杆长度。6号铁杆需要较早曲腕，以更为高直的挥杆配合球与人的距离和杆头底角。站位开放，即左脚靠后一些。这样限制上杆幅度，提早曲腕，圆弧比一号木短，略垂直。9号铁杆需要更早曲腕，站位更加开放，更加垂直的挥杆，圆弧更短，以配合球杆的长度和杆头底角。  打高球挥杆中心要偏右， 站姿再右开一些，提早曲腕， 打底球，挥杆中心偏向左侧，站姿不那么右开，挥杆绕着身体，再往下击球。</li>
</ul>
<h3 id="preparation-预击准备"><a href="#preparation-预击准备" class="headerlink" title="preparation. 预击准备"></a>preparation. 预击准备</h3><ul>
<li><strong>球员开始击球前，最先要观察球的位置与草皮的关系，思考该球位将如何影响球飞向目标，以及球杆选择如何使球飞向目标。然后考虑目标区域周围的情况 ，找出沙坑的位置和果岭最好的推杆位置，再考虑舒服的挥杆力度。</strong> 四种不同的球位打法：1、埋在长草中的球，使球位靠后，击打时要双手前压，重心向前，偏左，提早曲腕，向下击球。2、球浮起在长草中，使球位靠前，不要下压球后的长草，重心在中间， 握杆变轻，要创造扫击式挥杆。 不提早曲腕，手和手臂保持压低，清爽击出球。3、球在球道凹痕中，使球位靠后，用较长的一根杆击打，挥杆比一般球位更高直，向下扎实击球。<em>下身流畅转移。最终感觉向下击球，且由内侧而下，回正杆面，保持平衡，短杆无忧。</em></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记3]]></title>
      <url>http://yoursite.com/2016/09/19/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B03/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记3"><a href="#最精华的高尔夫基础教学视频笔记3" class="headerlink" title="最精华的高尔夫基础教学视频笔记3"></a>最精华的高尔夫基础教学视频笔记3</h2><p>这一部分主要介绍了开球距离和方向。</p>
<h3 id="扎实的触球"><a href="#扎实的触球" class="headerlink" title="扎实的触球"></a>扎实的触球</h3><ul>
<li>用杆面中心击球。练习1:杆头触地，在杆头的正上方和正下方，放置两个tee，然后在两个tee之间试挥，不要打到任何一个tee，然后再把球放在两tee中间，将球击出。练习2:右脚站稳，左脚脚尖触地，配合合适的速度，保持平衡，把球击出，这样练习的击球更扎实，更稳定。</li>
</ul>
<h3 id="杆头速度"><a href="#杆头速度" class="headerlink" title="杆头速度"></a>杆头速度</h3><ul>
<li>movement，flexibility，freedom。杆头的速度完全来自于关节运动，灵活和自由。<a id="more"></a></li>
<li>高尔夫运动最伟大的动作之一就是手腕可以上下活动，双手一起活动可以加倍球杆速度。 手肘的弯曲运动是另一伟大动作，速度减慢的原因就是左手臂的紧绷，坚硬和僵直。练习1:手和腿同步摆动，左右交替反复。有助于增加协调性。练习2:用肩部作手臂挥杆，绕着身体上方。 练习3:把球杆放在身体前，让双手和双肩绕着身体挥动，先快后慢，由于是自由运动，所以可以保持平衡。手腕放松，手臂放松，尽情挥杆。是手和手臂的轻柔，让杆头速度非常快。 练习4:转换练习，手握着杆头，然后单手挥杆，确保自己没有被手腕和手肘卡住。速度由慢到快，找到自己的最快速度，然后再逐渐降慢，过程中维持节奏，平衡和自由。双手都做这样的运动，左手做的更多一些。练习5:全挥杆击打3个球，但是速度完全不同，第一个用1/3的速度，第二个用2/3的速度，第三个用将近75%的速度。上杆完全相同，下杆速度由慢到快。<strong>要记住是人控制球杆，绝对不是球杆控制人。</strong></li>
<li>你怎么知道你所能控制的最大速度是多少？<strong>尽最大力量去挥杆，但是要在保持平衡和杆面中心击球的前提下。</strong> 握杆太紧会丧失速度；握杆左右手关节要成直线，这样双手得到最大灵活度，否则造成不协同，会浪费距离；让手臂和肩膀不要感觉到压力，尽量放松。尤其是对手臂、手腕不要施加压力。手腕手臂的压力是随机反应而非刻意的。学会基本动作之后，不要强迫自己的身体，让一切自由发生。</li>
</ul>
<h3 id="平衡"><a href="#平衡" class="headerlink" title="平衡"></a>平衡</h3><ul>
<li>平衡与节奏，时机和同步有密切联系。高尔夫是身体每一个部分都在做贡献，要等化每个部分的关系，如果某个部分过度使用，另一部分未充分使用时，就会失去平衡。练习1:将左脚抬起，击球后保持平衡。然后将右脚抬起，继续击球后保持平衡。练习2:双手双腿做上下杆运动，让下身跟上上身的转动。</li>
<li>大肌肉群是肩、臀、腿。小肌肉群是指手，手指，手腕，手臂。保持平衡要协调小肌肉群配合大肌肉群。大肌肉群塑造平衡，小肌肉群营造速度。<strong>很多保持不了平衡的人是由于重心转移错误，或是用错肌肉群。只转动了肩膀，而没有转动脚和腿。</strong></li>
</ul>
<h3 id="挥杆路径"><a href="#挥杆路径" class="headerlink" title="挥杆路径"></a>挥杆路径</h3><ul>
<li>由外向内再向外是职业球员最喜欢用的路径。我们要明确球位，挥杆路径和近球角度。球位就是相对胸骨和脚的位置，挥杆路径就是挥杆内外的区别，近球角度就是平行地面，由下往上，由上往下的区别。球位会影响挥杆路径和近球角度。例如一号木应该球位靠前，如果球位靠后，则很容易上杆太向内侧，近球角度太平，导致球向右低飞。如果球位太靠前，会导致球杆由外向内，造成很陡的近球角度，导致球向左高飞。</li>
<li>长距离击球的表现就是球由右向左飞。最开始学习直球，然后再进化到小左曲球draw，最后可以学习职业球员打小右曲球fade。<strong>初学要避免由5点到11点的由外向内挥杆，保持由7点到1点的挥杆，手臂向右外挥出，双手转动杆头击出draw。</strong></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记2]]></title>
      <url>http://yoursite.com/2016/09/19/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B02/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记2"><a href="#最精华的高尔夫基础教学视频笔记2" class="headerlink" title="最精华的高尔夫基础教学视频笔记2"></a>最精华的高尔夫基础教学视频笔记2</h2><p>这一部分主要介绍了准备击球的基本动作。</p>
<h3 id="准备击球的五项基本动作"><a href="#准备击球的五项基本动作" class="headerlink" title="准备击球的五项基本动作."></a>准备击球的五项基本动作.</h3><ul>
<li>握杆grip，杆面瞄准aim，球的位置ball position，预备动作及矫正set up and alignment，所有流程的配合routine。</li>
</ul>
<h3 id="挥杆平面将决定球的方向。"><a href="#挥杆平面将决定球的方向。" class="headerlink" title="挥杆平面将决定球的方向。"></a>挥杆平面将决定球的方向。</h3><ul>
<li>在不补偿的情况下，如果由内向外，球向右，如果由外向内，球向左。<a id="more"></a></li>
<li>杆面击球的位置决定球飞行的弧线（slice和hook）。挥杆平面确认球的起飞方向，杆面状态确定球飞行弧度，握杆强弱式确定球的弹道高低。</li>
</ul>
<h3 id="握杆要领。"><a href="#握杆要领。" class="headerlink" title="握杆要领。"></a>握杆要领。</h3><ul>
<li>互锁式握杆（左手食指与右手小拇指交叉），十指式握杆（十指都握住球杆），重叠式握杆（右手小拇指放左手上放）。</li>
<li>左手手指关节握杆，由食指第二个关节到小拇指最后一个关节，左手拇指顶在握把的正中央，右手后三个手指关节握住球杆，食指和拇指扣住。如果食指和拇指的位置正确，就能控制上杆顶点球杆的角度。</li>
<li>采用中立握法，起杆在身体正右侧，杆面可以方正的对球并击出直线球。如果采用弱势握杆，左手握得太靠右，右手握得太高，则起杆更向外侧，杆面回到击球时向右开放，球会偏向右边，从左到右，slice。如果采用强势握杆，左手太靠右，右手太低，起杆时更向身体内侧，杆面回到击球时是左盖的，所以球会偏向左边，从右到左，hook。</li>
<li>握杆太弱势，球飞得太高，右高球，握杆太强势，球飞得太低，左低球。用右手的后三手指的最后关节握杆，然后靠近左手，能更好地控制球的方向和弹道。</li>
</ul>
<h3 id="杆面的瞄准。"><a href="#杆面的瞄准。" class="headerlink" title="杆面的瞄准。"></a>杆面的瞄准。</h3><ul>
<li>双眼瞄准目标线，然后把球杆杆面放在目标线正后方，然后身体依据球杆来调整，双手与球位平齐或稍在球前。练习1:用瞄准板或球杆来指向目标线，然后在上面垂直划一条线，再往球杆杆面划一条线，两条线重合即为瞄准目标。练习2:在太阳镜上贴纸，遮挡大部分面积，最上方漏出与目标线平行的一小部分，带上太阳镜后击球，眼睛里只有目标线。</li>
</ul>
<h3 id="球的位置。"><a href="#球的位置。" class="headerlink" title="球的位置。"></a>球的位置。</h3><ul>
<li>以胸骨或者衬衫纽扣作为基准，而不建议用双脚作为基准。<em>挥杆全部都是由内向外再向内。</em> 用短铁杆时，球在胸骨正下方，或稍右一点点，眼睛看到球正上方或球的前部一点，促使向下角度击球。用长铁时，球位要靠前一些，在胸骨的左下方，眼睛看到球的后方，感觉右眼正对球的后方。用球道木时，球位更靠前。一号木时，球位可以放在左脚跟或左脚跟内侧，胸骨对准球，右身比左身低，右眼看到球的更后方的部分，促使向上角度击球。</li>
<li>高个子打球，挥杆平面更垂直，球位较正常更靠前一些。 矮个字打球，挥杆平面更平，有点向后拉，球位较正常更靠后一点。</li>
</ul>
<h3 id="准备动作和矫正。"><a href="#准备动作和矫正。" class="headerlink" title="准备动作和矫正。"></a>准备动作和矫正。</h3><ul>
<li>如果重心转移好，可以站宽一些，如果转移比较差，可以站窄一些，利于内侧挥杆击球。球杆与身体的距离要保证球杆可以自由挥动，球杆越长离身体越远，以配合杆 身长度和杆面角度。</li>
<li>膝盖弯曲太多容易造成重心放在脚跟，会阻碍流畅的挥杆，身体也无法轻易转动，所以重心要放在两脚脚脚掌。</li>
<li><strong>三种站位姿势：1、一号木站位，右脚稍往后一点，使右臀在上杆中容易转动，容易达到由内而外的上杆，再由内浅平挥出击球。2、短铁杆站位，左脚稍往后一点，要限制上杆幅度，使双臂更为高直，击出高弹道的球。3、方正的站位，两脚平行，利于稳定击球。</strong></li>
<li>如果想挥出更平球，则左脚尖垂直目标，右脚稍靠后，脚尖指向右侧，利于身体向右转，利于内侧下杆。</li>
</ul>
<h3 id="总结。"><a href="#总结。" class="headerlink" title="总结。"></a>总结。</h3><ul>
<li>不同球杆采用不同的站位，球位，站姿宽度，膝盖弯曲及双臂下垂的位置。</li>
<li><strong>要形成击球前固定的流程，首先站在球后瞄准目标线，然后站在球左侧，双眼依然确定目标线，首先右脚垂直目标线，然后沿着目标线瞄准杆面，然后调整双脚和身体，晃一下球杆，感受杆头重量，然后挥杆。每次打球都要重复，利于稳定瞄准目标。</strong></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[最精华的高尔夫基础教学视频笔记1]]></title>
      <url>http://yoursite.com/2016/09/18/%E6%9C%80%E7%B2%BE%E5%8D%8E%E7%9A%84%E9%AB%98%E5%B0%94%E5%A4%AB%E5%9F%BA%E7%A1%80%E6%95%99%E5%AD%A6%E8%A7%86%E9%A2%91%E7%AC%94%E8%AE%B01/</url>
      <content type="html"><![CDATA[<h2 id="最精华的高尔夫基础教学视频笔记1"><a href="#最精华的高尔夫基础教学视频笔记1" class="headerlink" title="最精华的高尔夫基础教学视频笔记1"></a>最精华的高尔夫基础教学视频笔记1</h2><p>这一部分主要介绍了挥杆的真谛。</p>
<ul>
<li><a href="http://v.youku.com/v_show/id_XMTQ2ODY2NDI3Ng==.html?f=26682914" target="_blank" rel="external">全集视频在此</a></li>
</ul>
<h3 id="目标："><a href="#目标：" class="headerlink" title="目标："></a>目标：</h3><ul>
<li>先看目标再看球，看球的时候心里想着目标。推杆的目标是球洞，切杆的目标是果岭，开球的目标是落球区。两个要素为决定目标，击球方向和击球距离。不同的击球需要不同的击球角度，推杆的击球点发生在挥杆弧度的最低点，短铁杆的击球点发生在球杆仍在往下的过程中，长铁和木杆则需要水平至稍向上的角度击球。<a id="more"></a></li>
</ul>
<h3 id="挥杆1-手，手腕，前臂。"><a href="#挥杆1-手，手腕，前臂。" class="headerlink" title="挥杆1:手，手腕，前臂。"></a>挥杆1:手，手腕，前臂。</h3><ul>
<li>握杆要轻的足以感觉到杆头的重量。 手的作用是上杆弯曲，下杆打直，送杆弯曲。手腕保持柔软灵活。胳膊上杆左臂弯曲，右臂伸直，然后下杆双臂伸直，送杆左臂伸直，右臂弯曲，有利于击球方正，以最小的力量击出最大的距离。<strong>要牢记，距离不是来自绝对力量，而是来自杆头速度和击中甜蜜点。所以需要灵活自由流畅的挥杆。</strong> 练习1:在握把处插tee，上杆与送杆都指向球，有助于初步锻炼挥杆感觉。 练习2:木杆，坐在椅子的一角，右膝跪地，感觉在开车，上身保持固定，用最小的力量挥杆击球。有助于挥杆感觉。</li>
</ul>
<h3 id="挥杆2-挥动的手臂与肩膀。"><a href="#挥杆2-挥动的手臂与肩膀。" class="headerlink" title="挥杆2:挥动的手臂与肩膀。"></a>挥杆2:挥动的手臂与肩膀。</h3><ul>
<li><strong>以手臂和球杆的挥动来转动肩膀，</strong> 不要以肩膀为主导，不然会很僵硬紧绷。<strong>球杆的运动是由手和手臂来转动肩膀，挥杆不是由转动带来的，但是转动是由挥杆带来的。所以想打得更远不是更使劲，而是要增加挥杆距离，并且更加流畅。</strong> 练习1:肩膀瞄准目标后，侧身站立，正常挥杆。目的是减少身体的转动，<strong>迫使握把不在杆头之前通过球。</strong></li>
</ul>
<h3 id="挥杆3-转身，脚、腿和躯干。"><a href="#挥杆3-转身，脚、腿和躯干。" class="headerlink" title="挥杆3:转身，脚、腿和躯干。"></a>挥杆3:转身，脚、腿和躯干。</h3><ul>
<li><strong>以腿和膝盖的转动带动跨旋转，</strong> 上杆时左脚可以适当抬起，下杆时回到地面，送杆时右脚适当抬起。优秀球员的转体与挥杆协调一致，他们能依据挥杆的快慢来调整身体的转动，差的球员试图以身体带动球杆，顺序不对。 下身的转动有支撑和协助上身的转动的作用，可以让挥杆更灵活，还能感受到挥动中的球杆。上杆左膝指向球后，左脚跟可以抬起，右跨上提转动。下杆时左脚回到地面，重心从右向左移，重心移动时胯部回转，以支撑手臂的转动。下身转动的重心转移和支撑作用，使挥杆高度灵活，带来高速和扎实的击球。练习1:并腿练习挥杆，正常准备姿势，然后左腿向右并，然后上杆，然后下杆开始时，左腿回到初始位置。有利于练习重心的转移。练习2:机关枪击球，练习球杆挥动的感觉，增强上下协调的能力。</li>
</ul>
<h3 id="组合-挥杆的真谛。"><a href="#组合-挥杆的真谛。" class="headerlink" title="组合:挥杆的真谛。"></a>组合:挥杆的真谛。</h3><ul>
<li>手，手腕和前臂的弯曲打直，占到挥杆的40%；手臂与肩膀转动，占到挥杆的40%；下身转动，占到挥杆的20％。<strong>这三点带来了垂直，平行和旋转三度空间配合。</strong> 手，手腕与球杆垂直面有关， 手臂、腿与挥杆平行面有关，一侧到另一侧。肩膀和臀部与旋转有关。 <strong>释放球的概念在于，击球时球杆回到原来瞄球的位置。</strong> 杆头的划弧距离，手的上杆距离，以及胯的转动距离各不相同，要协调一致，回到原瞄球位置。<strong>总结：眼睛感觉目标，双手感觉球杆，双脚感觉地面。</strong></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[javascript中的call方法]]></title>
      <url>http://yoursite.com/2016/09/07/javascript%E4%B8%AD%E7%9A%84call%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>学习javascript的路上遇到一个难点，查询资料并总结如下：</p>
<h2 id="call-方法"><a href="#call-方法" class="headerlink" title="call 方法"></a>call 方法</h2><ul>
<li>参考例子于(<a href="http://www.cnblogs.com/guopei/archive/2011/04/17/2019045.html" target="_blank" rel="external">http://www.cnblogs.com/guopei/archive/2011/04/17/2019045.html</a>)</li>
<li>应用于：Function 对象</li>
<li>调用一个对象的一个方法，以另一个对象替换当前对象。call([thisObj[,arg1[, arg2[,   [,.argN]]]]])</li>
<li>参数：thisObj 可选项。将被用作当前对象的对象。 arg1, arg2, , argN 可选项。将被传递方法参数序列。</li>
<li>说明：call 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。如果没有提供 thisObj 参数，那么 Global 对象被用作 thisObj。<a id="more"></a></li>
</ul>
<h3 id="call方法举例说明。"><a href="#call方法举例说明。" class="headerlink" title="call方法举例说明。"></a>call方法举例说明。</h3><ul>
<li>1.在使用call时调用函数里有this</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'class1'</span>;</div><div class="line">    <span class="keyword">this</span>.showTxt = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="keyword">this</span>.name)&#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="keyword">this</span>.name = <span class="string">'class2'</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> class2 = <span class="keyword">new</span> Class2();</div><div class="line"><span class="keyword">var</span> class1 = <span class="keyword">new</span> Class1();</div><div class="line">class1.showTxt();<span class="comment">//class1</span></div><div class="line">class1.showTxt.call(class2);<span class="comment">//class2</span></div><div class="line">Class1.call(class2);</div><div class="line"><span class="built_in">console</span>.log(class2.showTxt);<span class="comment">//function()&#123;console.log(this.name)&#125;</span></div><div class="line">class2.showTxt();<span class="comment">//class1</span></div></pre></td></tr></table></figure>
<ul>
<li>Class1函数有一个方法showTxt，用来显示当前对象的name值。函数里的this.name是由Class1创建实例的name值，并不是Class1.name。</li>
<li>Class2函数里的this.name是由Class2创建实例的name值。</li>
<li>var class2 = new Class2();var class1 = new Class1();分别在Class1函数和Class2函数里各创建一个对象。</li>
<li>class1.showTxt(); 对象class1调用自身函数的showTxt方法，所以Class1中的this.name,this.showTxt里的this替换成了class1，所以就变成了class1.name=’class1’, class1.showTxt = …, 所以会返回class1。</li>
<li>class1.showTxt.call(class2); 之所以会返回class2是因为function(){console.log(this.name)}这里的this被call指定成了class2，变成了console.log(class2.name)，所以会返回class2。</li>
<li>Class1.call(class2); 函数Class1调用call方法，用对象class2替换对象class1，所以Class1中的this.name, this.showTxt里的this替换成了class2，所以就变成了class2.name=’class1’, class2.showTxt = …, 所以会返回class1。</li>
<li><p>注意：Class2函数里的this.name是由Class2创建实例的name值，并不是Class2.name。</p>
</li>
<li><p>2.使用call时调用函数里没有this</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a+b);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">sub</span>(<span class="params">a,b</span>)</span>&#123;</div><div class="line">    alert(a-b);</div><div class="line">&#125;</div><div class="line">add.call(sub,<span class="number">3</span>,<span class="number">1</span>);<span class="comment">//4</span></div></pre></td></tr></table></figure>
<ul>
<li>add.call(sub,3,1)在执行过程中，sub是add函数中this的替代品，但是因为add函数里没有用到this，直接返回的alert，所以sub函数被忽略，所以结果是4。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    alert(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    alert(<span class="number">2</span>)</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> f3 = f1.call;</div><div class="line">f1.call(f2);<span class="comment">//1</span></div><div class="line">f3.call(f2);<span class="comment">//2</span></div></pre></td></tr></table></figure>
<ul>
<li>f1.call(f2);与上例同理，f3.call(f2)等效于f1.call.call(f2)，f1.call执行过程中call中的this被f2替换成了f2.call();因为f2里没有this的引用所以执行结果是2.</li>
</ul>
<h3 id="call和apply方法的区别"><a href="#call和apply方法的区别" class="headerlink" title="call和apply方法的区别."></a>call和apply方法的区别.</h3><ul>
<li>前辈写的非常好<br>(<a href="http://www.cnblogs.com/fighting_cp/archive/2010/09/20/1831844.html" target="_blank" rel="external">http://www.cnblogs.com/fighting_cp/archive/2010/09/20/1831844.html</a>)</li>
<li>区分apply,call就一句话<br>foo.call(this, arg1,arg2,arg3) == foo.apply(this, arguments)==this.foo(arg1, arg2, arg3)</li>
<li>我们就上面的foo.call(this, arg1, arg2, arg3)展开分析.<br>foo是一个方法,this是方法执行时上下文相关对象,arg1, arg2, arg3是传给foo方法的参数.这里所谓的方法执行时上下文相关对象, 如果有面向对象的编程基础,那很好理解,就是在类实例化后对象中的this.<br>在JavaScript中,代码总是有一个上下文对象,代码处理该对象之内. 上下文对象是通过this变量来体现的, 这个this变量永远指向当前代码所处的对象中.</li>
<li>call, apply作用就是借用别人的方法来调用,就像调用自己的一样.</li>
<li>call, apply方法它们除了第一个参数,即执行时上下文对象相同外,call方法的其它参数将依次传递给借用的方法作参数,而apply就两个参数,第二个参数为一个数组传递.</li>
<li>当参数明确时可用call, 当参数不明确时可用apply给合arguments.</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[如何上传本地代码到github]]></title>
      <url>http://yoursite.com/2016/09/02/%E5%A6%82%E4%BD%95%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E4%BB%A3%E7%A0%81%E5%88%B0github/</url>
      <content type="html"><![CDATA[<p>在学习javascript的时候遇到了困难，卡了好多天一直无法解决。求助howard，对方希望我能将自己的代码传到github上再解决。我虽然早早注册过github，也用它绑定了hexo博客，但是依然不会如何上传，Google了方法，又试错了一个小时后，终于上传成功，在这里写下我查到的方法，以及我遇到的障碍和解决方法。</p>
<h2 id="第一步：将github账号与ssh连接"><a href="#第一步：将github账号与ssh连接" class="headerlink" title="第一步：将github账号与ssh连接"></a>第一步：将github账号与ssh连接</h2><p>最最最开始是一定要现有git。<br><br>首先去 <a href="https://github.com" target="_blank" rel="external">https://github.com</a>  申请账号。<br><br>然后创建ssh：打开终端检测是否存在ssh：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div></pre></td></tr></table></figure></p>
<p>如果存在，先将已有的ssh备份，或者将新建的ssh生成到另外的目录下。如果不存在，通过默认的参数直接生成ssh<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C xxxxx@gmail.com（注册github时的email）</div></pre></td></tr></table></figure></p>
<p>之后在github中添加ssh：<br><a id="more"></a><br>登陆github，选择Account Settings–&gt;SSH  Keys 添加ssh<br><br>Title：xxxxx@gmail.com<br><br>Key：打开你生成的id_rsa.pub文件，将其中内容拷贝至此。<br><br>最后打开终端，先测试一下你的帐号跟github连上没有：ssh -T git@github.com 如果出现如下提示，表示你连已经连上了.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi lovejennifer! You\<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></div></pre></td></tr></table></figure></p>
<h2 id="第二步：建立git仓库"><a href="#第二步：建立git仓库" class="headerlink" title="第二步：建立git仓库"></a>第二步：建立git仓库</h2><p>在你要上传的本地目录下，执行git命令。<!--more--></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> greet</div><div class="line">$ git init</div></pre></td></tr></table></figure>
<h2 id="第三步：将项目的所有文件添加到仓库中"><a href="#第三步：将项目的所有文件添加到仓库中" class="headerlink" title="第三步：将项目的所有文件添加到仓库中"></a>第三步：将项目的所有文件添加到仓库中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add .</div></pre></td></tr></table></figure>
<p>如果添加特定文件，把.换称文件名</p>
<h2 id="第四步：将add的文件commit到仓库"><a href="#第四步：将add的文件commit到仓库" class="headerlink" title="第四步：将add的文件commit到仓库"></a>第四步：将add的文件commit到仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"whatever"</span></div></pre></td></tr></table></figure>
<p>whatever可以改成任意词语，注释语句。</p>
<h2 id="第五步：建立自己的Repository"><a href="#第五步：建立自己的Repository" class="headerlink" title="第五步：建立自己的Repository"></a>第五步：建立自己的Repository</h2><p><img src="http://7xw72d.com1.z0.glb.clouddn.com/github1.png" alt="github1"></p>
<p>点击上图的Create repository之后，就可以看到下图界面，当然你可能只有README.md这个文件。点击clone and download复制https地址。<br><img src="http://7xw72d.com1.z0.glb.clouddn.com/github2.png" alt="github2"></p>
<h2 id="第六步：将本地的仓库关联到github上"><a href="#第六步：将本地的仓库关联到github上" class="headerlink" title="第六步：将本地的仓库关联到github上"></a>第六步：将本地的仓库关联到github上</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin https://github.com/lovejennifer/learnmagicjavascript.git</div></pre></td></tr></table></figure>
<p>后面的https链接地址换成你自己的仓库url地址。<br>这时可能会出现如下错误：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fatal: remote origin already exists</div></pre></td></tr></table></figure>
<p>执行以下语句即可：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git remote rm origin</div></pre></td></tr></table></figure>
<p>然后再次执行git remote…</p>
<h2 id="第七步：上传github之前，要先pull。"><a href="#第七步：上传github之前，要先pull。" class="headerlink" title="第七步：上传github之前，要先pull。"></a>第七步：上传github之前，要先pull。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull origin master</div></pre></td></tr></table></figure>
<ul>
<li>我就在这一点出了问题。可能你也会出现如下问题：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fatal: refusing to merge unrelated histories</div></pre></td></tr></table></figure>
<p>Google一下，找到如下解释</p>
<ul>
<li>“git merge” used to allow merging two branches that have no common base by default, which led to a brand new history of an existing project created and then get pulled by an unsuspecting maintainer, which allowed an unnecessary parallel history merged into the existing project.  The command has been taught not to allow this by default, with an escape hatch “–allow-unrelated-histories” option to be used in a rare event that merges histories of two projects that started their lives independently.</li>
<li>“git pull” has been taught to pass the “–allow-unrelated-histories” option to underlying “git merge”.</li>
</ul>
<p>解决方案如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull origin master --allow-unrelated-histories</div></pre></td></tr></table></figure>
<p>输入上述指令之后，立刻进入了vim编辑器。输入 : ，再输入 q! 退出即可。</p>
<ul>
<li>或者可能出现下面这个问题：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">You have not concluded your merge (MERGE_HEAD exists).</div><div class="line">Please, commit your changes before you can merge.</div></pre></td></tr></table></figure>
<p>错误可能是因为在你以前pull下来的代码没有自动合并导致的.</p>
<p>解决方案如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset --merge</div></pre></td></tr></table></figure>
<p>之后再pull。</p>
<h2 id="第八步，也是最后一步，上传代码到github远程仓库。"><a href="#第八步，也是最后一步，上传代码到github远程仓库。" class="headerlink" title="第八步，也是最后一步，上传代码到github远程仓库。"></a>第八步，也是最后一步，上传代码到github远程仓库。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push -u origin master</div></pre></td></tr></table></figure>
<p>最后，你可以去项目页面查看了，恭喜代码上传成功！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[半路出家如何学习Rails]]></title>
      <url>http://yoursite.com/2016/07/19/%E5%8D%8A%E8%B7%AF%E5%87%BA%E5%AE%B6%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0rails/</url>
      <content type="html"><![CDATA[<p>此篇为”How I Trained to learn Rails————A Guide to Learning Rails in 2 months”的译文，原文请点击<a href="https://medium.com/how-i-learned-Ruby-Rails/how-i-trained-to-learn-Rails-e08c94e2a51e#.ob1e4cfty" target="_blank" rel="external">原文</a>.<br>其实我也不是一点编程基础都没有，我很久以前曾经学习过VB这种老掉牙的基础知识。除此之外，毫无经验。我花两个月艰难地学习了Rails，没有睡眠，没有聚会，只有冰冷的代码。我禁止自己看与编程无关的视频和电视节目，我做的所有事情只有一个目的，那就是赶紧成为一名经验丰富的开发者，越快越好。我之前也了解过HTML和CSS，但是基本也都忘光了。我不得不重新开始学习HTML5和CSS3，在你学习Rails之前，你必须掌握这些基础技能。<a id="more"></a></p>
<p></p><h2>千万不要，在还没学习Ruby之前就直接学Rails</h2><br>当你开始学习一门语言的时候，总是会犯一些错误，并且在你成为成熟的开发者之后才会意识到。现在提前了解到这些错误，能帮助你节约大量的时间。<br>当我决定开始学习Ruby on Rails的时候，我读了很多博客，他们一些人都在说学习Rails不需要先学Ruby，可以顺便在Rails开发中学习。我现在完全不同意这一点，我当时意识到这个是因为看到了维基百科上关于Rails的定义，Rails是一个运行Ruby编程语言的开源应用框架。<a href="https://en.wikipedia.org/wiki/Ruby_on_Rails" target="_blank" rel="external">wiki</a><br>这个简单的句子，解释了精通Ruby是掌握Rails的关键。你在Rails框架上使用Ruby编程的，唯一的区别就是Rails框架能让你开发应用更加有组织性，更加便利。<br>如果你在学习Rails之前好好学习了一番Ruby，那么Rails的学习就是小菜一碟。无论你创建什么按钮或者行为，本源都是Ruby语言。同时，掌握Ruby还能让你更深入地理解Rails，可以直接看源代码去理解Rails的一些类和方法。<p></p>
<p></p><h2>为什么看了那么多教程还是不会？</h2><br>我在短时间内看了大量的书，读了很多教程，但并不是所有东西都是有帮助的。有些东西我学了之后非常的困惑，我列个清单给你们。<p></p>
<ul>
<li>博客经常让你困惑</li>
</ul>
<p>作为初学者，博客在教你学习Rails的时候经常让你困惑，一个最简单的原因就是，Ruby/Rails的不同实践取决于不同的版本。例如asset pipeline(资源管线)在Rails 3这个版本中出现，大多数博客都默认你已知这个东西。</p>
<ul>
<li>Ruby/Rails的版本问题</li>
</ul>
<p>Ruby是一个不断成长的语言，许多努力的天才仍然在不断提升它，Rails也一样。当语言和框架在提升的时候，一些细节也会随之改变。对于那些对于Ruby/Rails没有任何经验的初学者，寻找这些改动简直就是大海捞针。避免遇到这些困惑的最好办法就是在第一时间了解它们之间的区别是什么。阅读“发行笔记”，它包含了很多有用的信息，让你避免花大量时间去调试。<a href="http://edgeguides.RubyonRails.org/4_0_release_notes.HTML" target="_blank" rel="external">Here a link to the release note for Rails 4.</a></p>
<ul>
<li>在IRC上求助。(IRC全名为Internet Relay Chat，是一款即时聊天工具，没有国界限制，在国外黑客界非常流行)</li>
</ul>
<p>我已经用IRC14年了，直到我发现Rails之后，IRC一直都是我学习的方向。但是很多人在Ruby/Rails的频道中都非常没有耐心，非常粗鲁。我认为他们都忘记了作为新手的感觉。在IRC中聊天的人虽然都比较粗鲁，但是他们给了我很多非常棒的建议。例如学习Rails的时候，所有东西在书中都有；要自己寻找解答，要成为一个问题解决者；千万不要指望别人为你写代码，要自己搞清楚它们。很多问题都可以问google，IRC只适合你遇到非常晦涩的bug时来问咯。</p>
<p></p><h2>什么是有用的？</h2><p></p>
<ul>
<li>大量读书而不是看博客</li>
</ul>
<p><a href="https://pine.fm/LearnToProgram/" target="_blank" rel="external">Learning Programing by Chris Pine ( Read Online )</a><br>这本书是目前为止介绍Ruby最好的书。当我读Chris Pine这本书的时候我已经在网上读了大量的教程。这本书让我意识到了这就是我一直寻找的学习Ruby on Rails的最佳入门教程。Chris Pine非常通俗地解释了Ruby的概念，并且让你读完后就拥有了Ruby开发者的思考模式。可以免费阅读。<br><a href="http://learnRubythehardway.org/book/" target="_blank" rel="external">Learning Ruby the Hard Way</a><br>人们有不同的方式学习，就我个人而言，我喜欢挑战。读这本书强迫我面对问题并且找到方式解决它。它同时也让我更好的理解了Ruby语言，并且练习了多次。我阅读了每一章节并且在两周内完成了所有练习，之后我发现我对Ruby有了更加深刻的理解。<br><a href="https://www.amazon.com/Rails-Way-Addison-Wesley-Professional-Ruby-ebook/dp/B004G606IK/156-1478681-3116853?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=B004G606IK&amp;linkCode=as2&amp;redirect=true&amp;ref_=as_li_qf_sp_asin_tl&amp;tag=ricdxsmed-20" target="_blank" rel="external">The Rails Way by Obie Fernandez</a><br><a href="http://blog.obiefernandez.com/" target="_blank" rel="external">Obie Fernandez</a>写的所有东西都是最棒的。它是一个伟大的开发者同样也是一个非常会写学习书籍的作家。<br><a href="https://www.amazon.com/Ruby-Rails-Tutorial-Addison-Wesley-Professional/dp/0321832051?ie=UTF8&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0321832051&amp;linkCode=as2&amp;redirect=true&amp;ref_=as_li_qf_sp_asin_il_tl&amp;tag=ricdxsmed-20" target="_blank" rel="external">The Ruby on Rails 3 Tutorial: Learning by example</a><br>在学习社区的大多数人都推荐从这本书开始学习，我反而不会推荐任何人从这本书开始学习。在你熟悉了Ruby语言之后，你再开始学习Rails教程。这本书还教了你很多基础技能，包括Git,CSS,HTML和Rails。</p>
<ul>
<li>互动性网站</li>
</ul>
<p><a href="https://rubymonk.com/" target="_blank" rel="external">Rubymonk</a><br>Rubymonk把我带入了元编程的世界，帮助我理解了大量的Ruby方法。这是一个非常好的网站，让你在学习Rails之前提高你对Ruby的理解。<br><a href="http://www.codeschool.com/" target="_blank" rel="external">Codeschool</a><br>如果你没有基础知识，直接看Codeschool可能有些困难，这就是为什么我总是推荐一些学习Ruby和Rails一段时间的人看这个网站。我爱这个网站的原因是因为它更接近学习如何实战。它们有非常好的指导。当你看不同的教学视频的时候，要注意你应该提前下载好相对应的PDF文档，并且用这些文档来完成作业。Codeschool不是免费的，但大多数第一课的第一章节是免费的。会员费大概在25美刀。<br><a href="https://coderwall.com/" target="_blank" rel="external">Coderwall</a><br>我开始学习Coderwall上的大量技巧并且阅读社区里的文章，例如我学到了ruby中使用pluk方法用作查询的小技巧。一些开发者有一些特殊方式做事情，充满好奇心和热情去提高你已经知道的事情是非常好的。到最后，好的代码来自于更好的重构。<br><a href="http://www.railscasts.com/" target="_blank" rel="external">Railscasts</a><br>我现在可以自豪地说我已经看了Railscasts中的任何一章。当我学习Rails的时候，我用不同的gems至少建立了35个不同的app。Railscasts是一个能让我更好地熟悉这些gems的地方，并且学习如何更快的使用它们。Railscasts也教会了我一些有用的小事情。经常阅读评论，人们会增添解释和问题，使你为了应对他们不得不经常回顾这些课程。</p>
<ul>
<li>博客</li>
</ul>
<p>如果你是新手，博客不太有帮助，但是你一旦入门了，博客开始变得极其有帮助。特别是当你需要解决bugs或者提升对Rails的认识的时候。你将会发现无数可能使你更好的技巧和提示。</p>
<ul>
<li>千万不要复制／粘贴代码</li>
</ul>
<p>即使在今天，你仍然需要一行一行地手敲代码。它将帮助你记忆代码并且不断练习。当你学习新事物的时候，你必须不断练习，加深记忆。一定要这么做，你将记忆深刻。</p>
<ul>
<li>永远不要懒于用google查找</li>
</ul>
<p>每一位开发者必须掌握的技能就是用google查找。当你发现一个bug的时候或者你在建造东西的时候遇到困难，google都应该是你一个想到的。永远不要懒于用google查找解答。你很可能在google中得到你要的解答。另外我经常混的一个网站叫<a href="http://stackoverflow.com/" target="_blank" rel="external">Stackoverflow</a>，但是我总是在google论坛和博客中找到解答。你总会有一些忘记的或者需要再次确认的事情，这时google就派上用场了。你越早用谷歌和Stackoverflow，你将越早发现你从未遇到而别人早已经历的问题和解答方案。</p>
<ul>
<li>阅读帮助文档和源代码</li>
</ul>
<p>如果你的问题在网上没有好到任何解答，回去好好阅读帮助文档和源代码吧，因为这很可能是你有一些知识点根本没有理解。这种情况发生时，你最好回去看看源代码，探究一下背后的原理。阅读Rails的源代码非常有用。它将让你学到整个系统是怎样运转的。<br><a href="http://guides.rubyonrails.org/" target="_blank" rel="external">The Ruby on Rails Guide</a>是经常被低估的，大多数人忽视它。老实说，我第一次读的时候也不太在意它。要明白永远不要忽视Rails Guide，把它整个读完。永远不要以为你完全掌握了Rails，常常回过头来看看Rails Guide。回来看指南并不意味着你是愚蠢的，恰恰相反这是最明智的选择来更好地理解学到的东西。在读的过程中努力寻找那些困惑你的概念，反复阅读它，理解它。</p>
<p></p><h2>最后一点</h2><br>我之前每天早上赶去上班，在地铁上或是公车上经常阅读Ruby文档。随机阅读一些方法或者类。这个小练习能让你在回到电脑前编程时变得无比有效率。另外，如果你还不知道如何使用Terminal或者Prompt命令行，我建议你赶快熟悉它。你需要用它来安装<a href="http://www.ruby-lang.org/en/" target="_blank" rel="external">Ruby</a>，<a href="http://rubyonrails.org/" target="_blank" rel="external">Rails</a>，<a href="https://rvm.io/" target="_blank" rel="external">rvm</a>，<a href="http://brew.sh/" target="_blank" rel="external">homebrew</a>，包括如何配置环境变量也需要用到它。<p></p>
<p></p><h2>相关阅读：</h2><p></p>
<ol>
<li><p><a href="https://medium.com/p/45e7e776eef8" target="_blank" rel="external">RichCSS : A clean object oriented CSS framework.</a></p>
</li>
<li><p><a href="https://medium.com/how-i-learned-ruby-rails/how-to-land-your-first-ruby-on-rails-job-e01cd32eee49#.mnuf0d19u" target="_blank" rel="external">How to land your first Ruby on Rails job.</a></p>
</li>
<li><p><a href="https://medium.com/how-i-learned-ruby-rails/why-googling-is-the-most-important-skill-a-developer-must-have-d69b89b22218#.ap640wj5z" target="_blank" rel="external">Why Googling is the most important skill a developer <em>must</em> have.</a></p>
</li>
</ol>
<p>这篇原文文章已经有超过10万的阅读量了，希望更多人能看到它。<br><img src="http://7xw72d.com1.z0.glb.clouddn.com/ruby%20on%20rails1.png" alt="Ruby创始人的twitter截图"><br>原文作者 Richardson Dackam</p>
<p>FOLLOW HIM ON SOCIAL MEDIA</p>
<ul>
<li><a href="facebook.com/richardsondackam">facebook.com/richardsondackam</a></li>
<li><a href="twitter.com/richardsondx">twitter.com/richardsondx</a></li>
</ul>
<p>Richardson is a Senior Developer, Designer &amp; Maker +CEO of Rich DX Studio, a design &amp; web development studio located in Toronto that focuses on building products.</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[去哪儿寻找NBA最新资讯]]></title>
      <url>http://yoursite.com/2016/07/11/%E6%9B%B4%E5%A5%BD%E5%9C%B0%E4%BA%AB%E5%8F%97NBA/</url>
      <content type="html"><![CDATA[<p><strong>休赛期到了，一年一度的自由球员交易大门打开了，年年各队走马换将，今年也不例外，出现了Kevin Durant去哪儿和Dwyane Wade去哪儿的大戏。然而今年的戏份更多，由于工资帽的大幅提高，球员的薪水也是水涨船高，大合同比比皆是，让球迷惊叹美元不值钱了。那么如何最快速地了解这些最新的咨询？国内的新闻媒体都是24小时盯着什么地方在找消息，请听我娓娓道来。</strong></p>
<ol>
<li><p>NBA最强记者Adrian Wojnarowski，人称”沃神”，在今年(2016年)在雅虎体育旗下开通了他的篮球网站The Vertical： <a href="http://sports.yahoo.com/woj/" target="_blank" rel="external">这里</a>. <img src="http://7xw72d.com1.z0.glb.clouddn.com/NBA2.png" alt="The Vertical"><a id="more"></a></p>
</li>
<li><p>Twitter上，要注意分辨是否是谣言，当然关注The Vertical网站的记者们是靠谱的，当然他们发消息也都／@本公司TheVertical: <a href="https://twitter.com/TheVertical" target="_blank" rel="external">这里</a>.沃神的推: <a href="https://twitter.com/WojVertical" target="_blank" rel="external">这里</a>.NBA年仅21岁的著名帅哥记者Shams Charania: <a href="https://twitter.com/ShamsCharania" target="_blank" rel="external">这里</a>.拥有20年NBA管理经验的Bobby Marks: <a href="https://twitter.com/BobbyMarks42" target="_blank" rel="external">这里</a>.</p>
</li>
<li><p>当然想关注知名大网站也是个途径，大而全，信息多，慢慢找。<a href="http://www.nba.com/" target="_blank" rel="external">NBA官网</a>,<a href="http://espn.go.com" target="_blank" rel="external">ESPN</a>等等。</p>
</li>
<li><p>woj还有一个播客节目,每周三播出,<a href="https://itunes.apple.com/us/podcast/the-vertical-podcast-with-woj/id1065985281?mt=2" target="_blank" rel="external">The Vertical Podcast with Woj</a></p>
</li>
<li><p>要想及时看每队的球员薪金，球队工资帽等准确消息，请看雅虎体育的球队薪金一栏,<a href="http://sports.yahoo.com/nba/teams/hou/salary/" target="_blank" rel="external">点击这里</a>，以火箭为例。不知为何windows下的chrome看不了，其他浏览器均可。Mac下任意观看。<img src="http://7xw72d.com1.z0.glb.clouddn.com/NBA3.png" alt="Houston"></p>
</li>
<li><p>Reddit下的NBA板块也不容错过，网友们都很尽心尽力啊。<a href="https://www.reddit.com/r/nba/" target="_blank" rel="external">在这儿</a></p>
</li>
<li><p>英文NBA数据看<a href="http://www.hoopdata.com/" target="_blank" rel="external">hoopdata</a>,<br><a href="http://www.basketball-reference.com/" target="_blank" rel="external">basketball-reference</a>,<br><a href="http://www.82games.com/" target="_blank" rel="external">82games</a>,<br>中文NBA数据看<br><a href="http://www.stat-nba.com" target="_blank" rel="external">数据NBA</a>.</p>
</li>
<li><p>如果关注选秀，看 <a href="http://www.nbadraft.net/" target="_blank" rel="external">nbadraft</a>和<a href="http://www.draftexpress.com/" target="_blank" rel="external">draftexpress</a>.</p>
</li>
<li><p>虎扑篮球是国内最好的篮球网站，APP看篮球首选，方便及时，随走随看，<a href="http://nba.hupu.com/" target="_blank" rel="external">点击这里</a>。另外推荐<a href="https://nba.hupu.com/wiki/" target="_blank" rel="external">虎扑篮球百科</a>，虎扑良心作品，可见是对篮球的无限热爱。<img src="http://7xw72d.com1.z0.glb.clouddn.com/NBA1.png" alt="虎扑篮球百科"></p>
</li>
<li><p>NBA直播，国内就是腾讯NBA了，花大价钱买断了。当然少不了cctv5，当然水平也越来越不如腾讯的了。后来出了很多直播软件，网友们自己也开始直播NBA赛事了，腾讯自己就有企鹅直播，有时间延迟，比腾讯官方的慢几秒。如果你想找国外的，都是有版权的不好找啊，这时候你就借助一些大同小异的网站，比如<a href="http://www.azhibo.com/" target="_blank" rel="external">A直播</a>、<a href="http://www.zhiboba.tv/" target="_blank" rel="external">直播吧</a>等等。他们会告诉你哪里有国外直播的，忍受一些广告就能看了，而且没有延迟，比国内的速度快！这些大同小异的网站也能看录像，兴许有些还能下载。</p>
</li>
<li><p>您要是关注花边新闻，就看各个球星的推和ins吧，一定最先知道他们发生了啥。其他狗仔队网站就甭看了。等腾讯和虎扑给你翻译吧，他们也很热心关注！</p>
</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[令人惊叹的迪拜]]></title>
      <url>http://yoursite.com/2016/07/11/%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%8F%B9%E7%9A%84%E8%BF%AA%E6%8B%9C/</url>
      <content type="html"><![CDATA[<p>  女友去迪拜工作，拍照水平令人惊叹，当然迪拜的壮观也是在其他地方都难得一见的。<br>  以下是一些专卖店的商品，贵到没朋友，比迪士尼正品周边都贵！<a id="more"></a><br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai4.jpg" alt="玩偶"><br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai5.jpg" alt="运动衣"><br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai6.jpg" alt="挂件"><br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai7.jpg" alt="工服"><br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai8.jpg" alt="礼物"></p>
<p>  你看这个飞机像不像海豚，哈！<br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai9.jpg" alt="飞机"></p>
<p>  看到这么两本大厚书，第一感觉就是爽，能学到这么多知识，给人带来的精神刺激巨大！<br>  <img src="http://7xw72d.com1.z0.glb.clouddn.com/Dubai10.jpg" alt="书"></p>
<p>  顺便测试一下Gallery Post功能，感谢浏览！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Some website you can learn golf]]></title>
      <url>http://yoursite.com/2016/07/10/golf/</url>
      <content type="html"><![CDATA[<h2 id="Welcome-to-R-amp-A"><a href="#Welcome-to-R-amp-A" class="headerlink" title="Welcome to R&amp;A !"></a>Welcome to <a href="http://www.randa.org/" target="_blank" rel="external">R&amp;A</a> !</h2><h3 id="This-is-your-very-first-website-to-know-golf-Anyone-willing-to-learn-golf-must-know-the-spirit-of-golf-first"><a href="#This-is-your-very-first-website-to-know-golf-Anyone-willing-to-learn-golf-must-know-the-spirit-of-golf-first" class="headerlink" title="This is your very first website to know golf.Anyone willing to learn golf must know the spirit of golf first."></a>This is your very first website to know golf.Anyone willing to learn golf must know the spirit of golf first.<a id="more"></a></h3><blockquote>
<p>Golf is played, for the most part, without the supervision of a referee or umpire. The game relies on the integrity of the individual to show consideration for other players, care for the course and to abide by the Rules. All players should conduct themselves in a disciplined manner, demonstrating courtesy and sportsmanship at all times, irrespective of how competitive they may be.This is the spirit of the game of golf.</p>
</blockquote>
<h3 id="See-the-details-including-video-explained-click-Etiquette-Explained"><a href="#See-the-details-including-video-explained-click-Etiquette-Explained" class="headerlink" title="See the details including video explained, click Etiquette Explained!"></a>See the details including video explained, click <a href="http://www.randa.org/RulesEquipment/Etiquette/Behaviour-on-the-Course" target="_blank" rel="external">Etiquette Explained</a>!</h3><p>Check <a href="http://www.randa.org/RulesEquipment/Rules/Rules-Explorer" target="_blank" rel="external">Rules</a>for more golf rules.<br>Let me share two ways to learn rules of golf:</p>
<dl><br>  <dt>Definition</dt><br>  <dd>You should know the definitions well, even recite them.</dd><br>  <dt>Rules</dt><br>  <dd>Know one word:”Play the ball as it lies, play the course as you find it, and if you cannot do either, do what is fair. But to do what is fair, you need to know the Rules of Golf.” </dd><br>  <dd>Know the core value of rule:”1. care for others. 2. the decision should be<br>made in accordance with equity. 3. When meeting dilemma situation, get minimum interests of your own”</dd><br></dl>

<h2 id="Welcome-to-USGA"><a href="#Welcome-to-USGA" class="headerlink" title="Welcome to USGA!"></a>Welcome to <a href="http://www.usga.org/" target="_blank" rel="external">USGA</a>!</h2><h3 id="You-can-see-the-most-powerful-golf-country’s-official-website-It-also-include-rules-of-golf-even-you-can-see-the-whole-book"><a href="#You-can-see-the-most-powerful-golf-country’s-official-website-It-also-include-rules-of-golf-even-you-can-see-the-whole-book" class="headerlink" title="You can see the most powerful golf country’s official website.It also include rules of golf, even you can see the whole book"></a>You can see the most powerful golf country’s official website.It also include rules of golf, even you can see the <a href="http://www.usga.org/content/dam/usga/pdf/completerogbook.pdf" target="_blank" rel="external">whole book</a></h3><p>About more details, please find by yourselves.</p>
<p><strong>So, which website do you like ? please tell me your opinions.</strong></p>
<p>My favorite song recently, share with you!</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=411314536&auto=0&height=66"></iframe>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/07/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
